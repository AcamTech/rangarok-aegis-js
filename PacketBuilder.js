// 2010-08-03aRagexeRE/packetver 25? (26?)

var PacketBuilder = {
	
	// autogenerated:
	
	0x64: function PACKET_CA_LOGIN( struct ) {

		var buf = new ArrayBuffer( 55 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x64, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1e + p, struct.Passwd[i] ), i++, p += 1 );
		lp.setUint8( 0x36, struct.clienttype );

		return buf;
	},

	0x65: function PACKET_CH_ENTER( struct ) {

		var buf = new ArrayBuffer( 17 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x65, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.AuthCode, true );
		lp.setUint32( 0xa, struct.userLevel, true );
		lp.setUint16( 0xe, struct.clientType, true );
		lp.setUint8( 0x10, struct.Sex );

		return buf;
	},

	0x66: function PACKET_CH_SELECT_CHAR( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x66, true );
		lp.setUint8( 0x2, struct.CharNum );

		return buf;
	},

	0x67: function PACKET_CH_MAKE_CHAR( struct ) {

		var buf = new ArrayBuffer( 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x67, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.Str );
		lp.setUint8( 0x1b, struct.Agi );
		lp.setUint8( 0x1c, struct.Vit );
		lp.setUint8( 0x1d, struct.Int );
		lp.setUint8( 0x1e, struct.Dex );
		lp.setUint8( 0x1f, struct.Luk );
		lp.setUint8( 0x20, struct.CharNum );
		lp.setInt16( 0x21, struct.headPal, true );
		lp.setInt16( 0x23, struct.head, true );

		return buf;
	},

	0x68: function PACKET_CH_DELETE_CHAR( struct ) {

		var buf = new ArrayBuffer( 46 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x68, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x6 + p, struct.key[i] ), i++, p += 1 );

		return buf;
	},

	0x69: function PACKET_AC_ACCEPT_LOGIN( struct ) {

		var buf = new ArrayBuffer( 0x2f + struct.ServerList.length * 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x69, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.AuthCode, true );
		lp.setUint32( 0x8, struct.AID, true );
		lp.setUint32( 0xc, struct.userLevel, true );
		lp.setUint32( 0x10, struct.lastLoginIP, true );
		for( var p = 0, i = 0; i < 26; lp.setUint8( 0x14 + p, struct.lastLoginTime[i] ), i++, p += 1 );
		lp.setUint8( 0x2e, struct.Sex );

		// SERVER_ADDR ServerList
		for( var n = 0, p2 = 0; n < struct.ServerList.length; n++, p2 += 32 ) {
			lp.setUint32( 0x2f + p2, struct.ServerList[n].ip, true );
			lp.setInt16( 0x33 + p2, struct.ServerList[n].port, true );
			for( var p = 0, i = 0; i < 20; lp.setUint8( 0x35 + p2 + p, struct.ServerList[n].name[i] ), i++, p += 1 );
			lp.setUint16( 0x49 + p2, struct.ServerList[n].usercount, true );
			lp.setUint16( 0x4b + p2, struct.ServerList[n].state, true );
			lp.setUint16( 0x4d + p2, struct.ServerList[n].property, true );
		}

		return buf;
	},

	0x6a: function PACKET_AC_REFUSE_LOGIN( struct ) {

		var buf = new ArrayBuffer( 23 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6a, true );
		lp.setUint8( 0x2, struct.ErrorCode );
		for( var p = 0, i = 0; i < 20; lp.setUint8( 0x3 + p, struct.blockDate[i] ), i++, p += 1 );

		return buf;
	},

	0x6b: function PACKET_HC_ACCEPT_ENTER_NEO_UNION( struct ) {

		var buf = new ArrayBuffer( 0x1b + struct.charInfo.length * 144 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6b, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.TotalSlotNum );
		lp.setUint8( 0x5, struct.PremiumStartSlot );
		lp.setUint8( 0x6, struct.PremiumEndSlot );
		lp.setUint8( 0x7, struct.dummy1_beginbilling );
		lp.setUint32( 0x8, struct.code, true );
		lp.setUint32( 0xc, struct.time1, true );
		lp.setUint32( 0x10, struct.time2, true );
		for( var p = 0, i = 0; i < 7; lp.setUint8( 0x14 + p, struct.dummy2_endbilling[i] ), i++, p += 1 );

		// CHARACTER_INFO_NEO_UNION charInfo
		for( var n = 0, p2 = 0; n < struct.charInfo.length; n++, p2 += 144 ) {
			lp.setUint32( 0x1b + p2, struct.charInfo[n].GID, true );
			lp.setInt32( 0x1f + p2, struct.charInfo[n].exp, true );
			lp.setInt32( 0x23 + p2, struct.charInfo[n].money, true );
			lp.setInt32( 0x27 + p2, struct.charInfo[n].jobexp, true );
			lp.setInt32( 0x2b + p2, struct.charInfo[n].joblevel, true );
			lp.setInt32( 0x2f + p2, struct.charInfo[n].bodystate, true );
			lp.setInt32( 0x33 + p2, struct.charInfo[n].healthstate, true );
			lp.setInt32( 0x37 + p2, struct.charInfo[n].effectstate, true );
			lp.setInt32( 0x3b + p2, struct.charInfo[n].virtue, true );
			lp.setInt32( 0x3f + p2, struct.charInfo[n].honor, true );
			lp.setInt16( 0x43 + p2, struct.charInfo[n].jobpoint, true );
			lp.setInt32( 0x45 + p2, struct.charInfo[n].hp, true );
			lp.setInt32( 0x49 + p2, struct.charInfo[n].maxhp, true );
			lp.setInt16( 0x4d + p2, struct.charInfo[n].sp, true );
			lp.setInt16( 0x4f + p2, struct.charInfo[n].maxsp, true );
			lp.setInt16( 0x51 + p2, struct.charInfo[n].speed, true );
			lp.setInt16( 0x53 + p2, struct.charInfo[n].job, true );
			lp.setInt16( 0x55 + p2, struct.charInfo[n].head, true );
			lp.setInt16( 0x57 + p2, struct.charInfo[n].weapon, true );
			lp.setInt16( 0x59 + p2, struct.charInfo[n].level, true );
			lp.setInt16( 0x5b + p2, struct.charInfo[n].sppoint, true );
			lp.setInt16( 0x5d + p2, struct.charInfo[n].accessory, true );
			lp.setInt16( 0x5f + p2, struct.charInfo[n].shield, true );
			lp.setInt16( 0x61 + p2, struct.charInfo[n].accessory2, true );
			lp.setInt16( 0x63 + p2, struct.charInfo[n].accessory3, true );
			lp.setInt16( 0x65 + p2, struct.charInfo[n].headpalette, true );
			lp.setInt16( 0x67 + p2, struct.charInfo[n].bodypalette, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x69 + p2 + p, struct.charInfo[n].name[i] ), i++, p += 1 );
			lp.setUint8( 0x81 + p2, struct.charInfo[n].Str );
			lp.setUint8( 0x82 + p2, struct.charInfo[n].Agi );
			lp.setUint8( 0x83 + p2, struct.charInfo[n].Vit );
			lp.setUint8( 0x84 + p2, struct.charInfo[n].Int );
			lp.setUint8( 0x85 + p2, struct.charInfo[n].Dex );
			lp.setUint8( 0x86 + p2, struct.charInfo[n].Luk );
			lp.setUint8( 0x87 + p2, struct.charInfo[n].CharNum );
			lp.setUint8( 0x88 + p2, struct.charInfo[n].haircolor );
			lp.setInt16( 0x89 + p2, struct.charInfo[n].bIsChangedCharName, true );
			for( var p = 0, i = 0; i < 16; lp.setUint8( 0x8b + p2 + p, struct.charInfo[n].lastMap[i] ), i++, p += 1 );
			lp.setInt32( 0x9b + p2, struct.charInfo[n].DeleteDate, true );
			lp.setInt32( 0x9f + p2, struct.charInfo[n].Robe, true );
			lp.setInt32( 0xa3 + p2, struct.charInfo[n].SlotAddon, true );
			lp.setInt32( 0xa7 + p2, struct.charInfo[n].RenameAddon, true );
		}

		return buf;
	},

	0x6c: function PACKET_HC_REFUSE_ENTER( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6c, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x6d: function PACKET_HC_ACCEPT_MAKECHAR_NEO_UNION( struct ) {

		var buf = new ArrayBuffer( 114 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6d, true );

		// CHARACTER_INFO_NEO_UNION charinfo
		lp.setUint32( 0x2, struct.charinfo.GID, true );
		lp.setInt32( 0x6, struct.charinfo.exp, true );
		lp.setInt32( 0xa, struct.charinfo.money, true );
		lp.setInt32( 0xe, struct.charinfo.jobexp, true );
		lp.setInt32( 0x12, struct.charinfo.joblevel, true );
		lp.setInt32( 0x16, struct.charinfo.bodystate, true );
		lp.setInt32( 0x1a, struct.charinfo.healthstate, true );
		lp.setInt32( 0x1e, struct.charinfo.effectstate, true );
		lp.setInt32( 0x22, struct.charinfo.virtue, true );
		lp.setInt32( 0x26, struct.charinfo.honor, true );
		lp.setInt16( 0x2a, struct.charinfo.jobpoint, true );
		lp.setInt32( 0x2c, struct.charinfo.hp, true );
		lp.setInt32( 0x30, struct.charinfo.maxhp, true );
		lp.setInt16( 0x34, struct.charinfo.sp, true );
		lp.setInt16( 0x36, struct.charinfo.maxsp, true );
		lp.setInt16( 0x38, struct.charinfo.speed, true );
		lp.setInt16( 0x3a, struct.charinfo.job, true );
		lp.setInt16( 0x3c, struct.charinfo.head, true );
		lp.setInt16( 0x3e, struct.charinfo.weapon, true );
		lp.setInt16( 0x40, struct.charinfo.level, true );
		lp.setInt16( 0x42, struct.charinfo.sppoint, true );
		lp.setInt16( 0x44, struct.charinfo.accessory, true );
		lp.setInt16( 0x46, struct.charinfo.shield, true );
		lp.setInt16( 0x48, struct.charinfo.accessory2, true );
		lp.setInt16( 0x4a, struct.charinfo.accessory3, true );
		lp.setInt16( 0x4c, struct.charinfo.headpalette, true );
		lp.setInt16( 0x4e, struct.charinfo.bodypalette, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x50 + p, struct.charinfo.name[i] ), i++, p += 1 );
		lp.setUint8( 0x68, struct.charinfo.Str );
		lp.setUint8( 0x69, struct.charinfo.Agi );
		lp.setUint8( 0x6a, struct.charinfo.Vit );
		lp.setUint8( 0x6b, struct.charinfo.Int );
		lp.setUint8( 0x6c, struct.charinfo.Dex );
		lp.setUint8( 0x6d, struct.charinfo.Luk );
		lp.setUint8( 0x6e, struct.charinfo.CharNum );
		lp.setUint8( 0x6f, struct.charinfo.haircolor );
		lp.setInt16( 0x70, struct.charinfo.bIsChangedCharName, true );

		return buf;
	},

	0x6e: function PACKET_HC_REFUSE_MAKECHAR( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6e, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x6f: function PACKET_HC_ACCEPT_DELETECHAR( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x6f, true );

		return buf;
	},

	0x70: function PACKET_HC_REFUSE_DELETECHAR( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x70, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x71: function PACKET_HC_NOTIFY_ZONESVR( struct ) {

		var buf = new ArrayBuffer( 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x71, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x6 + p, struct.mapName[i] ), i++, p += 1 );

		// ZSERVER_ADDR addr
		lp.setUint32( 0x16, struct.addr.ip, true );
		lp.setInt16( 0x1a, struct.addr.port, true );

		return buf;
	},

	0x72: function PACKET_CZ_ENTER( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x72, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.AuthCode, true );
		lp.setUint32( 0xe, struct.clientTime, true );
		lp.setUint8( 0x12, struct.Sex );

		return buf;
	},

	0x73: function PACKET_ZC_ACCEPT_ENTER( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x73, true );
		lp.setUint32( 0x2, struct.startTime, true );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x6 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x9, struct.xSize );
		lp.setUint8( 0xa, struct.ySize );

		return buf;
	},

	0x74: function PACKET_ZC_REFUSE_ENTER( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x74, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x75: function PACKET_ZC_NOTIFY_INITCHAR( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x75, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.GID, true );
		lp.setInt16( 0x8, struct.Style, true );
		lp.setUint8( 0xa, struct.Item );

		return buf;
	},

	0x76: function PACKET_ZC_NOTIFY_UPDATECHAR( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x76, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.Style, true );
		lp.setUint8( 0x8, struct.Item );

		return buf;
	},

	0x77: function PACKET_ZC_NOTIFY_UPDATEPLAYER( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x77, true );
		lp.setInt16( 0x2, struct.Style, true );
		lp.setUint8( 0x4, struct.Item );

		return buf;
	},

	0x78: function PACKET_ZC_NOTIFY_STANDENTRY( struct ) {

		var buf = new ArrayBuffer( 55 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x78, true );
		lp.setUint8( 0x2, struct.objecttype );
		lp.setUint32( 0x3, struct.GID, true );
		lp.setInt16( 0x7, struct.speed, true );
		lp.setInt16( 0x9, struct.bodyState, true );
		lp.setInt16( 0xb, struct.healthState, true );
		lp.setInt16( 0xd, struct.effectState, true );
		lp.setInt16( 0xf, struct.job, true );
		lp.setInt16( 0x11, struct.head, true );
		lp.setInt16( 0x13, struct.weapon, true );
		lp.setInt16( 0x15, struct.accessory, true );
		lp.setInt16( 0x17, struct.shield, true );
		lp.setInt16( 0x19, struct.accessory2, true );
		lp.setInt16( 0x1b, struct.accessory3, true );
		lp.setInt16( 0x1d, struct.headpalette, true );
		lp.setInt16( 0x1f, struct.bodypalette, true );
		lp.setInt16( 0x21, struct.headDir, true );
		lp.setUint32( 0x23, struct.GUID, true );
		lp.setInt16( 0x27, struct.GEmblemVer, true );
		lp.setInt16( 0x29, struct.honor, true );
		lp.setInt16( 0x2b, struct.virtue, true );
		lp.setUint8( 0x2d, struct.isPKModeON );
		lp.setUint8( 0x2e, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2f + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x32, struct.xSize );
		lp.setUint8( 0x33, struct.ySize );
		lp.setUint8( 0x34, struct.state );
		lp.setInt16( 0x35, struct.clevel, true );

		return buf;
	},

	0x79: function PACKET_ZC_NOTIFY_NEWENTRY( struct ) {

		var buf = new ArrayBuffer( 53 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x79, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt16( 0x12, struct.weapon, true );
		lp.setInt16( 0x14, struct.accessory, true );
		lp.setInt16( 0x16, struct.shield, true );
		lp.setInt16( 0x18, struct.accessory2, true );
		lp.setInt16( 0x1a, struct.accessory3, true );
		lp.setInt16( 0x1c, struct.headpalette, true );
		lp.setInt16( 0x1e, struct.bodypalette, true );
		lp.setInt16( 0x20, struct.headDir, true );
		lp.setUint32( 0x22, struct.GUID, true );
		lp.setInt16( 0x26, struct.GEmblemVer, true );
		lp.setInt16( 0x28, struct.honor, true );
		lp.setInt16( 0x2a, struct.virtue, true );
		lp.setUint8( 0x2c, struct.isPKModeON );
		lp.setUint8( 0x2d, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2e + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x31, struct.xSize );
		lp.setUint8( 0x32, struct.ySize );
		lp.setInt16( 0x33, struct.clevel, true );

		return buf;
	},

	0x7a: function PACKET_ZC_NOTIFY_ACTENTRY( struct ) {

		var buf = new ArrayBuffer( 58 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7a, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt16( 0x12, struct.weapon, true );
		lp.setInt16( 0x14, struct.accessory, true );
		lp.setInt16( 0x16, struct.shield, true );
		lp.setInt16( 0x18, struct.accessory2, true );
		lp.setInt16( 0x1a, struct.accessory3, true );
		lp.setInt16( 0x1c, struct.headpalette, true );
		lp.setInt16( 0x1e, struct.bodypalette, true );
		lp.setInt16( 0x20, struct.headDir, true );
		lp.setUint32( 0x22, struct.GUID, true );
		lp.setInt16( 0x26, struct.GEmblemVer, true );
		lp.setInt16( 0x28, struct.honor, true );
		lp.setInt16( 0x2a, struct.virtue, true );
		lp.setUint8( 0x2c, struct.isPKModeON );
		lp.setUint8( 0x2d, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2e + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x31, struct.xSize );
		lp.setUint8( 0x32, struct.ySize );
		lp.setUint8( 0x33, struct.action );
		lp.setUint32( 0x34, struct.actStartTime, true );
		lp.setInt16( 0x38, struct.clevel, true );

		return buf;
	},

	0x7b: function PACKET_ZC_NOTIFY_MOVEENTRY( struct ) {

		var buf = new ArrayBuffer( 60 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7b, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt16( 0x12, struct.weapon, true );
		lp.setInt16( 0x14, struct.accessory, true );
		lp.setUint32( 0x16, struct.moveStartTime, true );
		lp.setInt16( 0x1a, struct.shield, true );
		lp.setInt16( 0x1c, struct.accessory2, true );
		lp.setInt16( 0x1e, struct.accessory3, true );
		lp.setInt16( 0x20, struct.headpalette, true );
		lp.setInt16( 0x22, struct.bodypalette, true );
		lp.setInt16( 0x24, struct.headDir, true );
		lp.setUint32( 0x26, struct.GUID, true );
		lp.setInt16( 0x2a, struct.GEmblemVer, true );
		lp.setInt16( 0x2c, struct.honor, true );
		lp.setInt16( 0x2e, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x32 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint8( 0x38, struct.xSize );
		lp.setUint8( 0x39, struct.ySize );
		lp.setInt16( 0x3a, struct.clevel, true );

		return buf;
	},

	0x7c: function PACKET_ZC_NOTIFY_STANDENTRY_NPC( struct ) {

		var buf = new ArrayBuffer( 42 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7c, true );
		lp.setUint8( 0x2, struct.objecttype );
		lp.setUint32( 0x3, struct.GID, true );
		lp.setInt16( 0x7, struct.speed, true );
		lp.setInt16( 0x9, struct.bodyState, true );
		lp.setInt16( 0xb, struct.healthState, true );
		lp.setInt16( 0xd, struct.effectState, true );
		lp.setInt16( 0xf, struct.head, true );
		lp.setInt16( 0x11, struct.weapon, true );
		lp.setInt16( 0x13, struct.accessory, true );
		lp.setInt16( 0x15, struct.job, true );
		lp.setInt16( 0x17, struct.shield, true );
		lp.setInt16( 0x19, struct.accessory2, true );
		lp.setInt16( 0x1b, struct.accessory3, true );
		lp.setInt16( 0x1d, struct.headpalette, true );
		lp.setInt16( 0x1f, struct.bodypalette, true );
		lp.setInt16( 0x21, struct.headDir, true );
		lp.setUint8( 0x23, struct.isPKModeON );
		lp.setUint8( 0x24, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x25 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x28, struct.xSize );
		lp.setUint8( 0x29, struct.ySize );

		return buf;
	},

	0x7d: function PACKET_CZ_NOTIFY_ACTORINIT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d, true );

		return buf;
	},

	0x7e: function PACKET_CZ_REQUEST_TIME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e, true );
		lp.setUint32( 0x2, struct.clientTime, true );

		return buf;
	},

	0x7f: function PACKET_ZC_NOTIFY_TIME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f, true );
		lp.setUint32( 0x2, struct.time, true );

		return buf;
	},

	0x80: function PACKET_ZC_NOTIFY_VANISH( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );

		return buf;
	},

	0x81: function PACKET_SC_NOTIFY_BAN( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x82: function PACKET_CZ_REQUEST_QUIT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x82, true );

		return buf;
	},

	0x83: function PACKET_ZC_ACCEPT_QUIT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83, true );

		return buf;
	},

	0x84: function PACKET_ZC_REFUSE_QUIT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x84, true );

		return buf;
	},

	0x85: function PACKET_CZ_REQUEST_MOVE( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x85, true );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2 + p, struct.dest[i] ), i++, p += 1 );

		return buf;
	},

	0x86: function PACKET_ZC_NOTIFY_MOVE( struct ) {

		var buf = new ArrayBuffer( 16 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x86, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x6 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint32( 0xc, struct.moveStartTime, true );

		return buf;
	},

	0x87: function PACKET_ZC_NOTIFY_PLAYERMOVE( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x87, true );
		lp.setUint32( 0x2, struct.moveStartTime, true );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x6 + p, struct.MoveData[i] ), i++, p += 1 );

		return buf;
	},

	0x88: function PACKET_ZC_STOPMOVE( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x88, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );

		return buf;
	},

	0x89: function PACKET_CZ_REQUEST_ACT( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x89, true );
		lp.setUint32( 0x2, struct.targetGID, true );
		lp.setUint8( 0x6, struct.action );

		return buf;
	},

	0x8a: function PACKET_ZC_NOTIFY_ACT( struct ) {

		var buf = new ArrayBuffer( 29 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x8a, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint32( 0x6, struct.targetGID, true );
		lp.setUint32( 0xa, struct.startTime, true );
		lp.setInt32( 0xe, struct.attackMT, true );
		lp.setInt32( 0x12, struct.attackedMT, true );
		lp.setInt16( 0x16, struct.damage, true );
		lp.setInt16( 0x18, struct.count, true );
		lp.setUint8( 0x1a, struct.action );
		lp.setInt16( 0x1b, struct.leftDamage, true );

		return buf;
	},

	0x8b: function PACKET_ZC_NOTIFY_ACT_POSITION( struct ) {

		var buf = new ArrayBuffer( 23 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x8b, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint32( 0x6, struct.targetGID, true );
		lp.setUint32( 0xa, struct.startTime, true );
		lp.setInt16( 0xe, struct.xPos, true );
		lp.setInt16( 0x10, struct.yPos, true );
		lp.setInt16( 0x12, struct.damage, true );
		lp.setInt16( 0x14, struct.count, true );
		lp.setUint8( 0x16, struct.action );

		return buf;
	},

	0x8c: function PACKET_CZ_REQUEST_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x8c, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x8d: function PACKET_ZC_NOTIFY_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x8d, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.GID, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x8 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x8e: function PACKET_ZC_NOTIFY_PLAYERCHAT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x8e, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x8f: function PACKET_SERVER_ENTRY_ACK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, struct.Header, true );
		lp.setInt32( 0x2, struct.AID, true );

		return buf;
	},

	0x90: function PACKET_CZ_CONTACTNPC( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x90, true );
		lp.setUint32( 0x2, struct.NAID, true );
		lp.setUint8( 0x6, struct.type );

		return buf;
	},

	0x91: function PACKET_ZC_NPCACK_MAPMOVE( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x91, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x2 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setInt16( 0x12, struct.xPos, true );
		lp.setInt16( 0x14, struct.yPos, true );

		return buf;
	},

	0x92: function PACKET_ZC_NPCACK_SERVERMOVE( struct ) {

		var buf = new ArrayBuffer( 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x92, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x2 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setInt16( 0x12, struct.xPos, true );
		lp.setInt16( 0x14, struct.yPos, true );

		// ZSERVER_ADDR addr
		lp.setUint32( 0x16, struct.addr.ip, true );
		lp.setInt16( 0x1a, struct.addr.port, true );

		return buf;
	},

	0x93: function PACKET_ZC_NPCACK_ENABLE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x93, true );

		return buf;
	},

	0x94: function PACKET_CZ_REQNAME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x94, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x95: function PACKET_ZC_ACK_REQNAME( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x95, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.CName[i] ), i++, p += 1 );

		return buf;
	},

	0x96: function PACKET_CZ_WHISPER( struct ) {

		var buf = new ArrayBuffer( 0x2c + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x96, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.receiver[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x2c + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x97: function PACKET_ZC_WHISPER( struct ) {

		var buf = new ArrayBuffer( 0x2c + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x97, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.sender[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x2c + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x98: function PACKET_ZC_ACK_WHISPER( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x98, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x99: function PACKET_CZ_BROADCAST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x99, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x9a: function PACKET_ZC_BROADCAST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9a, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x9b: function PACKET_CZ_CHANGE_DIRECTION( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9b, true );
		lp.setInt16( 0x2, struct.headDir, true );
		lp.setUint8( 0x4, struct.dir );

		return buf;
	},

	0x9c: function PACKET_ZC_CHANGE_DIRECTION( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9c, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.headDir, true );
		lp.setUint8( 0x8, struct.dir );

		return buf;
	},

	0x9d: function PACKET_ZC_ITEM_ENTRY( struct ) {

		var buf = new ArrayBuffer( 17 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9d, true );
		lp.setUint32( 0x2, struct.ITAID, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setInt16( 0x9, struct.xPos, true );
		lp.setInt16( 0xb, struct.yPos, true );
		lp.setInt16( 0xd, struct.count, true );
		lp.setUint8( 0xf, struct.subX );
		lp.setUint8( 0x10, struct.subY );

		return buf;
	},

	0x9e: function PACKET_ZC_ITEM_FALL_ENTRY( struct ) {

		var buf = new ArrayBuffer( 17 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9e, true );
		lp.setUint32( 0x2, struct.ITAID, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setInt16( 0x9, struct.xPos, true );
		lp.setInt16( 0xb, struct.yPos, true );
		lp.setUint8( 0xd, struct.subX );
		lp.setUint8( 0xe, struct.subY );
		lp.setInt16( 0xf, struct.count, true );

		return buf;
	},

	0x9f: function PACKET_CZ_ITEM_PICKUP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x9f, true );
		lp.setUint32( 0x2, struct.ITAID, true );

		return buf;
	},

	0xa0: function PACKET_ZC_ITEM_PICKUP_ACK( struct ) {

		var buf = new ArrayBuffer( 23 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa0, true );
		lp.setUint16( 0x2, struct.Index, true );
		lp.setUint16( 0x4, struct.count, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setUint8( 0x9, struct.IsDamaged );
		lp.setUint8( 0xa, struct.refiningLevel );

		// EQUIPSLOTINFOEQUIPSLOTINFO slot
		lp.setUint16( 0xb, struct.slot.card1, true );
		lp.setUint16( 0xd, struct.slot.card2, true );
		lp.setUint16( 0xf, struct.slot.card3, true );
		lp.setUint16( 0x11, struct.slot.card4, true );
		lp.setUint16( 0x13, struct.location, true );
		lp.setUint8( 0x15, struct.type );
		lp.setUint8( 0x16, struct.result );

		return buf;
	},

	0xa1: function PACKET_ZC_ITEM_DISAPPEAR( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa1, true );
		lp.setUint32( 0x2, struct.ITAID, true );

		return buf;
	},

	0xa2: function PACKET_CZ_ITEM_THROW( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa2, true );
		lp.setUint16( 0x2, struct.Index, true );
		lp.setInt16( 0x4, struct.count, true );

		return buf;
	},

	0xa3: function PACKET_ZC_NORMAL_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa3, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 10 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.itemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
		}

		return buf;
	},

	0xa4: function PACKET_ZC_EQUIPMENT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa4, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 20 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.itemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.itemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.itemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO itemInfo.slot
			lp.setUint16( 0x10 + p2, struct.itemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.itemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.itemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.itemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0xa5: function PACKET_ZC_STORE_NORMAL_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa5, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 10 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.itemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
		}

		return buf;
	},

	0xa6: function PACKET_ZC_STORE_EQUIPMENT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa6, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 20 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.itemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.itemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.itemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO itemInfo.slot
			lp.setUint16( 0x10 + p2, struct.itemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.itemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.itemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.itemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0xa7: function PACKET_CZ_USE_ITEM( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa7, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint32( 0x4, struct.AID, true );

		return buf;
	},

	0xa8: function PACKET_ZC_USE_ITEM_ACK( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa8, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setInt16( 0x4, struct.count, true );
		lp.setUint8( 0x6, struct.result );

		return buf;
	},

	0xa9: function PACKET_CZ_REQ_WEAR_EQUIP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xa9, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint16( 0x4, struct.wearLocation, true );

		return buf;
	},

	0xaa: function PACKET_ZC_REQ_WEAR_EQUIP_ACK( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xaa, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint16( 0x4, struct.wearLocation, true );
		lp.setUint8( 0x6, struct.result );

		return buf;
	},

	0xab: function PACKET_CZ_REQ_TAKEOFF_EQUIP( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xab, true );
		lp.setUint16( 0x2, struct.index, true );

		return buf;
	},

	0xac: function PACKET_ZC_REQ_TAKEOFF_EQUIP_ACK( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xac, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint16( 0x4, struct.wearLocation, true );
		lp.setUint8( 0x6, struct.result );

		return buf;
	},

	0xaf: function PACKET_ZC_ITEM_THROW_ACK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xaf, true );
		lp.setUint16( 0x2, struct.Index, true );
		lp.setInt16( 0x4, struct.count, true );

		return buf;
	},

	0xb0: function PACKET_ZC_PAR_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb0, true );
		lp.setUint16( 0x2, struct.varID, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0xb1: function PACKET_ZC_LONGPAR_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb1, true );
		lp.setUint16( 0x2, struct.varID, true );
		lp.setInt32( 0x4, struct.amount, true );

		return buf;
	},

	0xb2: function PACKET_CZ_RESTART( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb2, true );
		lp.setUint8( 0x2, struct.type );

		return buf;
	},

	0xb3: function PACKET_ZC_RESTART_ACK( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb3, true );
		lp.setUint8( 0x2, struct.type );

		return buf;
	},

	0xb4: function PACKET_ZC_SAY_DIALOG( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb4, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.NAID, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x8 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0xb5: function PACKET_ZC_WAIT_DIALOG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb5, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0xb6: function PACKET_ZC_CLOSE_DIALOG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb6, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0xb7: function PACKET_ZC_MENU_LIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.NAID, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x8 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0xb8: function PACKET_CZ_CHOOSE_MENU( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb8, true );
		lp.setUint32( 0x2, struct.NAID, true );
		lp.setUint8( 0x6, struct.num );

		return buf;
	},

	0xb9: function PACKET_CZ_REQ_NEXT_SCRIPT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xb9, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0xba: function PACKET_CZ_REQ_STATUS( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xba, true );

		return buf;
	},

	0xbb: function PACKET_CZ_STATUS_CHANGE( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xbb, true );
		lp.setUint16( 0x2, struct.statusID, true );
		lp.setUint8( 0x4, struct.changeAmount );

		return buf;
	},

	0xbc: function PACKET_ZC_STATUS_CHANGE_ACK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xbc, true );
		lp.setUint16( 0x2, struct.statusID, true );
		lp.setUint8( 0x4, struct.result );
		lp.setUint8( 0x5, struct.value );

		return buf;
	},

	0xbd: function PACKET_ZC_STATUS( struct ) {

		var buf = new ArrayBuffer( 44 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xbd, true );
		lp.setInt16( 0x2, struct.point, true );
		lp.setUint8( 0x4, struct.str );
		lp.setUint8( 0x5, struct.standardStr );
		lp.setUint8( 0x6, struct.agi );
		lp.setUint8( 0x7, struct.standardAgi );
		lp.setUint8( 0x8, struct.vit );
		lp.setUint8( 0x9, struct.standardVit );
		lp.setUint8( 0xa, struct.Int );
		lp.setUint8( 0xb, struct.standardInt );
		lp.setUint8( 0xc, struct.dex );
		lp.setUint8( 0xd, struct.standardDex );
		lp.setUint8( 0xe, struct.luk );
		lp.setUint8( 0xf, struct.standardLuk );
		lp.setInt16( 0x10, struct.attPower, true );
		lp.setInt16( 0x12, struct.refiningPower, true );
		lp.setInt16( 0x14, struct.max_mattPower, true );
		lp.setInt16( 0x16, struct.min_mattPower, true );
		lp.setInt16( 0x18, struct.itemdefPower, true );
		lp.setInt16( 0x1a, struct.plusdefPower, true );
		lp.setInt16( 0x1c, struct.mdefPower, true );
		lp.setInt16( 0x1e, struct.plusmdefPower, true );
		lp.setInt16( 0x20, struct.hitSuccessValue, true );
		lp.setInt16( 0x22, struct.avoidSuccessValue, true );
		lp.setInt16( 0x24, struct.plusAvoidSuccessValue, true );
		lp.setInt16( 0x26, struct.criticalSuccessValue, true );
		lp.setInt16( 0x28, struct.ASPD, true );
		lp.setInt16( 0x2a, struct.plusASPD, true );

		return buf;
	},

	0xbe: function PACKET_ZC_STATUS_CHANGE( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xbe, true );
		lp.setUint16( 0x2, struct.statusID, true );
		lp.setUint8( 0x4, struct.value );

		return buf;
	},

	0xbf: function PACKET_CZ_REQ_EMOTION( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xbf, true );
		lp.setUint8( 0x2, struct.type );

		return buf;
	},

	0xc0: function PACKET_ZC_EMOTION( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc0, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );

		return buf;
	},

	0xc1: function PACKET_CZ_REQ_USER_COUNT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc1, true );

		return buf;
	},

	0xc2: function PACKET_ZC_USER_COUNT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc2, true );
		lp.setInt32( 0x2, struct.count, true );

		return buf;
	},

	0xc3: function PACKET_ZC_SPRITE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc3, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );
		lp.setUint8( 0x7, struct.value );

		return buf;
	},

	0xc4: function PACKET_ZC_SELECT_DEALTYPE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc4, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0xc5: function PACKET_CZ_ACK_SELECT_DEALTYPE( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc5, true );
		lp.setUint32( 0x2, struct.NAID, true );
		lp.setUint8( 0x6, struct.type );

		return buf;
	},

	0xc6: function PACKET_ZC_PC_PURCHASE_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc6, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// PURCHASE_ITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 11 ) {
			lp.setInt32( 0x4 + p2, struct.itemList[n].price, true );
			lp.setInt32( 0x8 + p2, struct.itemList[n].discountprice, true );
			lp.setUint8( 0xc + p2, struct.itemList[n].type );
			lp.setUint16( 0xd + p2, struct.itemList[n].ITID, true );
		}

		return buf;
	},

	0xc7: function PACKET_ZC_PC_SELL_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc7, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// SELL_ITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 10 ) {
			lp.setInt16( 0x4 + p2, struct.itemList[n].index, true );
			lp.setInt32( 0x6 + p2, struct.itemList[n].price, true );
			lp.setInt32( 0xa + p2, struct.itemList[n].overchargeprice, true );
		}

		return buf;
	},

	0xc8: function PACKET_CZ_PC_PURCHASE_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc8, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// CZ_PURCHASE_ITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 4 ) {
			lp.setInt16( 0x4 + p2, struct.itemList[n].count, true );
			lp.setUint16( 0x6 + p2, struct.itemList[n].ITID, true );
		}

		return buf;
	},

	0xc9: function PACKET_CZ_PC_SELL_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xc9, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// CZ_SELL_ITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 4 ) {
			lp.setInt16( 0x4 + p2, struct.itemList[n].index, true );
			lp.setInt16( 0x6 + p2, struct.itemList[n].count, true );
		}

		return buf;
	},

	0xca: function PACKET_ZC_PC_PURCHASE_RESULT( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xca, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xcb: function PACKET_ZC_PC_SELL_RESULT( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xcb, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xcc: function PACKET_CZ_DISCONNECT_CHARACTER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xcc, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0xcd: function PACKET_ZC_ACK_DISCONNECT_CHARACTER( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xcd, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xce: function PACKET_CZ_DISCONNECT_ALL_CHARACTER( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xce, true );

		return buf;
	},

	0xcf: function PACKET_CZ_SETTING_WHISPER_PC( struct ) {

		var buf = new ArrayBuffer( 27 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xcf, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.type );

		return buf;
	},

	0xd0: function PACKET_CZ_SETTING_WHISPER_STATE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd0, true );
		lp.setUint8( 0x2, struct.type );

		return buf;
	},

	0xd1: function PACKET_ZC_SETTING_WHISPER_PC( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd1, true );
		lp.setUint8( 0x2, struct.type );
		lp.setUint8( 0x3, struct.result );

		return buf;
	},

	0xd2: function PACKET_ZC_SETTING_WHISPER_STATE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd2, true );
		lp.setUint8( 0x2, struct.type );
		lp.setUint8( 0x3, struct.result );

		return buf;
	},

	0xd3: function PACKET_CZ_REQ_WHISPER_LIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd3, true );

		return buf;
	},

	0xd4: function PACKET_ZC_WHISPER_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.wisperList.length * 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd4, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// WHISPER_ITEM wisperList
		for( var n = 0, p2 = 0; n < struct.wisperList.length; n++, p2 += 24 ) {
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p2 + p, struct.wisperList[n].name[i] ), i++, p += 1 );
		}

		return buf;
	},

	0xd5: function PACKET_CZ_CREATE_CHATROOM( struct ) {

		var buf = new ArrayBuffer( 0xf + struct.title.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd5, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.size, true );
		lp.setUint8( 0x6, struct.type );
		for( var p = 0, i = 0; i < 8; lp.setUint8( 0x7 + p, struct.passwd[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.title.length; lp.setUint8( 0xf + p, struct.title[i] ), i++, p += 1 );

		return buf;
	},

	0xd6: function PACKET_ZC_ACK_CREATE_CHATROOM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd6, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xd7: function PACKET_ZC_ROOM_NEWENTRY( struct ) {

		var buf = new ArrayBuffer( 0x11 + struct.title.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.roomID, true );
		lp.setInt16( 0xc, struct.maxcount, true );
		lp.setInt16( 0xe, struct.curcount, true );
		lp.setUint8( 0x10, struct.type );
		for( var p = 0, i = 0; i < struct.title.length; lp.setUint8( 0x11 + p, struct.title[i] ), i++, p += 1 );

		return buf;
	},

	0xd8: function PACKET_ZC_DESTROY_ROOM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd8, true );
		lp.setUint32( 0x2, struct.roomID, true );

		return buf;
	},

	0xd9: function PACKET_CZ_REQ_ENTER_ROOM( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xd9, true );
		lp.setUint32( 0x2, struct.roomID, true );
		for( var p = 0, i = 0; i < 8; lp.setUint8( 0x6 + p, struct.passwd[i] ), i++, p += 1 );

		return buf;
	},

	0xda: function PACKET_ZC_REFUSE_ENTER_ROOM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xda, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xdb: function PACKET_ZC_ENTER_ROOM( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.memberList.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xdb, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.roomID, true );

		// ROOM_MEMBER memberList
		for( var n = 0, p2 = 0; n < struct.memberList.length; n++, p2 += 28 ) {
			lp.setUint32( 0x8 + p2, struct.memberList[n].role, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0xc + p2 + p, struct.memberList[n].name[i] ), i++, p += 1 );
		}

		return buf;
	},

	0xdc: function PACKET_ZC_MEMBER_NEWENTRY( struct ) {

		var buf = new ArrayBuffer( 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xdc, true );
		lp.setInt16( 0x2, struct.curcount, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0xdd: function PACKET_ZC_MEMBER_EXIT( struct ) {

		var buf = new ArrayBuffer( 29 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xdd, true );
		lp.setInt16( 0x2, struct.curcount, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.name[i] ), i++, p += 1 );
		lp.setUint8( 0x1c, struct.type );

		return buf;
	},

	0xde: function PACKET_CZ_CHANGE_CHATROOM( struct ) {

		var buf = new ArrayBuffer( 0xf + struct.title.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xde, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.size, true );
		lp.setUint8( 0x6, struct.type );
		for( var p = 0, i = 0; i < 8; lp.setUint8( 0x7 + p, struct.passwd[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.title.length; lp.setUint8( 0xf + p, struct.title[i] ), i++, p += 1 );

		return buf;
	},

	0xdf: function PACKET_ZC_CHANGE_CHATROOM( struct ) {

		var buf = new ArrayBuffer( 0x11 + struct.title.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xdf, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.roomID, true );
		lp.setInt16( 0xc, struct.maxcount, true );
		lp.setInt16( 0xe, struct.curcount, true );
		lp.setUint8( 0x10, struct.type );
		for( var p = 0, i = 0; i < struct.title.length; lp.setUint8( 0x11 + p, struct.title[i] ), i++, p += 1 );

		return buf;
	},

	0xe0: function PACKET_CZ_REQ_ROLE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe0, true );
		lp.setUint32( 0x2, struct.role, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0xe1: function PACKET_ZC_ROLE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe1, true );
		lp.setUint32( 0x2, struct.role, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0xe2: function PACKET_CZ_REQ_EXPEL_MEMBER( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe2, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0xe3: function PACKET_CZ_EXIT_ROOM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe3, true );

		return buf;
	},

	0xe4: function PACKET_CZ_REQ_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe4, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0xe5: function PACKET_ZC_REQ_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe5, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0xe6: function PACKET_CZ_ACK_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe6, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xe7: function PACKET_ZC_ACK_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe7, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xe8: function PACKET_CZ_ADD_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe8, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0xe9: function PACKET_ZC_ADD_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xe9, true );
		lp.setInt32( 0x2, struct.count, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setUint8( 0x9, struct.IsDamaged );
		lp.setUint8( 0xa, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xb, struct.slot.card1, true );
		lp.setUint16( 0xd, struct.slot.card2, true );
		lp.setUint16( 0xf, struct.slot.card3, true );
		lp.setUint16( 0x11, struct.slot.card4, true );

		return buf;
	},

	0xea: function PACKET_ZC_ACK_ADD_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xea, true );
		lp.setInt16( 0x2, struct.Index, true );
		lp.setUint8( 0x4, struct.result );

		return buf;
	},

	0xeb: function PACKET_CZ_CONCLUDE_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xeb, true );

		return buf;
	},

	0xec: function PACKET_ZC_CONCLUDE_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xec, true );
		lp.setUint8( 0x2, struct.who );

		return buf;
	},

	0xed: function PACKET_CZ_CANCEL_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xed, true );

		return buf;
	},

	0xee: function PACKET_ZC_CANCEL_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xee, true );

		return buf;
	},

	0xef: function PACKET_CZ_EXEC_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xef, true );

		return buf;
	},

	0xf0: function PACKET_ZC_EXEC_EXCHANGE_ITEM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf0, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xf1: function PACKET_ZC_EXCHANGEITEM_UNDO( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf1, true );

		return buf;
	},

	0xf2: function PACKET_ZC_NOTIFY_STOREITEM_COUNTINFO( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf2, true );
		lp.setInt16( 0x2, struct.curCount, true );
		lp.setInt16( 0x4, struct.maxCount, true );

		return buf;
	},

	0xf3: function PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_STORE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf3, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0xf4: function PACKET_ZC_ADD_ITEM_TO_STORE( struct ) {

		var buf = new ArrayBuffer( 21 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf4, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );
		lp.setUint16( 0x8, struct.ITID, true );
		lp.setUint8( 0xa, struct.IsIdentified );
		lp.setUint8( 0xb, struct.IsDamaged );
		lp.setUint8( 0xc, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xd, struct.slot.card1, true );
		lp.setUint16( 0xf, struct.slot.card2, true );
		lp.setUint16( 0x11, struct.slot.card3, true );
		lp.setUint16( 0x13, struct.slot.card4, true );

		return buf;
	},

	0xf5: function PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_BODY( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf5, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0xf6: function PACKET_ZC_DELETE_ITEM_FROM_STORE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf6, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0xf7: function PACKET_CZ_CLOSE_STORE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf7, true );

		return buf;
	},

	0xf8: function PACKET_ZC_CLOSE_STORE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf8, true );

		return buf;
	},

	0xf9: function PACKET_CZ_MAKE_GROUP( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xf9, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.groupName[i] ), i++, p += 1 );

		return buf;
	},

	0xfa: function PACKET_ZC_ACK_MAKE_GROUP( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xfa, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0xfb: function PACKET_ZC_GROUP_LIST( struct ) {

		var buf = new ArrayBuffer( 0x1c + struct.groupInfo.length * 46 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xfb, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.groupName[i] ), i++, p += 1 );

		// GROUPMEMBER_INFO groupInfo
		for( var n = 0, p2 = 0; n < struct.groupInfo.length; n++, p2 += 46 ) {
			lp.setUint32( 0x1c + p2, struct.groupInfo[n].AID, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x20 + p2 + p, struct.groupInfo[n].characterName[i] ), i++, p += 1 );
			for( var p = 0, i = 0; i < 16; lp.setUint8( 0x38 + p2 + p, struct.groupInfo[n].mapName[i] ), i++, p += 1 );
			lp.setUint8( 0x48 + p2, struct.groupInfo[n].role );
			lp.setUint8( 0x49 + p2, struct.groupInfo[n].state );
		}

		return buf;
	},

	0xfc: function PACKET_CZ_REQ_JOIN_GROUP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xfc, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0xfd: function PACKET_ZC_ACK_REQ_JOIN_GROUP( struct ) {

		var buf = new ArrayBuffer( 27 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xfd, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.characterName[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.answer );

		return buf;
	},

	0xfe: function PACKET_ZC_REQ_JOIN_GROUP( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xfe, true );
		lp.setUint32( 0x2, struct.GRID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.groupName[i] ), i++, p += 1 );

		return buf;
	},

	0xff: function PACKET_CZ_JOIN_GROUP( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0xff, true );
		lp.setUint32( 0x2, struct.GRID, true );
		lp.setInt32( 0x6, struct.answer, true );

		return buf;
	},

	0x100: function PACKET_CZ_REQ_LEAVE_GROUP( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x100, true );

		return buf;
	},

	0x101: function PACKET_ZC_GROUPINFO_CHANGE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x101, true );
		lp.setUint32( 0x2, struct.expOption, true );

		return buf;
	},

	0x102: function PACKET_CZ_CHANGE_GROUPEXPOPTION( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x102, true );
		lp.setUint32( 0x2, struct.expOption, true );

		return buf;
	},

	0x103: function PACKET_CZ_REQ_EXPEL_GROUP_MEMBER( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x103, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.characterName[i] ), i++, p += 1 );

		return buf;
	},

	0x104: function PACKET_ZC_ADD_MEMBER_TO_GROUP( struct ) {

		var buf = new ArrayBuffer( 79 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x104, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.Role, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint8( 0xe, struct.state );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xf + p, struct.groupName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x27 + p, struct.characterName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x3f + p, struct.mapName[i] ), i++, p += 1 );

		return buf;
	},

	0x105: function PACKET_ZC_DELETE_MEMBER_FROM_GROUP( struct ) {

		var buf = new ArrayBuffer( 31 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x105, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.characterName[i] ), i++, p += 1 );
		lp.setUint8( 0x1e, struct.result );

		return buf;
	},

	0x106: function PACKET_ZC_NOTIFY_HP_TO_GROUPM( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x106, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.hp, true );
		lp.setInt16( 0x8, struct.maxhp, true );

		return buf;
	},

	0x107: function PACKET_ZC_NOTIFY_POSITION_TO_GROUPM( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x107, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );

		return buf;
	},

	0x108: function PACKET_CZ_REQUEST_CHAT_PARTY( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x108, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x109: function PACKET_ZC_NOTIFY_CHAT_PARTY( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x109, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x8 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x10a: function PACKET_ZC_MVP_GETTING_ITEM( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10a, true );
		lp.setUint16( 0x2, struct.ITID, true );

		return buf;
	},

	0x10b: function PACKET_ZC_MVP_GETTING_SPECIAL_EXP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10b, true );
		lp.setUint32( 0x2, struct.exp, true );

		return buf;
	},

	0x10c: function PACKET_ZC_MVP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10c, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x10d: function PACKET_ZC_THROW_MVPITEM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10d, true );

		return buf;
	},

	0x10e: function PACKET_ZC_SKILLINFO_UPDATE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10e, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setInt16( 0x4, struct.level, true );
		lp.setInt16( 0x6, struct.spcost, true );
		lp.setInt16( 0x8, struct.attackRange, true );
		lp.setUint8( 0xa, struct.upgradable );

		return buf;
	},

	0x10f: function PACKET_ZC_SKILLINFO_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.skillList.length * 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x10f, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// SKILLINFO skillList
		for( var n = 0, p2 = 0; n < struct.skillList.length; n++, p2 += 37 ) {
			lp.setInt16( 0x4 + p2, struct.skillList[n].SKID, true );
			lp.setInt32( 0x6 + p2, struct.skillList[n].type, true );
			lp.setInt16( 0xa + p2, struct.skillList[n].level, true );
			lp.setInt16( 0xc + p2, struct.skillList[n].spcost, true );
			lp.setInt16( 0xe + p2, struct.skillList[n].attackRange, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x10 + p2 + p, struct.skillList[n].skillName[i] ), i++, p += 1 );
			lp.setUint8( 0x28 + p2, struct.skillList[n].upgradable );
		}

		return buf;
	},

	0x110: function PACKET_ZC_ACK_TOUSESKILL( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x110, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.NUM, true );
		lp.setUint8( 0x8, struct.result );
		lp.setUint8( 0x9, struct.cause );

		return buf;
	},

	0x111: function PACKET_ZC_ADD_SKILL( struct ) {

		var buf = new ArrayBuffer( 39 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x111, true );

		// SKILLINFO data
		lp.setUint16( 0x2, struct.data.SKID, true );
		lp.setInt32( 0x4, struct.data.type, true );
		lp.setInt16( 0x8, struct.data.level, true );
		lp.setInt16( 0xa, struct.data.spcost, true );
		lp.setInt16( 0xc, struct.data.attackRange, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xe + p, struct.data.skillName[i] ), i++, p += 1 );
		lp.setUint8( 0x26, struct.data.upgradable );

		return buf;
	},

	0x112: function PACKET_CZ_UPGRADE_SKILLLEVEL( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x112, true );
		lp.setUint16( 0x2, struct.SKID, true );

		return buf;
	},

	0x113: function PACKET_CZ_USE_SKILL( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x113, true );
		lp.setInt16( 0x2, struct.selectedLevel, true );
		lp.setUint16( 0x4, struct.SKID, true );
		lp.setUint32( 0x6, struct.targetID, true );

		return buf;
	},

	0x114: function PACKET_ZC_NOTIFY_SKILL( struct ) {

		var buf = new ArrayBuffer( 31 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x114, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.targetID, true );
		lp.setUint32( 0xc, struct.startTime, true );
		lp.setInt32( 0x10, struct.attackMT, true );
		lp.setInt32( 0x14, struct.attackedMT, true );
		lp.setInt16( 0x18, struct.damage, true );
		lp.setInt16( 0x1a, struct.level, true );
		lp.setInt16( 0x1c, struct.count, true );
		lp.setUint8( 0x1e, struct.action );

		return buf;
	},

	0x115: function PACKET_ZC_NOTIFY_SKILL_POSITION( struct ) {

		var buf = new ArrayBuffer( 35 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x115, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.targetID, true );
		lp.setUint32( 0xc, struct.startTime, true );
		lp.setInt32( 0x10, struct.attackMT, true );
		lp.setInt32( 0x14, struct.attackedMT, true );
		lp.setInt16( 0x18, struct.xPos, true );
		lp.setInt16( 0x1a, struct.yPos, true );
		lp.setInt16( 0x1c, struct.damage, true );
		lp.setInt16( 0x1e, struct.level, true );
		lp.setInt16( 0x20, struct.count, true );
		lp.setUint8( 0x22, struct.action );

		return buf;
	},

	0x116: function PACKET_CZ_USE_SKILL_TOGROUND( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x116, true );
		lp.setInt16( 0x2, struct.selectedLevel, true );
		lp.setUint16( 0x4, struct.SKID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );

		return buf;
	},

	0x117: function PACKET_ZC_NOTIFY_GROUNDSKILL( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x117, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setInt16( 0x8, struct.level, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint32( 0xe, struct.startTime, true );

		return buf;
	},

	0x118: function PACKET_CZ_CANCEL_LOCKON( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x118, true );

		return buf;
	},

	0x119: function PACKET_ZC_STATE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 13 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x119, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.bodyState, true );
		lp.setInt16( 0x8, struct.healthState, true );
		lp.setInt16( 0xa, struct.effectState, true );
		lp.setUint8( 0xc, struct.isPKModeON );

		return buf;
	},

	0x11a: function PACKET_ZC_USE_SKILL( struct ) {

		var buf = new ArrayBuffer( 15 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11a, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setInt16( 0x4, struct.level, true );
		lp.setUint32( 0x6, struct.targetAID, true );
		lp.setUint32( 0xa, struct.srcAID, true );
		lp.setUint8( 0xe, struct.result );

		return buf;
	},

	0x11b: function PACKET_CZ_SELECT_WARPPOINT( struct ) {

		var buf = new ArrayBuffer( 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11b, true );
		lp.setUint16( 0x2, struct.SKID, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x4 + p, struct.mapName[i] ), i++, p += 1 );

		return buf;
	},

	0x11c: function PACKET_ZC_WARPLIST( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11c, true );
		lp.setUint16( 0x2, struct.SKID, true );
		for( var p = 0, i = 0; i < 4; lp.setUint8( 0x4 + p, struct.mapName[i] ), i++, p += 1 );

		return buf;
	},

	0x11d: function PACKET_CZ_REMEMBER_WARPPOINT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11d, true );

		return buf;
	},

	0x11e: function PACKET_ZC_ACK_REMEMBER_WARPPOINT( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11e, true );
		lp.setUint8( 0x2, struct.errorCode );

		return buf;
	},

	0x11f: function PACKET_ZC_SKILL_ENTRY( struct ) {

		var buf = new ArrayBuffer( 16 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x11f, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.creatorAID, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint8( 0xe, struct.job );
		lp.setUint8( 0xf, struct.isVisible );

		return buf;
	},

	0x120: function PACKET_ZC_SKILL_DISAPPEAR( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x120, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x121: function PACKET_ZC_NOTIFY_CARTITEM_COUNTINFO( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x121, true );
		lp.setInt16( 0x2, struct.curCount, true );
		lp.setInt16( 0x4, struct.maxCount, true );
		lp.setInt32( 0x6, struct.curWeight, true );
		lp.setInt32( 0xa, struct.maxWeight, true );

		return buf;
	},

	0x122: function PACKET_ZC_CART_EQUIPMENT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x122, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 20 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.itemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.itemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.itemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO itemInfo.slot
			lp.setUint16( 0x10 + p2, struct.itemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.itemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.itemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.itemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0x123: function PACKET_ZC_CART_NORMAL_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemInfo.length * 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x123, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO itemInfo
		for( var n = 0, p2 = 0; n < struct.itemInfo.length; n++, p2 += 10 ) {
			lp.setInt16( 0x4 + p2, struct.itemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.itemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.itemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.itemInfo[n].WearState, true );
		}

		return buf;
	},

	0x124: function PACKET_ZC_ADD_ITEM_TO_CART( struct ) {

		var buf = new ArrayBuffer( 21 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x124, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );
		lp.setUint16( 0x8, struct.ITID, true );
		lp.setUint8( 0xa, struct.IsIdentified );
		lp.setUint8( 0xb, struct.IsDamaged );
		lp.setUint8( 0xc, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xd, struct.slot.card1, true );
		lp.setUint16( 0xf, struct.slot.card2, true );
		lp.setUint16( 0x11, struct.slot.card3, true );
		lp.setUint16( 0x13, struct.slot.card4, true );

		return buf;
	},

	0x125: function PACKET_ZC_DELETE_ITEM_FROM_CART( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x125, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x126: function PACKET_CZ_MOVE_ITEM_FROM_BODY_TO_CART( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x126, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x127: function PACKET_CZ_MOVE_ITEM_FROM_CART_TO_BODY( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x127, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x128: function PACKET_CZ_MOVE_ITEM_FROM_STORE_TO_CART( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x128, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x129: function PACKET_CZ_MOVE_ITEM_FROM_CART_TO_STORE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x129, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x12a: function PACKET_CZ_REQ_CARTOFF( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12a, true );

		return buf;
	},

	0x12b: function PACKET_ZC_CARTOFF( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12b, true );

		return buf;
	},

	0x12c: function PACKET_ZC_ACK_ADDITEM_TO_CART( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12c, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x12d: function PACKET_ZC_OPENSTORE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12d, true );
		lp.setInt16( 0x2, struct.itemcount, true );

		return buf;
	},

	0x12e: function PACKET_CZ_REQ_CLOSESTORE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12e, true );

		return buf;
	},

	0x12f: function PACKET_CZ_REQ_OPENSTORE( struct ) {

		var buf = new ArrayBuffer( 0x54 + struct.storeList.length * 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x12f, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x4 + p, struct.storeName[i] ), i++, p += 1 );

		// STORE_ITEM storeList
		for( var n = 0, p2 = 0; n < struct.storeList.length; n++, p2 += 8 ) {
			lp.setInt16( 0x54 + p2, struct.storeList[n].index, true );
			lp.setInt16( 0x56 + p2, struct.storeList[n].count, true );
			lp.setInt32( 0x58 + p2, struct.storeList[n].Price, true );
		}

		return buf;
	},

	0x130: function PACKET_CZ_REQ_BUY_FROMMC( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x130, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x131: function PACKET_ZC_STORE_ENTRY( struct ) {

		var buf = new ArrayBuffer( 86 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x131, true );
		lp.setUint32( 0x2, struct.makerAID, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x6 + p, struct.storeName[i] ), i++, p += 1 );

		return buf;
	},

	0x132: function PACKET_ZC_DISAPPEAR_ENTRY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x132, true );
		lp.setUint32( 0x2, struct.makerAID, true );

		return buf;
	},

	0x133: function PACKET_ZC_PC_PURCHASE_ITEMLIST_FROMMC( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.itemList.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x133, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );

		// PURCHASE_ITEM_FROMMC itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 22 ) {
			lp.setInt32( 0x8 + p2, struct.itemList[n].price, true );
			lp.setInt16( 0xc + p2, struct.itemList[n].count, true );
			lp.setInt16( 0xe + p2, struct.itemList[n].index, true );
			lp.setUint8( 0x10 + p2, struct.itemList[n].type );
			lp.setUint16( 0x11 + p2, struct.itemList[n].ITID, true );
			lp.setUint8( 0x13 + p2, struct.itemList[n].IsIdentified );
			lp.setUint8( 0x14 + p2, struct.itemList[n].IsDamaged );
			lp.setUint8( 0x15 + p2, struct.itemList[n].refiningLevel );

			// PURCHASE_ITEM_FROMMC itemList.slot
			lp.setUint16( 0x16 + p2, struct.itemList[n].slot.card1, true );
			lp.setUint16( 0x18 + p2, struct.itemList[n].slot.card2, true );
			lp.setUint16( 0x1a + p2, struct.itemList[n].slot.card3, true );
			lp.setUint16( 0x1c + p2, struct.itemList[n].slot.card4, true );
		}

		return buf;
	},

	0x134: function PACKET_CZ_PC_PURCHASE_ITEMLIST_FROMMC( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.itemList.length * 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x134, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );

		// CZ_PURCHASE_ITEM_FROMMC itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 4 ) {
			lp.setInt16( 0x8 + p2, struct.itemList[n].count, true );
			lp.setInt16( 0xa + p2, struct.itemList[n].index, true );
		}

		return buf;
	},

	0x135: function PACKET_ZC_PC_PURCHASE_RESULT_FROMMC( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x135, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt16( 0x4, struct.curcount, true );
		lp.setUint8( 0x6, struct.result );

		return buf;
	},

	0x136: function PACKET_ZC_PC_PURCHASE_MYITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.itemList.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x136, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );

		// PURCHASE_MYITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 22 ) {
			lp.setInt32( 0x8 + p2, struct.itemList[n].price, true );
			lp.setInt16( 0xc + p2, struct.itemList[n].index, true );
			lp.setInt16( 0xe + p2, struct.itemList[n].count, true );
			lp.setUint8( 0x10 + p2, struct.itemList[n].type );
			lp.setUint16( 0x11 + p2, struct.itemList[n].ITID, true );
			lp.setUint8( 0x13 + p2, struct.itemList[n].IsIdentified );
			lp.setUint8( 0x14 + p2, struct.itemList[n].IsDamaged );
			lp.setUint8( 0x15 + p2, struct.itemList[n].refiningLevel );

			// PURCHASE_MYITEM itemList.slot
			lp.setUint16( 0x16 + p2, struct.itemList[n].slot.card1, true );
			lp.setUint16( 0x18 + p2, struct.itemList[n].slot.card2, true );
			lp.setUint16( 0x1a + p2, struct.itemList[n].slot.card3, true );
			lp.setUint16( 0x1c + p2, struct.itemList[n].slot.card4, true );
		}

		return buf;
	},

	0x137: function PACKET_ZC_DELETEITEM_FROM_MCSTORE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x137, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt16( 0x4, struct.count, true );

		return buf;
	},

	0x138: function PACKET_CZ_PKMODE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x138, true );
		lp.setUint8( 0x2, struct.isTurnOn );

		return buf;
	},

	0x139: function PACKET_ZC_ATTACK_FAILURE_FOR_DISTANCE( struct ) {

		var buf = new ArrayBuffer( 16 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x139, true );
		lp.setUint32( 0x2, struct.targetAID, true );
		lp.setInt16( 0x6, struct.targetXPos, true );
		lp.setInt16( 0x8, struct.targetYPos, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setInt16( 0xe, struct.currentAttRange, true );

		return buf;
	},

	0x13a: function PACKET_ZC_ATTACK_RANGE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13a, true );
		lp.setInt16( 0x2, struct.currentAttRange, true );

		return buf;
	},

	0x13b: function PACKET_ZC_ACTION_FAILURE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13b, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x13c: function PACKET_ZC_EQUIP_ARROW( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13c, true );
		lp.setInt16( 0x2, struct.index, true );

		return buf;
	},

	0x13d: function PACKET_ZC_RECOVERY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13d, true );
		lp.setInt16( 0x2, struct.varID, true );
		lp.setInt16( 0x4, struct.amount, true );

		return buf;
	},

	0x13e: function PACKET_ZC_USESKILL_ACK( struct ) {

		var buf = new ArrayBuffer( 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13e, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.targetID, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint16( 0xe, struct.SKID, true );
		lp.setUint32( 0x10, struct.property, true );
		lp.setUint32( 0x14, struct.delayTime, true );

		return buf;
	},

	0x13f: function PACKET_CZ_ITEM_CREATE( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x13f, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.itemName[i] ), i++, p += 1 );

		return buf;
	},

	0x140: function PACKET_CZ_MOVETO_MAP( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x140, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x2 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setInt16( 0x12, struct.xPos, true );
		lp.setInt16( 0x14, struct.yPos, true );

		return buf;
	},

	0x141: function PACKET_ZC_COUPLESTATUS( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x141, true );
		lp.setUint32( 0x2, struct.statusType, true );
		lp.setInt32( 0x6, struct.defaultStatus, true );
		lp.setInt32( 0xa, struct.plusStatus, true );

		return buf;
	},

	0x142: function PACKET_ZC_OPEN_EDITDLG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x142, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0x143: function PACKET_CZ_INPUT_EDITDLG( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x143, true );
		lp.setUint32( 0x2, struct.NAID, true );
		lp.setInt32( 0x6, struct.value, true );

		return buf;
	},

	0x144: function PACKET_ZC_COMPASS( struct ) {

		var buf = new ArrayBuffer( 23 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x144, true );
		lp.setUint32( 0x2, struct.NAID, true );
		lp.setInt32( 0x6, struct.type, true );
		lp.setInt32( 0xa, struct.xPos, true );
		lp.setInt32( 0xe, struct.yPos, true );
		lp.setUint8( 0x12, struct.id );
		lp.setUint32( 0x13, struct.color, true );

		return buf;
	},

	0x145: function PACKET_ZC_SHOW_IMAGE( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x145, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x2 + p, struct.imageName[i] ), i++, p += 1 );
		lp.setUint8( 0x12, struct.type );

		return buf;
	},

	0x146: function PACKET_CZ_CLOSE_DIALOG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x146, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0x147: function PACKET_ZC_AUTORUN_SKILL( struct ) {

		var buf = new ArrayBuffer( 39 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x147, true );

		// SKILLINFO data
		lp.setUint16( 0x2, struct.data.SKID, true );
		lp.setInt32( 0x4, struct.data.type, true );
		lp.setInt16( 0x8, struct.data.level, true );
		lp.setInt16( 0xa, struct.data.spcost, true );
		lp.setInt16( 0xc, struct.data.attackRange, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xe + p, struct.data.skillName[i] ), i++, p += 1 );
		lp.setUint8( 0x26, struct.data.upgradable );

		return buf;
	},

	0x148: function PACKET_ZC_RESURRECTION( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x148, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.type, true );

		return buf;
	},

	0x149: function PACKET_CZ_REQ_GIVE_MANNER_POINT( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x149, true );
		lp.setUint32( 0x2, struct.otherAID, true );
		lp.setUint8( 0x6, struct.type );
		lp.setInt16( 0x7, struct.point, true );

		return buf;
	},

	0x14a: function PACKET_ZC_ACK_GIVE_MANNER_POINT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14a, true );
		lp.setUint32( 0x2, struct.result, true );

		return buf;
	},

	0x14b: function PACKET_ZC_NOTIFY_MANNER_POINT_GIVEN( struct ) {

		var buf = new ArrayBuffer( 27 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14b, true );
		lp.setUint8( 0x2, struct.type );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x3 + p, struct.otherCharName[i] ), i++, p += 1 );

		return buf;
	},

	0x14c: function PACKET_ZC_MYGUILD_BASIC_INFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.relatedGuildList.length * 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14c, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// RELATED_GUILD relatedGuildList
		for( var n = 0, p2 = 0; n < struct.relatedGuildList.length; n++, p2 += 32 ) {
			lp.setInt32( 0x4 + p2, struct.relatedGuildList[n].GDID, true );
			lp.setInt32( 0x8 + p2, struct.relatedGuildList[n].relation, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0xc + p2 + p, struct.relatedGuildList[n].GuildName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x14d: function PACKET_CZ_REQ_GUILD_MENUINTERFACE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14d, true );

		return buf;
	},

	0x14e: function PACKET_ZC_ACK_GUILD_MENUINTERFACE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14e, true );
		lp.setInt32( 0x2, struct.guildMemuFlag, true );

		return buf;
	},

	0x14f: function PACKET_CZ_REQ_GUILD_MENU( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x14f, true );
		lp.setInt32( 0x2, struct.Type, true );

		return buf;
	},

	0x150: function PACKET_ZC_GUILD_INFO( struct ) {

		var buf = new ArrayBuffer( 110 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x150, true );
		lp.setInt32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.level, true );
		lp.setInt32( 0xa, struct.userNum, true );
		lp.setInt32( 0xe, struct.maxUserNum, true );
		lp.setInt32( 0x12, struct.userAverageLevel, true );
		lp.setInt32( 0x16, struct.exp, true );
		lp.setInt32( 0x1a, struct.maxExp, true );
		lp.setInt32( 0x1e, struct.point, true );
		lp.setInt32( 0x22, struct.honor, true );
		lp.setInt32( 0x26, struct.virtue, true );
		lp.setInt32( 0x2a, struct.emblemVersion, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2e + p, struct.guildname[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x46 + p, struct.masterName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x5e + p, struct.manageLand[i] ), i++, p += 1 );

		return buf;
	},

	0x151: function PACKET_CZ_REQ_GUILD_EMBLEM_IMG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x151, true );
		lp.setInt32( 0x2, struct.GDID, true );

		return buf;
	},

	0x152: function PACKET_ZC_GUILD_EMBLEM_IMG( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.img.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x152, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.GDID, true );
		lp.setInt32( 0x8, struct.emblemVersion, true );
		for( var p = 0, i = 0; i < struct.img.length; lp.setUint8( 0xc + p, struct.img[i] ), i++, p += 1 );

		return buf;
	},

	0x153: function PACKET_CZ_REGISTER_GUILD_EMBLEM_IMG( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.img.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x153, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.img.length; lp.setUint8( 0x4 + p, struct.img[i] ), i++, p += 1 );

		return buf;
	},

	0x154: function PACKET_ZC_MEMBERMGR_INFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberInfo.length * 104 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x154, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// GUILD_MEMBERMGR_INFO memberInfo
		for( var n = 0, p2 = 0; n < struct.memberInfo.length; n++, p2 += 104 ) {
			lp.setUint32( 0x4 + p2, struct.memberInfo[n].AID, true );
			lp.setUint32( 0x8 + p2, struct.memberInfo[n].GID, true );
			lp.setInt16( 0xc + p2, struct.memberInfo[n].HeadType, true );
			lp.setInt16( 0xe + p2, struct.memberInfo[n].HeadPalette, true );
			lp.setInt16( 0x10 + p2, struct.memberInfo[n].Sex, true );
			lp.setInt16( 0x12 + p2, struct.memberInfo[n].Job, true );
			lp.setInt16( 0x14 + p2, struct.memberInfo[n].Level, true );
			lp.setInt32( 0x16 + p2, struct.memberInfo[n].MemberExp, true );
			lp.setInt32( 0x1a + p2, struct.memberInfo[n].CurrentState, true );
			lp.setInt32( 0x1e + p2, struct.memberInfo[n].GPositionID, true );
			for( var p = 0, i = 0; i < 50; lp.setUint8( 0x22 + p2 + p, struct.memberInfo[n].Memo[i] ), i++, p += 1 );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x54 + p2 + p, struct.memberInfo[n].CharName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x155: function PACKET_CZ_REQ_CHANGE_MEMBERPOS( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberInfo.length * 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x155, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// MEMBER_POSITION_INFO memberInfo
		for( var n = 0, p2 = 0; n < struct.memberInfo.length; n++, p2 += 12 ) {
			lp.setInt32( 0x4 + p2, struct.memberInfo[n].AID, true );
			lp.setInt32( 0x8 + p2, struct.memberInfo[n].GID, true );
			lp.setInt32( 0xc + p2, struct.memberInfo[n].positionID, true );
		}

		return buf;
	},

	0x156: function PACKET_ZC_ACK_REQ_CHANGE_MEMBERS( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberInfo.length * 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x156, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// MEMBER_POSITION_INFO memberInfo
		for( var n = 0, p2 = 0; n < struct.memberInfo.length; n++, p2 += 12 ) {
			lp.setInt32( 0x4 + p2, struct.memberInfo[n].AID, true );
			lp.setInt32( 0x8 + p2, struct.memberInfo[n].GID, true );
			lp.setInt32( 0xc + p2, struct.memberInfo[n].positionID, true );
		}

		return buf;
	},

	0x157: function PACKET_CZ_REQ_OPEN_MEMBER_INFO( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x157, true );
		lp.setInt32( 0x2, struct.AID, true );

		return buf;
	},

	0x158: function PACKET_ZC_ACK_OPEN_MEMBER_INFO( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x158, true );

		return buf;
	},

	0x159: function PACKET_CZ_REQ_LEAVE_GUILD( struct ) {

		var buf = new ArrayBuffer( 54 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x159, true );
		lp.setUint32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.AID, true );
		lp.setInt32( 0xa, struct.GID, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0xe + p, struct.reasonDesc[i] ), i++, p += 1 );

		return buf;
	},

	0x15a: function PACKET_ZC_ACK_LEAVE_GUILD( struct ) {

		var buf = new ArrayBuffer( 66 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15a, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.charName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x1a + p, struct.reasonDesc[i] ), i++, p += 1 );

		return buf;
	},

	0x15b: function PACKET_CZ_REQ_BAN_GUILD( struct ) {

		var buf = new ArrayBuffer( 54 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15b, true );
		lp.setUint32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.AID, true );
		lp.setInt32( 0xa, struct.GID, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0xe + p, struct.reasonDesc[i] ), i++, p += 1 );

		return buf;
	},

	0x15c: function PACKET_ZC_ACK_BAN_GUILD( struct ) {

		var buf = new ArrayBuffer( 90 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15c, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.charName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x1a + p, struct.reasonDesc[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x42 + p, struct.account[i] ), i++, p += 1 );

		return buf;
	},

	0x15d: function PACKET_CZ_REQ_DISORGANIZE_GUILD( struct ) {

		var buf = new ArrayBuffer( 42 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15d, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x2 + p, struct.key[i] ), i++, p += 1 );

		return buf;
	},

	0x15e: function PACKET_ZC_ACK_DISORGANIZE_GUILD_RESULT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15e, true );
		lp.setInt32( 0x2, struct.reason, true );

		return buf;
	},

	0x15f: function PACKET_ZC_ACK_DISORGANIZE_GUILD( struct ) {

		var buf = new ArrayBuffer( 42 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x15f, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x2 + p, struct.reasonDesc[i] ), i++, p += 1 );

		return buf;
	},

	0x160: function PACKET_ZC_POSITION_INFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberInfo.length * 16 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x160, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// GUILD_MEMBER_POSITION_INFO memberInfo
		for( var n = 0, p2 = 0; n < struct.memberInfo.length; n++, p2 += 16 ) {
			lp.setInt32( 0x4 + p2, struct.memberInfo[n].positionID, true );
			lp.setInt32( 0x8 + p2, struct.memberInfo[n].right, true );
			lp.setInt32( 0xc + p2, struct.memberInfo[n].ranking, true );
		}

		return buf;
	},

	0x161: function PACKET_CZ_REG_CHANGE_GUILD_POSITIONINFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberList.length * 40 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x161, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// GUILD_REG_POSITION_INFO memberList
		for( var n = 0, p2 = 0; n < struct.memberList.length; n++, p2 += 40 ) {
			lp.setInt32( 0x4 + p2, struct.memberList[n].positionID, true );
			lp.setInt32( 0x8 + p2, struct.memberList[n].right, true );
			lp.setInt32( 0xc + p2, struct.memberList[n].ranking, true );
			lp.setInt32( 0x10 + p2, struct.memberList[n].payRate, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x14 + p2 + p, struct.memberList[n].posName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x162: function PACKET_ZC_GUILD_SKILLINFO( struct ) {

		var buf = new ArrayBuffer( 0x6 + struct.skillList.length * 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x162, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.skillPoint, true );

		// SKILLINFO skillList
		for( var n = 0, p2 = 0; n < struct.skillList.length; n++, p2 += 37 ) {
			lp.setUint16( 0x6 + p2, struct.skillList[n].SKID, true );
			lp.setInt32( 0x8 + p2, struct.skillList[n].type, true );
			lp.setInt16( 0xc + p2, struct.skillList[n].level, true );
			lp.setInt16( 0xe + p2, struct.skillList[n].spcost, true );
			lp.setInt16( 0x10 + p2, struct.skillList[n].attackRange, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x12 + p2 + p, struct.skillList[n].skillName[i] ), i++, p += 1 );
			lp.setUint8( 0x2a + p2, struct.skillList[n].upgradable );
		}

		return buf;
	},

	0x163: function PACKET_ZC_BAN_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.banList.length * 88 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x163, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// GUILD_BAN_INFO banList
		for( var n = 0, p2 = 0; n < struct.banList.length; n++, p2 += 88 ) {
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p2 + p, struct.banList[n].charname[i] ), i++, p += 1 );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1c + p2 + p, struct.banList[n].account[i] ), i++, p += 1 );
			for( var p = 0, i = 0; i < 40; lp.setUint8( 0x34 + p2 + p, struct.banList[n].reason[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x164: function PACKET_ZC_OTHER_GUILD_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.guildList.length * 36 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x164, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// OTHER_GUILD_INFO guildList
		for( var n = 0, p2 = 0; n < struct.guildList.length; n++, p2 += 36 ) {
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p2 + p, struct.guildList[n].guildname[i] ), i++, p += 1 );
			lp.setInt32( 0x1c + p2, struct.guildList[n].guildLevel, true );
			lp.setInt32( 0x20 + p2, struct.guildList[n].guildMemberSize, true );
			lp.setInt32( 0x24 + p2, struct.guildList[n].guildRanking, true );
		}

		return buf;
	},

	0x165: function PACKET_CZ_REQ_MAKE_GUILD( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x165, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.GName[i] ), i++, p += 1 );

		return buf;
	},

	0x166: function PACKET_ZC_POSITION_ID_NAME_INFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberList.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x166, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// MEMBER_POSITION_ID_NAME_INFO memberList
		for( var n = 0, p2 = 0; n < struct.memberList.length; n++, p2 += 28 ) {
			lp.setInt32( 0x4 + p2, struct.memberList[n].positionID, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x8 + p2 + p, struct.memberList[n].posName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x167: function PACKET_ZC_RESULT_MAKE_GUILD( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x167, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x168: function PACKET_CZ_REQ_JOIN_GUILD( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x168, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.MyAID, true );
		lp.setUint32( 0xa, struct.MyGID, true );

		return buf;
	},

	0x169: function PACKET_ZC_ACK_REQ_JOIN_GUILD( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x169, true );
		lp.setUint8( 0x2, struct.answer );

		return buf;
	},

	0x16a: function PACKET_ZC_REQ_JOIN_GUILD( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16a, true );
		lp.setUint32( 0x2, struct.GDID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.guildName[i] ), i++, p += 1 );

		return buf;
	},

	0x16b: function PACKET_CZ_JOIN_GUILD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16b, true );
		lp.setUint32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.answer, true );

		return buf;
	},

	0x16c: function PACKET_ZC_UPDATE_GDID( struct ) {

		var buf = new ArrayBuffer( 43 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16c, true );
		lp.setUint32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.emblemVersion, true );
		lp.setInt32( 0xa, struct.right, true );
		lp.setUint8( 0xe, struct.isMaster );
		lp.setInt32( 0xf, struct.InterSID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x13 + p, struct.GName[i] ), i++, p += 1 );

		return buf;
	},

	0x16d: function PACKET_ZC_UPDATE_CHARSTAT( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16d, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.status, true );

		return buf;
	},

	0x16e: function PACKET_CZ_GUILD_NOTICE( struct ) {

		var buf = new ArrayBuffer( 186 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16e, true );
		lp.setUint32( 0x2, struct.GDID, true );
		for( var p = 0, i = 0; i < 60; lp.setUint8( 0x6 + p, struct.subject[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 120; lp.setUint8( 0x42 + p, struct.notice[i] ), i++, p += 1 );

		return buf;
	},

	0x16f: function PACKET_ZC_GUILD_NOTICE( struct ) {

		var buf = new ArrayBuffer( 182 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x16f, true );
		for( var p = 0, i = 0; i < 60; lp.setUint8( 0x2 + p, struct.subject[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 120; lp.setUint8( 0x3e + p, struct.notice[i] ), i++, p += 1 );

		return buf;
	},

	0x170: function PACKET_CZ_REQ_ALLY_GUILD( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x170, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.MyAID, true );
		lp.setUint32( 0xa, struct.MyGID, true );

		return buf;
	},

	0x171: function PACKET_ZC_REQ_ALLY_GUILD( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x171, true );
		lp.setUint32( 0x2, struct.otherAID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.guildName[i] ), i++, p += 1 );

		return buf;
	},

	0x172: function PACKET_CZ_ALLY_GUILD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x172, true );
		lp.setUint32( 0x2, struct.otherAID, true );
		lp.setInt32( 0x6, struct.answer, true );

		return buf;
	},

	0x173: function PACKET_ZC_ACK_REQ_ALLY_GUILD( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x173, true );
		lp.setUint8( 0x2, struct.answer );

		return buf;
	},

	0x174: function PACKET_ZC_ACK_CHANGE_GUILD_POSITIONINFO( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.memberList.length * 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x174, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// GUILD_REG_POSITION_INFO memberList
		for( var n = 0, p2 = 0; n < struct.memberList.length; n++, p2 += 30 ) {
			lp.setInt32( 0x4 + p2, struct.memberList[n].positionID, true );
			lp.setInt32( 0x8 + p2, struct.memberList[n].right, true );
			lp.setInt32( 0xc + p2, struct.memberList[n].ranking, true );
			lp.setInt32( 0x10 + p2, struct.memberList[n].payRate, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x14 + p2 + p, struct.memberList[n].posName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x175: function PACKET_CZ_REQ_GUILD_MEMBER_INFO( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x175, true );
		lp.setInt32( 0x2, struct.GID, true );

		return buf;
	},

	0x176: function PACKET_ZC_ACK_GUILD_MEMBER_INFO( struct ) {

		var buf = new ArrayBuffer( 106 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x176, true );

		// GUILD_MEMBER_INFO Info
		lp.setInt32( 0x2, struct.Info.AID, true );
		lp.setInt32( 0x6, struct.Info.GID, true );
		lp.setInt16( 0xa, struct.Info.head, true );
		lp.setInt16( 0xc, struct.Info.headPalette, true );
		lp.setInt16( 0xe, struct.Info.sex, true );
		lp.setInt16( 0x10, struct.Info.job, true );
		lp.setInt16( 0x12, struct.Info.level, true );
		lp.setInt32( 0x14, struct.Info.contributionExp, true );
		lp.setInt32( 0x18, struct.Info.currentState, true );
		lp.setInt32( 0x1c, struct.Info.positionID, true );
		for( var p = 0, i = 0; i < 50; lp.setUint8( 0x20 + p, struct.Info.intro[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x52 + p, struct.Info.charname[i] ), i++, p += 1 );

		return buf;
	},

	0x177: function PACKET_ZC_ITEMIDENTIFY_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ITIDList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x177, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.ITIDList.length; lp.setUint16( 0x4 + p, struct.ITIDList[i], true ), i++, p += 2 );

		return buf;
	},

	0x178: function PACKET_CZ_REQ_ITEMIDENTIFY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x178, true );
		lp.setInt16( 0x2, struct.index, true );

		return buf;
	},

	0x179: function PACKET_ZC_ACK_ITEMIDENTIFY( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x179, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setUint8( 0x4, struct.result );

		return buf;
	},

	0x17a: function PACKET_CZ_REQ_ITEMCOMPOSITION_LIST( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17a, true );
		lp.setInt16( 0x2, struct.cardIndex, true );

		return buf;
	},

	0x17b: function PACKET_ZC_ITEMCOMPOSITION_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ITIDList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17b, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.ITIDList.length; lp.setUint16( 0x4 + p, struct.ITIDList[i], true ), i++, p += 2 );

		return buf;
	},

	0x17c: function PACKET_CZ_REQ_ITEMCOMPOSITION( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17c, true );
		lp.setInt16( 0x2, struct.cardIndex, true );
		lp.setInt16( 0x4, struct.equipIndex, true );

		return buf;
	},

	0x17d: function PACKET_ZC_ACK_ITEMCOMPOSITION( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17d, true );
		lp.setInt16( 0x2, struct.equipIndex, true );
		lp.setInt16( 0x4, struct.cardIndex, true );
		lp.setUint8( 0x6, struct.result );

		return buf;
	},

	0x17e: function PACKET_CZ_GUILD_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17e, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x17f: function PACKET_ZC_GUILD_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x17f, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x180: function PACKET_CZ_REQ_HOSTILE_GUILD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x180, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x181: function PACKET_ZC_ACK_REQ_HOSTILE_GUILD( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x181, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x182: function PACKET_ZC_MEMBER_ADD( struct ) {

		var buf = new ArrayBuffer( 106 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x182, true );

		// GUILD_MEMBER_INFO Info
		lp.setInt32( 0x2, struct.Info.AID, true );
		lp.setInt32( 0x6, struct.Info.GID, true );
		lp.setInt16( 0xa, struct.Info.head, true );
		lp.setInt16( 0xc, struct.Info.headPalette, true );
		lp.setInt16( 0xe, struct.Info.sex, true );
		lp.setInt16( 0x10, struct.Info.job, true );
		lp.setInt16( 0x12, struct.Info.level, true );
		lp.setInt32( 0x14, struct.Info.contributionExp, true );
		lp.setInt32( 0x18, struct.Info.currentState, true );
		lp.setInt32( 0x1c, struct.Info.positionID, true );
		for( var p = 0, i = 0; i < 50; lp.setUint8( 0x20 + p, struct.Info.intro[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x52 + p, struct.Info.charname[i] ), i++, p += 1 );

		return buf;
	},

	0x183: function PACKET_CZ_REQ_DELETE_RELATED_GUILD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x183, true );
		lp.setUint32( 0x2, struct.OpponentGDID, true );
		lp.setInt32( 0x6, struct.Relation, true );

		return buf;
	},

	0x184: function PACKET_ZC_DELETE_RELATED_GUILD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x184, true );
		lp.setUint32( 0x2, struct.OpponentGDID, true );
		lp.setInt32( 0x6, struct.Relation, true );

		return buf;
	},

	0x185: function PACKET_ZC_ADD_RELATED_GUILD( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x185, true );

		// RELATED_GUILD_INFO Info
		lp.setInt32( 0x2, struct.Info.relation, true );
		lp.setInt32( 0x6, struct.Info.GDID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.Info.guildname[i] ), i++, p += 1 );

		return buf;
	},

	0x186: function PACKET_COLLECTORDEAD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x186, true );
		lp.setUint32( 0x2, struct.ServerID, true );

		return buf;
	},

	0x187: function PACKET_PING( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x187, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x188: function PACKET_ZC_ACK_ITEMREFINING( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x188, true );
		lp.setInt16( 0x2, struct.result, true );
		lp.setInt16( 0x4, struct.itemIndex, true );
		lp.setInt16( 0x6, struct.refiningLevel, true );

		return buf;
	},

	0x189: function PACKET_ZC_NOTIFY_MAPINFO( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x189, true );
		lp.setInt16( 0x2, struct.type, true );

		return buf;
	},

	0x18a: function PACKET_CZ_REQ_DISCONNECT( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18a, true );
		lp.setInt16( 0x2, struct.type, true );

		return buf;
	},

	0x18b: function PACKET_ZC_ACK_REQ_DISCONNECT( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18b, true );
		lp.setInt16( 0x2, struct.result, true );

		return buf;
	},

	0x18c: function PACKET_ZC_MONSTER_INFO( struct ) {

		var buf = new ArrayBuffer( 29 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18c, true );
		lp.setInt16( 0x2, struct.job, true );
		lp.setInt16( 0x4, struct.level, true );
		lp.setInt16( 0x6, struct.size, true );
		lp.setInt32( 0x8, struct.hp, true );
		lp.setInt16( 0xc, struct.def, true );
		lp.setInt16( 0xe, struct.raceType, true );
		lp.setInt16( 0x10, struct.mdefPower, true );
		lp.setInt16( 0x12, struct.property, true );

		// PACKET_ZC_MONSTER_INFO propertyTable
		lp.setUint8( 0x14, struct.propertyTable.water );
		lp.setUint8( 0x15, struct.propertyTable.earth );
		lp.setUint8( 0x16, struct.propertyTable.fire );
		lp.setUint8( 0x17, struct.propertyTable.wind );
		lp.setUint8( 0x18, struct.propertyTable.poison );
		lp.setUint8( 0x19, struct.propertyTable.saint );
		lp.setUint8( 0x1a, struct.propertyTable.dark );
		lp.setUint8( 0x1b, struct.propertyTable.mental );
		lp.setUint8( 0x1c, struct.propertyTable.undead );

		return buf;
	},

	0x18d: function PACKET_ZC_MAKABLEITEMLIST( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18d, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// MAKABLEITEM_INFO info
		lp.setUint16( 0x2, struct.info.ITID, true );
		for( var p = 0, i = 0; i < 3; lp.setUint16( 0x4 + p, struct.info.material_ID[i], true ), i++, p += 2 );

		return buf;
	},

	0x18e: function PACKET_CZ_REQMAKINGITEM( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18e, true );

		// MAKABLEITEM_INFO info
		lp.setUint16( 0x2, struct.info.ITID, true );
		for( var p = 0, i = 0; i < 3; lp.setUint16( 0x4 + p, struct.info.material_ID[i], true ), i++, p += 2 );

		return buf;
	},

	0x18f: function PACKET_ZC_ACK_REQMAKINGITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x18f, true );
		lp.setInt16( 0x2, struct.result, true );
		lp.setUint16( 0x4, struct.ITID, true );

		return buf;
	},

	0x190: function PACKET_CZ_USE_SKILL_TOGROUND_WITHTALKBOX( struct ) {

		var buf = new ArrayBuffer( 90 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x190, true );
		lp.setInt16( 0x2, struct.selectedLevel, true );
		lp.setUint16( 0x4, struct.SKID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0xa + p, struct.contents[i] ), i++, p += 1 );

		return buf;
	},

	0x191: function PACKET_ZC_TALKBOX_CHATCONTENTS( struct ) {

		var buf = new ArrayBuffer( 86 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x191, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x6 + p, struct.contents[i] ), i++, p += 1 );

		return buf;
	},

	0x192: function PACKET_ZC_UPDATE_MAPINFO( struct ) {

		var buf = new ArrayBuffer( 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x192, true );
		lp.setInt16( 0x2, struct.xPos, true );
		lp.setInt16( 0x4, struct.yPos, true );
		lp.setInt16( 0x6, struct.type, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x8 + p, struct.mapName[i] ), i++, p += 1 );

		return buf;
	},

	0x193: function PACKET_CZ_REQNAME_BYGID( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x193, true );
		lp.setUint32( 0x2, struct.GID, true );

		return buf;
	},

	0x194: function PACKET_ZC_ACK_REQNAME_BYGID( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x194, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.CName[i] ), i++, p += 1 );

		return buf;
	},

	0x195: function PACKET_ZC_ACK_REQNAMEALL( struct ) {

		var buf = new ArrayBuffer( 102 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x195, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.CName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1e + p, struct.PName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x36 + p, struct.GName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4e + p, struct.RName[i] ), i++, p += 1 );

		return buf;
	},

	0x196: function PACKET_ZC_MSG_STATE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x196, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint8( 0x8, struct.state );

		return buf;
	},

	0x197: function PACKET_CZ_RESET( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x197, true );
		lp.setInt16( 0x2, struct.type, true );

		return buf;
	},

	0x198: function PACKET_CZ_CHANGE_MAPTYPE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x198, true );
		lp.setInt16( 0x2, struct.xPos, true );
		lp.setInt16( 0x4, struct.yPos, true );
		lp.setInt16( 0x6, struct.type, true );

		return buf;
	},

	0x199: function PACKET_ZC_NOTIFY_MAPPROPERTY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x199, true );
		lp.setInt16( 0x2, struct.type, true );

		return buf;
	},

	0x19a: function PACKET_ZC_NOTIFY_RANKING( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x19a, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.ranking, true );
		lp.setInt32( 0xa, struct.total, true );

		return buf;
	},

	0x19b: function PACKET_ZC_NOTIFY_EFFECT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x19b, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.effectID, true );

		return buf;
	},

	0x19d: function PACKET_CZ_CHANGE_EFFECTSTATE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x19d, true );
		lp.setInt32( 0x2, struct.EffectState, true );

		return buf;
	},

	0x19e: function PACKET_ZC_START_CAPTURE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x19e, true );

		return buf;
	},

	0x19f: function PACKET_CZ_TRYCAPTURE_MONSTER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x19f, true );
		lp.setUint32( 0x2, struct.targetAID, true );

		return buf;
	},

	0x1a0: function PACKET_ZC_TRYCAPTURE_MONSTER( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a0, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x1a1: function PACKET_CZ_COMMAND_PET( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a1, true );
		lp.setUint8( 0x2, struct.cSub );

		return buf;
	},

	0x1a2: function PACKET_ZC_PROPERTY_PET( struct ) {

		var buf = new ArrayBuffer( 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a2, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.szName[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.bModified );
		lp.setInt16( 0x1b, struct.nLevel, true );
		lp.setInt16( 0x1d, struct.nFullness, true );
		lp.setInt16( 0x1f, struct.nRelationship, true );
		lp.setUint16( 0x21, struct.ITID, true );
		lp.setInt16( 0x23, struct.job, true );

		return buf;
	},

	0x1a3: function PACKET_ZC_FEED_PET( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a3, true );
		lp.setUint8( 0x2, struct.cRet );
		lp.setUint16( 0x3, struct.ITID, true );

		return buf;
	},

	0x1a4: function PACKET_ZC_CHANGESTATE_PET( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a4, true );
		lp.setUint8( 0x2, struct.type );
		lp.setInt32( 0x3, struct.GID, true );
		lp.setInt32( 0x7, struct.data, true );

		return buf;
	},

	0x1a5: function PACKET_CZ_RENAME_PET( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a5, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.szName[i] ), i++, p += 1 );

		return buf;
	},

	0x1a6: function PACKET_ZC_PETEGG_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.eggList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a6, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// PETEGGITEM_INFO eggList
		for( var n = 0, p2 = 0; n < struct.eggList.length; n++, p2 += 2 ) {
			lp.setInt16( 0x4 + p2, struct.eggList[n].index, true );
		}

		return buf;
	},

	0x1a7: function PACKET_CZ_SELECT_PETEGG( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a7, true );
		lp.setInt16( 0x2, struct.index, true );

		return buf;
	},

	0x1a8: function PACKET_CZ_PETEGG_INFO( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a8, true );
		lp.setInt16( 0x2, struct.index, true );

		return buf;
	},

	0x1a9: function PACKET_CZ_PET_ACT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1a9, true );
		lp.setInt32( 0x2, struct.data, true );

		return buf;
	},

	0x1aa: function PACKET_ZC_PET_ACT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1aa, true );
		lp.setInt32( 0x2, struct.GID, true );
		lp.setInt32( 0x6, struct.data, true );

		return buf;
	},

	0x1ab: function PACKET_ZC_PAR_CHANGE_USER( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ab, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint16( 0x6, struct.varID, true );
		lp.setInt32( 0x8, struct.count, true );

		return buf;
	},

	0x1ac: function PACKET_ZC_SKILL_UPDATE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ac, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1ad: function PACKET_ZC_MAKINGARROW_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.arrowList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ad, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// ARROWITEM_INFO arrowList
		for( var n = 0, p2 = 0; n < struct.arrowList.length; n++, p2 += 2 ) {
			lp.setInt16( 0x4 + p2, struct.arrowList[n].index, true );
		}

		return buf;
	},

	0x1ae: function PACKET_CZ_REQ_MAKINGARROW( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ae, true );
		lp.setUint16( 0x2, struct.id, true );

		return buf;
	},

	0x1af: function PACKET_CZ_REQ_CHANGECART( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1af, true );
		lp.setInt16( 0x2, struct.num, true );

		return buf;
	},

	0x1b0: function PACKET_ZC_NPCSPRITE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b0, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );
		lp.setUint32( 0x7, struct.value, true );

		return buf;
	},

	0x1b1: function PACKET_ZC_SHOWDIGIT( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b1, true );
		lp.setUint8( 0x2, struct.type );
		lp.setInt32( 0x3, struct.value, true );

		return buf;
	},

	0x1b2: function PACKET_CZ_REQ_OPENSTORE2( struct ) {

		var buf = new ArrayBuffer( 0x55 + struct.storeList.length * 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b2, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x4 + p, struct.storeName[i] ), i++, p += 1 );
		lp.setUint8( 0x54, struct.result );

		// STORE_ITEM storeList
		for( var n = 0, p2 = 0; n < struct.storeList.length; n++, p2 += 8 ) {
			lp.setInt16( 0x55 + p2, struct.storeList[n].index, true );
			lp.setInt16( 0x57 + p2, struct.storeList[n].count, true );
			lp.setInt32( 0x59 + p2, struct.storeList[n].Price, true );
		}

		return buf;
	},

	0x1b3: function PACKET_ZC_SHOW_IMAGE2( struct ) {

		var buf = new ArrayBuffer( 67 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b3, true );
		for( var p = 0, i = 0; i < 64; lp.setUint8( 0x2 + p, struct.imageName[i] ), i++, p += 1 );
		lp.setUint8( 0x42, struct.type );

		return buf;
	},

	0x1b4: function PACKET_ZC_CHANGE_GUILD( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b4, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GDID, true );
		lp.setInt16( 0xa, struct.emblemVersion, true );

		return buf;
	},

	0x1b5: function PACKET_SC_BILLING_INFO( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b5, true );
		lp.setUint32( 0x2, struct.dwAmountRemain, true );
		lp.setUint32( 0x6, struct.dwQuantityRemain, true );
		lp.setUint32( 0xa, struct.dwReserved1, true );
		lp.setUint32( 0xe, struct.dwReserved2, true );

		return buf;
	},

	0x1b6: function PACKET_ZC_GUILD_INFO2( struct ) {

		var buf = new ArrayBuffer( 114 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b6, true );
		lp.setInt32( 0x2, struct.GDID, true );
		lp.setInt32( 0x6, struct.level, true );
		lp.setInt32( 0xa, struct.userNum, true );
		lp.setInt32( 0xe, struct.maxUserNum, true );
		lp.setInt32( 0x12, struct.userAverageLevel, true );
		lp.setInt32( 0x16, struct.exp, true );
		lp.setInt32( 0x1a, struct.maxExp, true );
		lp.setInt32( 0x1e, struct.point, true );
		lp.setInt32( 0x22, struct.honor, true );
		lp.setInt32( 0x26, struct.virtue, true );
		lp.setInt32( 0x2a, struct.emblemVersion, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2e + p, struct.guildname[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x46 + p, struct.masterName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x5e + p, struct.manageLand[i] ), i++, p += 1 );
		lp.setInt32( 0x6e, struct.zeny, true );

		return buf;
	},

	0x1b7: function PACKET_CZ_GUILD_ZENY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b7, true );
		lp.setInt32( 0x2, struct.zeny, true );

		return buf;
	},

	0x1b8: function PACKET_ZC_GUILD_ZENY_ACK( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b8, true );
		lp.setUint8( 0x2, struct.ret );

		return buf;
	},

	0x1b9: function PACKET_ZC_DISPEL( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1b9, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1ba: function PACKET_CZ_REMOVE_AID( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ba, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.AccountName[i] ), i++, p += 1 );

		return buf;
	},

	0x1bb: function PACKET_CZ_SHIFT( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1bb, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.CharacterName[i] ), i++, p += 1 );

		return buf;
	},

	0x1bc: function PACKET_CZ_RECALL( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1bc, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.AccountName[i] ), i++, p += 1 );

		return buf;
	},

	0x1bd: function PACKET_CZ_RECALL_GID( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1bd, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.CharacterName[i] ), i++, p += 1 );

		return buf;
	},

	0x1be: function PACKET_AC_ASK_PNGAMEROOM( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1be, true );

		return buf;
	},

	0x1bf: function PACKET_CA_REPLY_PNGAMEROOM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1bf, true );
		lp.setUint8( 0x2, struct.Permission );

		return buf;
	},

	0x1c0: function PACKET_CZ_REQ_REMAINTIME( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c0, true );

		return buf;
	},

	0x1c1: function PACKET_ZC_REPLY_REMAINTIME( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c1, true );
		lp.setInt32( 0x2, struct.Result, true );
		lp.setInt32( 0x6, struct.ExpirationDate, true );
		lp.setInt32( 0xa, struct.RemainTime, true );

		return buf;
	},

	0x1c2: function PACKET_ZC_INFO_REMAINTIME( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c2, true );
		lp.setInt32( 0x2, struct.Type, true );
		lp.setInt32( 0x6, struct.RemainTime, true );

		return buf;
	},

	0x1c3: function PACKET_ZC_BROADCAST2( struct ) {

		var buf = new ArrayBuffer( 0x10 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c3, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.fontColor, true );
		lp.setInt16( 0x8, struct.fontType, true );
		lp.setInt16( 0xa, struct.fontSize, true );
		lp.setInt16( 0xc, struct.fontAlign, true );
		lp.setInt16( 0xe, struct.fontY, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x10 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x1c4: function PACKET_ZC_ADD_ITEM_TO_STORE2( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c4, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );
		lp.setUint16( 0x8, struct.ITID, true );
		lp.setUint8( 0xa, struct.type );
		lp.setUint8( 0xb, struct.IsIdentified );
		lp.setUint8( 0xc, struct.IsDamaged );
		lp.setUint8( 0xd, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xe, struct.slot.card1, true );
		lp.setUint16( 0x10, struct.slot.card2, true );
		lp.setUint16( 0x12, struct.slot.card3, true );
		lp.setUint16( 0x14, struct.slot.card4, true );

		return buf;
	},

	0x1c5: function PACKET_ZC_ADD_ITEM_TO_CART2( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c5, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );
		lp.setUint16( 0x8, struct.ITID, true );
		lp.setUint8( 0xa, struct.type );
		lp.setUint8( 0xb, struct.IsIdentified );
		lp.setUint8( 0xc, struct.IsDamaged );
		lp.setUint8( 0xd, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xe, struct.slot.card1, true );
		lp.setUint16( 0x10, struct.slot.card2, true );
		lp.setUint16( 0x12, struct.slot.card3, true );
		lp.setUint16( 0x14, struct.slot.card4, true );

		return buf;
	},

	0x1c6: function PACKET_CS_REQ_ENCRYPTION( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c6, true );
		lp.setUint8( 0x2, struct.encCount );
		lp.setUint8( 0x3, struct.decCount );

		return buf;
	},

	0x1c7: function PACKET_SC_ACK_ENCRYPTION( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c7, true );

		return buf;
	},

	0x1c8: function PACKET_ZC_USE_ITEM_ACK2( struct ) {

		var buf = new ArrayBuffer( 13 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c8, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint16( 0x4, struct.id, true );
		lp.setUint32( 0x6, struct.AID, true );
		lp.setInt16( 0xa, struct.count, true );
		lp.setUint8( 0xc, struct.result );

		return buf;
	},

	0x1c9: function PACKET_ZC_SKILL_ENTRY2( struct ) {

		var buf = new ArrayBuffer( 97 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1c9, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.creatorAID, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint8( 0xe, struct.job );
		lp.setUint8( 0xf, struct.isVisible );
		lp.setUint8( 0x10, struct.isContens );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x11 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x1ca: function PACKET_CZ_REQMAKINGHOMUN( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ca, true );
		lp.setUint8( 0x2, struct.result );

		return buf;
	},

	0x1cb: function PACKET_CZ_MONSTER_TALK( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1cb, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.stateId );
		lp.setUint8( 0x7, struct.skillId );
		lp.setUint8( 0x8, struct.arg1 );

		return buf;
	},

	0x1cc: function PACKET_ZC_MONSTER_TALK( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1cc, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.stateId );
		lp.setUint8( 0x7, struct.skillId );
		lp.setUint8( 0x8, struct.arg1 );

		return buf;
	},

	0x1cd: function PACKET_ZC_AUTOSPELLLIST( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1cd, true );
		for( var p = 0, i = 0; i < 7; lp.setInt32( 0x2 + p, struct.SKID[i], true ), i++, p += 4 );

		return buf;
	},

	0x1ce: function PACKET_CZ_SELECTAUTOSPELL( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ce, true );
		lp.setInt32( 0x2, struct.SKID, true );

		return buf;
	},

	0x1cf: function PACKET_ZC_DEVOTIONLIST( struct ) {

		var buf = new ArrayBuffer( 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1cf, true );
		lp.setUint32( 0x2, struct.myAID, true );
		for( var p = 0, i = 0; i < 5; lp.setUint32( 0x6 + p, struct.AID[i], true ), i++, p += 4 );
		lp.setInt16( 0x1a, struct.range, true );

		return buf;
	},

	0x1d0: function PACKET_ZC_SPIRITS( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d0, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.num, true );

		return buf;
	},

	0x1d1: function PACKET_ZC_BLADESTOP( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d1, true );
		lp.setUint32( 0x2, struct.srcAID, true );
		lp.setUint32( 0x6, struct.destAID, true );
		lp.setInt32( 0xa, struct.flag, true );

		return buf;
	},

	0x1d2: function PACKET_ZC_COMBODELAY( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d2, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.delayTime, true );

		return buf;
	},

	0x1d3: function PACKET_ZC_SOUND( struct ) {

		var buf = new ArrayBuffer( 35 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d3, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.fileName[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.act );
		lp.setUint32( 0x1b, struct.term, true );
		lp.setUint32( 0x1f, struct.NAID, true );

		return buf;
	},

	0x1d4: function PACKET_ZC_OPEN_EDITDLGSTR( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d4, true );
		lp.setUint32( 0x2, struct.NAID, true );

		return buf;
	},

	0x1d5: function PACKET_CZ_INPUT_EDITDLGSTR( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d5, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.NAID, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x8 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x1d6: function PACKET_ZC_NOTIFY_MAPPROPERTY2( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d6, true );
		lp.setInt16( 0x2, struct.type, true );

		return buf;
	},

	0x1d7: function PACKET_ZC_SPRITE_CHANGE2( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d7, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );
		lp.setInt32( 0x7, struct.value, true );

		return buf;
	},

	0x1d8: function PACKET_ZC_NOTIFY_STANDENTRY2( struct ) {

		var buf = new ArrayBuffer( 54 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d8, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt32( 0x12, struct.weapon, true );
		lp.setInt16( 0x16, struct.accessory, true );
		lp.setInt16( 0x18, struct.accessory2, true );
		lp.setInt16( 0x1a, struct.accessory3, true );
		lp.setInt16( 0x1c, struct.headpalette, true );
		lp.setInt16( 0x1e, struct.bodypalette, true );
		lp.setInt16( 0x20, struct.headDir, true );
		lp.setUint32( 0x22, struct.GUID, true );
		lp.setInt16( 0x26, struct.GEmblemVer, true );
		lp.setInt16( 0x28, struct.honor, true );
		lp.setInt16( 0x2a, struct.virtue, true );
		lp.setUint8( 0x2c, struct.isPKModeON );
		lp.setUint8( 0x2d, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2e + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x31, struct.xSize );
		lp.setUint8( 0x32, struct.ySize );
		lp.setUint8( 0x33, struct.state );
		lp.setInt16( 0x34, struct.clevel, true );

		return buf;
	},

	0x1d9: function PACKET_ZC_NOTIFY_NEWENTRY2( struct ) {

		var buf = new ArrayBuffer( 53 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1d9, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt32( 0x12, struct.weapon, true );
		lp.setInt16( 0x16, struct.accessory, true );
		lp.setInt16( 0x18, struct.accessory2, true );
		lp.setInt16( 0x1a, struct.accessory3, true );
		lp.setInt16( 0x1c, struct.headpalette, true );
		lp.setInt16( 0x1e, struct.bodypalette, true );
		lp.setInt16( 0x20, struct.headDir, true );
		lp.setUint32( 0x22, struct.GUID, true );
		lp.setInt16( 0x26, struct.GEmblemVer, true );
		lp.setInt16( 0x28, struct.honor, true );
		lp.setInt16( 0x2a, struct.virtue, true );
		lp.setUint8( 0x2c, struct.isPKModeON );
		lp.setUint8( 0x2d, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x2e + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x31, struct.xSize );
		lp.setUint8( 0x32, struct.ySize );
		lp.setInt16( 0x33, struct.clevel, true );

		return buf;
	},

	0x1da: function PACKET_ZC_NOTIFY_MOVEENTRY2( struct ) {

		var buf = new ArrayBuffer( 60 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1da, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt16( 0xc, struct.effectState, true );
		lp.setInt16( 0xe, struct.job, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt32( 0x12, struct.weapon, true );
		lp.setInt16( 0x16, struct.accessory, true );
		lp.setUint32( 0x18, struct.moveStartTime, true );
		lp.setInt16( 0x1c, struct.accessory2, true );
		lp.setInt16( 0x1e, struct.accessory3, true );
		lp.setInt16( 0x20, struct.headpalette, true );
		lp.setInt16( 0x22, struct.bodypalette, true );
		lp.setInt16( 0x24, struct.headDir, true );
		lp.setUint32( 0x26, struct.GUID, true );
		lp.setInt16( 0x2a, struct.GEmblemVer, true );
		lp.setInt16( 0x2c, struct.honor, true );
		lp.setInt16( 0x2e, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x32 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint8( 0x38, struct.xSize );
		lp.setUint8( 0x39, struct.ySize );
		lp.setInt16( 0x3a, struct.clevel, true );

		return buf;
	},

	0x1db: function PACKET_CA_REQ_HASH( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1db, true );

		return buf;
	},

	0x1dc: function PACKET_AC_ACK_HASH( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.secret.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1dc, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.secret.length; lp.setUint8( 0x4 + p, struct.secret[i] ), i++, p += 1 );

		return buf;
	},

	0x1dd: function PACKET_CA_LOGIN2( struct ) {

		var buf = new ArrayBuffer( 47 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1dd, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x1e + p, struct.PasswdMD5[i] ), i++, p += 1 );
		lp.setUint8( 0x2e, struct.clienttype );

		return buf;
	},

	0x1de: function PACKET_ZC_NOTIFY_SKILL2( struct ) {

		var buf = new ArrayBuffer( 33 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1de, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.targetID, true );
		lp.setUint32( 0xc, struct.startTime, true );
		lp.setInt32( 0x10, struct.attackMT, true );
		lp.setInt32( 0x14, struct.attackedMT, true );
		lp.setInt32( 0x18, struct.damage, true );
		lp.setInt16( 0x1c, struct.level, true );
		lp.setInt16( 0x1e, struct.count, true );
		lp.setUint8( 0x20, struct.action );

		return buf;
	},

	0x1df: function PACKET_CZ_REQ_ACCOUNTNAME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1df, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1e0: function PACKET_ZC_ACK_ACCOUNTNAME( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e0, true );
		lp.setUint32( 0x2, struct.AID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x1e1: function PACKET_ZC_SPIRITS2( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e1, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.num, true );

		return buf;
	},

	0x1e2: function PACKET_ZC_REQ_COUPLE( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e2, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x1e3: function PACKET_CZ_JOIN_COUPLE( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e3, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.answer, true );

		return buf;
	},

	0x1e4: function PACKET_ZC_START_COUPLE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e4, true );

		return buf;
	},

	0x1e5: function PACKET_CZ_REQ_JOIN_COUPLE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e5, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1e6: function PACKET_ZC_COUPLENAME( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e6, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.CoupleName[i] ), i++, p += 1 );

		return buf;
	},

	0x1e7: function PACKET_CZ_DORIDORI( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e7, true );

		return buf;
	},

	0x1e8: function PACKET_CZ_MAKE_GROUP2( struct ) {

		var buf = new ArrayBuffer( 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e8, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.groupName[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.ItemPickupRule );
		lp.setUint8( 0x1b, struct.ItemDivisionRule );

		return buf;
	},

	0x1e9: function PACKET_ZC_ADD_MEMBER_TO_GROUP2( struct ) {

		var buf = new ArrayBuffer( 81 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1e9, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.Role, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint8( 0xe, struct.state );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xf + p, struct.groupName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x27 + p, struct.characterName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x3f + p, struct.mapName[i] ), i++, p += 1 );
		lp.setUint8( 0x4f, struct.ItemPickupRule );
		lp.setUint8( 0x50, struct.ItemDivisionRule );

		return buf;
	},

	0x1ea: function PACKET_ZC_CONGRATULATION( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ea, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1eb: function PACKET_ZC_NOTIFY_POSITION_TO_GUILDM( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1eb, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );

		return buf;
	},

	0x1ec: function PACKET_ZC_GUILD_MEMBER_MAP_CHANGE( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ec, true );
		lp.setUint32( 0x2, struct.GDID, true );
		lp.setUint32( 0x6, struct.AID, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0xa + p, struct.mapName[i] ), i++, p += 1 );

		return buf;
	},

	0x1ed: function PACKET_CZ_CHOPOKGI( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ed, true );

		return buf;
	},

	0x1ee: function PACKET_ZC_NORMAL_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ee, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 18 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0x1ef: function PACKET_ZC_CART_NORMAL_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ef, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 18 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0x1f0: function PACKET_ZC_STORE_NORMAL_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f0, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 18 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
		}

		return buf;
	},

	0x1f1: function PACKET_AC_NOTIFY_ERROR( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f1, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x1f2: function PACKET_ZC_UPDATE_CHARSTAT2( struct ) {

		var buf = new ArrayBuffer( 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f2, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.status, true );
		lp.setInt16( 0xe, struct.sex, true );
		lp.setInt16( 0x10, struct.head, true );
		lp.setInt16( 0x12, struct.headPalette, true );

		return buf;
	},

	0x1f3: function PACKET_ZC_NOTIFY_EFFECT2( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f3, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.effectID, true );

		return buf;
	},

	0x1f4: function PACKET_ZC_REQ_EXCHANGE_ITEM2( struct ) {

		var buf = new ArrayBuffer( 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f4, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );
		lp.setUint32( 0x1a, struct.GID, true );
		lp.setInt16( 0x1e, struct.level, true );

		return buf;
	},

	0x1f5: function PACKET_ZC_ACK_EXCHANGE_ITEM2( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f5, true );
		lp.setUint8( 0x2, struct.result );
		lp.setUint32( 0x3, struct.GID, true );
		lp.setInt16( 0x7, struct.level, true );

		return buf;
	},

	0x1f6: function PACKET_ZC_REQ_BABY( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f6, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x1f7: function PACKET_CZ_JOIN_BABY( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f7, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.answer, true );

		return buf;
	},

	0x1f8: function PACKET_ZC_START_BABY( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f8, true );

		return buf;
	},

	0x1f9: function PACKET_CZ_REQ_JOIN_BABY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1f9, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x1fa: function PACKET_CA_LOGIN3( struct ) {

		var buf = new ArrayBuffer( 48 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1fa, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x1e + p, struct.PasswdMD5[i] ), i++, p += 1 );
		lp.setUint8( 0x2e, struct.clienttype );
		lp.setUint8( 0x2f, struct.ClientInfo );

		return buf;
	},

	0x1fb: function PACKET_CH_DELETE_CHAR2( struct ) {

		var buf = new ArrayBuffer( 56 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1fb, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 50; lp.setUint8( 0x6 + p, struct.key[i] ), i++, p += 1 );

		return buf;
	},

	0x1fc: function PACKET_ZC_REPAIRITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 13 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1fc, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// REPAIRITEM_INFO itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 13 ) {
			lp.setInt16( 0x4 + p2, struct.itemList[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemList[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemList[n].refiningLevel );

			// REPAIRITEM_INFO itemList.slot
			lp.setUint16( 0x9 + p2, struct.itemList[n].slot.card1, true );
			lp.setUint16( 0xb + p2, struct.itemList[n].slot.card2, true );
			lp.setUint16( 0xd + p2, struct.itemList[n].slot.card3, true );
			lp.setUint16( 0xf + p2, struct.itemList[n].slot.card4, true );
		}

		return buf;
	},

	0x1fd: function PACKET_CZ_REQ_ITEMREPAIR( struct ) {

		var buf = new ArrayBuffer( 15 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1fd, true );

		// REPAIRITEM_INFO TargetItemInfo
		lp.setInt16( 0x2, struct.TargetItemInfo.index, true );
		lp.setUint16( 0x4, struct.TargetItemInfo.ITID, true );
		lp.setUint8( 0x6, struct.TargetItemInfo.refiningLevel );

		// REPAIRITEM_INFO TargetItemInfo.slot
		lp.setUint16( 0x7, struct.TargetItemInfo.slot.card1, true );
		lp.setUint16( 0x9, struct.TargetItemInfo.slot.card2, true );
		lp.setUint16( 0xb, struct.TargetItemInfo.slot.card3, true );
		lp.setUint16( 0xd, struct.TargetItemInfo.slot.card4, true );

		return buf;
	},

	0x1fe: function PACKET_ZC_ACK_ITEMREPAIR( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1fe, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setUint8( 0x4, struct.result );

		return buf;
	},

	0x1ff: function PACKET_ZC_HIGHJUMP( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x1ff, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );

		return buf;
	},

	0x200: function PACKET_CA_CONNECT_INFO_CHANGED( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x200, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.ID[i] ), i++, p += 1 );

		return buf;
	},

	0x201: function PACKET_ZC_FRIENDS_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.friendList.length * 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x201, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// STRUCT_FRIEND friendList
		for( var n = 0, p2 = 0; n < struct.friendList.length; n++, p2 += 32 ) {
			lp.setUint32( 0x4 + p2, struct.friendList[n].AID, true );
			lp.setUint32( 0x8 + p2, struct.friendList[n].GID, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0xc + p2 + p, struct.friendList[n].Name[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x202: function PACKET_CZ_ADD_FRIENDS( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x202, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x203: function PACKET_CZ_DELETE_FRIENDS( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x203, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );

		return buf;
	},

	0x204: function PACKET_CA_EXE_HASHCHECK( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x204, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x2 + p, struct.HashValue[i] ), i++, p += 1 );

		return buf;
	},

	0x205: function PACKET_ZC_DIVORCE( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x205, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x206: function PACKET_ZC_FRIENDS_STATE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x206, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setUint8( 0xa, struct.State );

		return buf;
	},

	0x207: function PACKET_ZC_REQ_ADD_FRIENDS( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x207, true );
		lp.setUint32( 0x2, struct.ReqAID, true );
		lp.setUint32( 0x6, struct.ReqGID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.Name[i] ), i++, p += 1 );

		return buf;
	},

	0x208: function PACKET_CZ_ACK_REQ_ADD_FRIENDS( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x208, true );
		lp.setUint32( 0x2, struct.ReqAID, true );
		lp.setUint32( 0x6, struct.ReqGID, true );
		lp.setInt32( 0xa, struct.Result, true );

		return buf;
	},

	0x209: function PACKET_ZC_ADD_FRIENDS_LIST( struct ) {

		var buf = new ArrayBuffer( 36 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x209, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.GID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xc + p, struct.Name[i] ), i++, p += 1 );

		return buf;
	},

	0x20a: function PACKET_ZC_DELETE_FRIENDS( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20a, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );

		return buf;
	},

	0x20b: function PACKET_CH_EXE_HASHCHECK( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20b, true );
		lp.setUint8( 0x2, struct.ClientType );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x3 + p, struct.HashValue[i] ), i++, p += 1 );

		return buf;
	},

	0x20c: function PACKET_CZ_EXE_HASHCHECK( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20c, true );
		lp.setUint8( 0x2, struct.ClientType );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x3 + p, struct.HashValue[i] ), i++, p += 1 );

		return buf;
	},

	0x20d: function PACKET_HC_BLOCK_CHARACTER( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.characterList.length * 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20d, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// TAG_CHARACTER_BLOCK_INFO characterList
		for( var n = 0, p2 = 0; n < struct.characterList.length; n++, p2 += 24 ) {
			lp.setUint32( 0x4 + p2, struct.characterList[n].GID, true );
			for( var p = 0, i = 0; i < 20; lp.setUint8( 0x8 + p2 + p, struct.characterList[n].szExpireDate[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x20e: function PACKET_ZC_STARSKILL( struct ) {

		var buf = new ArrayBuffer( 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20e, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setInt32( 0x1a, struct.monsterID, true );
		lp.setUint8( 0x1e, struct.star );
		lp.setUint8( 0x1f, struct.result );

		return buf;
	},

	0x20f: function PACKET_CZ_REQ_PVPPOINT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x20f, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );

		return buf;
	},

	0x210: function PACKET_ZC_ACK_PVPPOINT( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x210, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );

		// PVPINFO PVP
		lp.setInt32( 0xa, struct.PVP.WinPoint, true );
		lp.setInt32( 0xe, struct.PVP.LosePoint, true );
		lp.setInt32( 0x12, struct.PVP.Point, true );

		return buf;
	},

	0x211: function PACKET_ZH_MOVE_PVPWORLD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x211, true );
		lp.setUint32( 0x2, struct.GID, true );

		return buf;
	},

	0x212: function PACKET_CZ_REQ_GIVE_MANNER_BYNAME( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x212, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.CharName[i] ), i++, p += 1 );

		return buf;
	},

	0x213: function PACKET_CZ_REQ_STATUS_GM( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x213, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.CharName[i] ), i++, p += 1 );

		return buf;
	},

	0x214: function PACKET_ZC_ACK_STATUS_GM( struct ) {

		var buf = new ArrayBuffer( 42 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x214, true );
		lp.setUint8( 0x2, struct.str );
		lp.setUint8( 0x3, struct.standardStr );
		lp.setUint8( 0x4, struct.agi );
		lp.setUint8( 0x5, struct.standardAgi );
		lp.setUint8( 0x6, struct.vit );
		lp.setUint8( 0x7, struct.standardVit );
		lp.setUint8( 0x8, struct.Int );
		lp.setUint8( 0x9, struct.standardInt );
		lp.setUint8( 0xa, struct.dex );
		lp.setUint8( 0xb, struct.standardDex );
		lp.setUint8( 0xc, struct.luk );
		lp.setUint8( 0xd, struct.standardLuk );
		lp.setInt16( 0xe, struct.attPower, true );
		lp.setInt16( 0x10, struct.refiningPower, true );
		lp.setInt16( 0x12, struct.max_mattPower, true );
		lp.setInt16( 0x14, struct.min_mattPower, true );
		lp.setInt16( 0x16, struct.itemdefPower, true );
		lp.setInt16( 0x18, struct.plusdefPower, true );
		lp.setInt16( 0x1a, struct.mdefPower, true );
		lp.setInt16( 0x1c, struct.plusmdefPower, true );
		lp.setInt16( 0x1e, struct.hitSuccessValue, true );
		lp.setInt16( 0x20, struct.avoidSuccessValue, true );
		lp.setInt16( 0x22, struct.plusAvoidSuccessValue, true );
		lp.setInt16( 0x24, struct.criticalSuccessValue, true );
		lp.setInt16( 0x26, struct.ASPD, true );
		lp.setInt16( 0x28, struct.plusASPD, true );

		return buf;
	},

	0x215: function PACKET_ZC_SKILLMSG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x215, true );
		lp.setInt32( 0x2, struct.MsgNo, true );

		return buf;
	},

	0x216: function PACKET_ZC_BABYMSG( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x216, true );
		lp.setInt32( 0x2, struct.MsgNo, true );

		return buf;
	},

	0x217: function PACKET_CZ_BLACKSMITH_RANK( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x217, true );

		return buf;
	},

	0x218: function PACKET_CZ_ALCHEMIST_RANK( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x218, true );

		return buf;
	},

	0x219: function PACKET_ZC_BLACKSMITH_RANK( struct ) {

		var buf = new ArrayBuffer( 282 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x219, true );
		for( var p = 0, i = 0; i < 10; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 10; lp.setInt32( 0xf2 + p, struct.Point[i], true ), i++, p += 4 );

		return buf;
	},

	0x21a: function PACKET_ZC_ALCHEMIST_RANK( struct ) {

		var buf = new ArrayBuffer( 282 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21a, true );
		for( var p = 0, i = 0; i < 10; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 10; lp.setInt32( 0xf2 + p, struct.Point[i], true ), i++, p += 4 );

		return buf;
	},

	0x21b: function PACKET_ZC_BLACKSMITH_POINT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21b, true );
		lp.setInt32( 0x2, struct.Point, true );
		lp.setInt32( 0x6, struct.TotalPoint, true );

		return buf;
	},

	0x21c: function PACKET_ZC_ALCHEMIST_POINT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21c, true );
		lp.setInt32( 0x2, struct.Point, true );
		lp.setInt32( 0x6, struct.TotalPoint, true );

		return buf;
	},

	0x21d: function PACKET_CZ_LESSEFFECT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21d, true );
		lp.setInt32( 0x2, struct.isLess, true );

		return buf;
	},

	0x21e: function PACKET_ZC_LESSEFFECT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21e, true );
		lp.setInt32( 0x2, struct.isLess, true );

		return buf;
	},

	0x21f: function PACKET_ZC_NOTIFY_PKINFO( struct ) {

		var buf = new ArrayBuffer( 66 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x21f, true );
		lp.setInt32( 0x2, struct.winPoint, true );
		lp.setInt32( 0x6, struct.losePoint, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.killName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x22 + p, struct.killedName[i] ), i++, p += 1 );

		// _FILETIME expireTime
		lp.setUint32( 0x3a, struct.expireTime.dwLowDateTime, true );
		lp.setUint32( 0x3e, struct.expireTime.dwHighDateTime, true );

		return buf;
	},

	0x220: function PACKET_ZC_NOTIFY_CRAZYKILLER( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x220, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.isCrazyKiller, true );

		return buf;
	},

	0x221: function PACKET_ZC_NOTIFY_WEAPONITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.itemList.length * 13 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x221, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// REPAIRITEM_INFO itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 13 ) {
			lp.setInt16( 0x4 + p2, struct.itemList[n].index, true );
			lp.setUint16( 0x6 + p2, struct.itemList[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.itemList[n].refiningLevel );

			// REPAIRITEM_INFO itemList.slot
			lp.setUint16( 0x9 + p2, struct.itemList[n].slot.card1, true );
			lp.setUint16( 0xb + p2, struct.itemList[n].slot.card2, true );
			lp.setUint16( 0xd + p2, struct.itemList[n].slot.card3, true );
			lp.setUint16( 0xf + p2, struct.itemList[n].slot.card4, true );
		}

		return buf;
	},

	0x222: function PACKET_CZ_REQ_WEAPONREFINE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x222, true );
		lp.setInt32( 0x2, struct.Index, true );

		return buf;
	},

	0x223: function PACKET_ZC_ACK_WEAPONREFINE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x223, true );
		lp.setInt32( 0x2, struct.msg, true );
		lp.setUint16( 0x6, struct.ITID, true );

		return buf;
	},

	0x224: function PACKET_ZC_TAEKWON_POINT( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x224, true );
		lp.setInt32( 0x2, struct.Point, true );
		lp.setInt32( 0x6, struct.TotalPoint, true );

		return buf;
	},

	0x225: function PACKET_CZ_TAEKWON_RANK( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x225, true );

		return buf;
	},

	0x226: function PACKET_ZC_TAEKWON_RANK( struct ) {

		var buf = new ArrayBuffer( 282 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x226, true );
		for( var p = 0, i = 0; i < 10; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 10; lp.setInt32( 0xf2 + p, struct.Point[i], true ), i++, p += 4 );

		return buf;
	},

	0x227: function PACKET_ZC_GAME_GUARD( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x227, true );
		for( var p = 0, i = 0; i < 4; lp.setUint32( 0x2 + p, struct.AuthData[i], true ), i++, p += 4 );

		return buf;
	},

	0x228: function PACKET_CZ_ACK_GAME_GUARD( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x228, true );
		for( var p = 0, i = 0; i < 4; lp.setUint32( 0x2 + p, struct.AuthData[i], true ), i++, p += 4 );

		return buf;
	},

	0x229: function PACKET_ZC_STATE_CHANGE3( struct ) {

		var buf = new ArrayBuffer( 15 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x229, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.bodyState, true );
		lp.setInt16( 0x8, struct.healthState, true );
		lp.setInt32( 0xa, struct.effectState, true );
		lp.setUint8( 0xe, struct.isPKModeON );

		return buf;
	},

	0x22a: function PACKET_ZC_NOTIFY_STANDENTRY3( struct ) {

		var buf = new ArrayBuffer( 58 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x22a, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt32( 0xc, struct.effectState, true );
		lp.setInt16( 0x10, struct.job, true );
		lp.setInt16( 0x12, struct.head, true );
		lp.setInt32( 0x14, struct.weapon, true );
		lp.setInt16( 0x18, struct.accessory, true );
		lp.setInt16( 0x1a, struct.accessory2, true );
		lp.setInt16( 0x1c, struct.accessory3, true );
		lp.setInt16( 0x1e, struct.headpalette, true );
		lp.setInt16( 0x20, struct.bodypalette, true );
		lp.setInt16( 0x22, struct.headDir, true );
		lp.setUint32( 0x24, struct.GUID, true );
		lp.setInt16( 0x28, struct.GEmblemVer, true );
		lp.setInt16( 0x2a, struct.honor, true );
		lp.setInt32( 0x2c, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x32 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x35, struct.xSize );
		lp.setUint8( 0x36, struct.ySize );
		lp.setUint8( 0x37, struct.state );
		lp.setInt16( 0x38, struct.clevel, true );

		return buf;
	},

	0x22b: function PACKET_ZC_NOTIFY_NEWENTRY3( struct ) {

		var buf = new ArrayBuffer( 57 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x22b, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt32( 0xc, struct.effectState, true );
		lp.setInt16( 0x10, struct.job, true );
		lp.setInt16( 0x12, struct.head, true );
		lp.setInt32( 0x14, struct.weapon, true );
		lp.setInt16( 0x18, struct.accessory, true );
		lp.setInt16( 0x1a, struct.accessory2, true );
		lp.setInt16( 0x1c, struct.accessory3, true );
		lp.setInt16( 0x1e, struct.headpalette, true );
		lp.setInt16( 0x20, struct.bodypalette, true );
		lp.setInt16( 0x22, struct.headDir, true );
		lp.setUint32( 0x24, struct.GUID, true );
		lp.setInt16( 0x28, struct.GEmblemVer, true );
		lp.setInt16( 0x2a, struct.honor, true );
		lp.setInt32( 0x2c, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x32 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x35, struct.xSize );
		lp.setUint8( 0x36, struct.ySize );
		lp.setInt16( 0x37, struct.clevel, true );

		return buf;
	},

	0x22c: function PACKET_ZC_NOTIFY_MOVEENTRY3( struct ) {

		var buf = new ArrayBuffer( 65 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x22c, true );
		lp.setUint8( 0x2, struct.objecttype );
		lp.setUint32( 0x3, struct.GID, true );
		lp.setInt16( 0x7, struct.speed, true );
		lp.setInt16( 0x9, struct.bodyState, true );
		lp.setInt16( 0xb, struct.healthState, true );
		lp.setInt32( 0xd, struct.effectState, true );
		lp.setInt16( 0x11, struct.job, true );
		lp.setInt16( 0x13, struct.head, true );
		lp.setInt32( 0x15, struct.weapon, true );
		lp.setInt16( 0x19, struct.accessory, true );
		lp.setUint32( 0x1b, struct.moveStartTime, true );
		lp.setInt16( 0x1f, struct.accessory2, true );
		lp.setInt16( 0x21, struct.accessory3, true );
		lp.setInt16( 0x23, struct.headpalette, true );
		lp.setInt16( 0x25, struct.bodypalette, true );
		lp.setInt16( 0x27, struct.headDir, true );
		lp.setUint32( 0x29, struct.GUID, true );
		lp.setInt16( 0x2d, struct.GEmblemVer, true );
		lp.setInt16( 0x2f, struct.honor, true );
		lp.setInt32( 0x31, struct.virtue, true );
		lp.setUint8( 0x35, struct.isPKModeON );
		lp.setUint8( 0x36, struct.sex );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x37 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint8( 0x3d, struct.xSize );
		lp.setUint8( 0x3e, struct.ySize );
		lp.setInt16( 0x3f, struct.clevel, true );

		return buf;
	},

	0x22d: function PACKET_CZ_COMMAND_MER( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x22d, true );
		lp.setInt16( 0x2, struct.type, true );
		lp.setUint8( 0x4, struct.command );

		return buf;
	},

	0x22e: function PACKET_ZC_PROPERTY_HOMUN( struct ) {

		var buf = new ArrayBuffer( 71 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x22e, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.szName[i] ), i++, p += 1 );
		lp.setUint8( 0x1a, struct.bModified );
		lp.setInt16( 0x1b, struct.nLevel, true );
		lp.setInt16( 0x1d, struct.nFullness, true );
		lp.setInt16( 0x1f, struct.nRelationship, true );
		lp.setUint16( 0x21, struct.ITID, true );
		lp.setInt16( 0x23, struct.atk, true );
		lp.setInt16( 0x25, struct.Matk, true );
		lp.setInt16( 0x27, struct.hit, true );
		lp.setInt16( 0x29, struct.critical, true );
		lp.setInt16( 0x2b, struct.def, true );
		lp.setInt16( 0x2d, struct.Mdef, true );
		lp.setInt16( 0x2f, struct.flee, true );
		lp.setInt16( 0x31, struct.aspd, true );
		lp.setInt16( 0x33, struct.hp, true );
		lp.setInt16( 0x35, struct.maxHP, true );
		lp.setInt16( 0x37, struct.sp, true );
		lp.setInt16( 0x39, struct.maxSP, true );
		lp.setInt32( 0x3b, struct.exp, true );
		lp.setInt32( 0x3f, struct.maxEXP, true );
		lp.setInt16( 0x43, struct.SKPoint, true );
		lp.setInt16( 0x45, struct.ATKRange, true );

		return buf;
	},

	0x230: function PACKET_ZC_CHANGESTATE_MER( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x230, true );
		lp.setUint8( 0x2, struct.type );
		lp.setUint8( 0x3, struct.state );
		lp.setInt32( 0x4, struct.GID, true );
		lp.setInt32( 0x8, struct.data, true );

		return buf;
	},

	0x231: function PACKET_CZ_RENAME_MER( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x231, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x232: function PACKET_CZ_REQUEST_MOVENPC( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x232, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x6 + p, struct.dest[i] ), i++, p += 1 );

		return buf;
	},

	0x233: function PACKET_CZ_REQUEST_ACTNPC( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x233, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint32( 0x6, struct.targetGID, true );
		lp.setUint8( 0xa, struct.action );

		return buf;
	},

	0x234: function PACKET_CZ_REQUEST_MOVETOOWNER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x234, true );
		lp.setUint32( 0x2, struct.GID, true );

		return buf;
	},

	0x23a: function PACKET_ZC_REQ_STORE_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23a, true );
		lp.setInt16( 0x2, struct.Info, true );

		return buf;
	},

	0x23b: function PACKET_CZ_ACK_STORE_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 36 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23b, true );
		lp.setInt16( 0x2, struct.Type, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x4 + p, struct.Password[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x14 + p, struct.NewPassword[i] ), i++, p += 1 );

		return buf;
	},

	0x23c: function PACKET_ZC_RESULT_STORE_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23c, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setInt16( 0x4, struct.ErrorCount, true );

		return buf;
	},

	0x23d: function PACKET_AC_EVENT_RESULT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23d, true );
		lp.setUint32( 0x2, struct.EventItemCount, true );

		return buf;
	},

	0x23e: function PACKET_HC_REQUEST_CHARACTER_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23e, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setUint32( 0x4, struct.dummyValue, true );

		return buf;
	},

	0x23f: function PACKET_CZ_MAIL_GET_LIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x23f, true );

		return buf;
	},

	0x240: function PACKET_ZC_MAIL_REQ_GET_LIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.mailList.length * 73 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x240, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.MailNumber, true );

		// MAIL_LIST mailList
		for( var n = 0, p2 = 0; n < struct.mailList.length; n++, p2 += 73 ) {
			lp.setUint32( 0x8 + p2, struct.mailList[n].MailID, true );
			for( var p = 0, i = 0; i < 40; lp.setUint8( 0xc + p2 + p, struct.mailList[n].HEADER[i] ), i++, p += 1 );
			lp.setUint8( 0x34 + p2, struct.mailList[n].isOpen );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x35 + p2 + p, struct.mailList[n].FromName[i] ), i++, p += 1 );
			lp.setInt32( 0x4d + p2, struct.mailList[n].DeleteTime, true );
		}

		return buf;
	},

	0x241: function PACKET_CZ_MAIL_OPEN( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x241, true );
		lp.setInt32( 0x2, struct.MailID, true );

		return buf;
	},

	0x242: function PACKET_ZC_MAIL_REQ_OPEN( struct ) {

		var buf = new ArrayBuffer( 0x64 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x242, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.MailID, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x8 + p, struct.Header[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x30 + p, struct.FromName[i] ), i++, p += 1 );
		lp.setInt32( 0x48, struct.DeleteTime, true );
		lp.setUint32( 0x4c, struct.Money, true );
		lp.setInt32( 0x50, struct.count, true );
		lp.setUint16( 0x54, struct.ITID, true );
		lp.setUint16( 0x56, struct.Type, true );
		lp.setUint8( 0x58, struct.IsIdentified );
		lp.setUint8( 0x59, struct.IsDamaged );
		lp.setUint8( 0x5a, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0x5b, struct.slot.card1, true );
		lp.setUint16( 0x5d, struct.slot.card2, true );
		lp.setUint16( 0x5f, struct.slot.card3, true );
		lp.setUint16( 0x61, struct.slot.card4, true );
		lp.setUint8( 0x63, struct.msg_len );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x64 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x243: function PACKET_CZ_MAIL_DELETE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x243, true );
		lp.setInt32( 0x2, struct.MailID, true );

		return buf;
	},

	0x244: function PACKET_CZ_MAIL_GET_ITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x244, true );
		lp.setInt32( 0x2, struct.MailID, true );

		return buf;
	},

	0x245: function PACKET_ZC_MAIL_REQ_GET_ITEM( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x245, true );
		lp.setUint8( 0x2, struct.Result );

		return buf;
	},

	0x246: function PACKET_CZ_MAIL_RESET_ITEM( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x246, true );
		lp.setInt16( 0x2, struct.Type, true );

		return buf;
	},

	0x247: function PACKET_CZ_MAIL_ADD_ITEM( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x247, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x248: function PACKET_CZ_MAIL_SEND( struct ) {

		var buf = new ArrayBuffer( 0x48 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x248, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.ReceiveName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x1c + p, struct.Header[i] ), i++, p += 1 );
		lp.setUint32( 0x44, struct.msg_len, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x48 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x249: function PACKET_ZC_MAIL_REQ_SEND( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x249, true );
		lp.setUint8( 0x2, struct.Result );

		return buf;
	},

	0x24a: function PACKET_ZC_MAIL_RECEIVE( struct ) {

		var buf = new ArrayBuffer( 70 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24a, true );
		lp.setUint32( 0x2, struct.MailID, true );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x6 + p, struct.Header[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2e + p, struct.FromName[i] ), i++, p += 1 );

		return buf;
	},

	0x24b: function PACKET_CZ_AUCTION_CREATE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24b, true );
		lp.setInt16( 0x2, struct.Type, true );

		return buf;
	},

	0x24c: function PACKET_CZ_AUCTION_ADD_ITEM( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24c, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x24d: function PACKET_CZ_AUCTION_ADD( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24d, true );
		lp.setUint32( 0x2, struct.NowMoney, true );
		lp.setUint32( 0x6, struct.MaxMoney, true );
		lp.setInt16( 0xa, struct.DeleteHour, true );

		return buf;
	},

	0x24e: function PACKET_CZ_AUCTION_ADD_CANCEL( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24e, true );
		lp.setUint32( 0x2, struct.AuctionID, true );

		return buf;
	},

	0x24f: function PACKET_CZ_AUCTION_BUY( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x24f, true );
		lp.setUint32( 0x2, struct.AuctionID, true );
		lp.setUint32( 0x6, struct.Money, true );

		return buf;
	},

	0x250: function PACKET_ZC_AUCTION_RESULT( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x250, true );
		lp.setUint8( 0x2, struct.Result );

		return buf;
	},

	0x251: function PACKET_CZ_AUCTION_ITEM_SEARCH( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x251, true );
		lp.setInt16( 0x2, struct.Type, true );
		lp.setUint32( 0x4, struct.AuctionID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x8 + p, struct.Name[i] ), i++, p += 1 );
		lp.setUint16( 0x20, struct.Page, true );

		return buf;
	},

	0x252: function PACKET_ZC_AUCTION_ITEM_REQ_SEARCH( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.auctionItemList.length * 83 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x252, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.MaxPage, true );
		lp.setInt32( 0x8, struct.Number, true );

		// AUCTION_ITEM_SEARCH_INFO auctionItemList
		for( var n = 0, p2 = 0; n < struct.auctionItemList.length; n++, p2 += 83 ) {
			lp.setUint32( 0xc + p2, struct.auctionItemList[n].AuctionID, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x10 + p2 + p, struct.auctionItemList[n].SellerName[i] ), i++, p += 1 );
			lp.setUint16( 0x28 + p2, struct.auctionItemList[n].ITID, true );
			lp.setInt32( 0x2a + p2, struct.auctionItemList[n].Type, true );
			lp.setInt16( 0x2e + p2, struct.auctionItemList[n].count, true );
			lp.setUint8( 0x30 + p2, struct.auctionItemList[n].IsIdentified );
			lp.setUint8( 0x31 + p2, struct.auctionItemList[n].IsDamaged );
			lp.setUint8( 0x32 + p2, struct.auctionItemList[n].refiningLevel );

			// AUCTION_ITEM_SEARCH_INFO auctionItemList.slot
			lp.setUint16( 0x33 + p2, struct.auctionItemList[n].slot.card1, true );
			lp.setUint16( 0x35 + p2, struct.auctionItemList[n].slot.card2, true );
			lp.setUint16( 0x37 + p2, struct.auctionItemList[n].slot.card3, true );
			lp.setUint16( 0x39 + p2, struct.auctionItemList[n].slot.card4, true );
			lp.setInt32( 0x3b + p2, struct.auctionItemList[n].NowPrice, true );
			lp.setInt32( 0x3f + p2, struct.auctionItemList[n].MaxPrice, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x43 + p2 + p, struct.auctionItemList[n].BuyerName[i] ), i++, p += 1 );
			lp.setInt32( 0x5b + p2, struct.auctionItemList[n].DeleteTime, true );
		}

		return buf;
	},

	0x253: function PACKET_ZC_STARPLACE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x253, true );
		lp.setUint8( 0x2, struct.which );

		return buf;
	},

	0x254: function PACKET_CZ_AGREE_STARPLACE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x254, true );
		lp.setUint8( 0x2, struct.which );

		return buf;
	},

	0x255: function PACKET_ZC_ACK_MAIL_ADD_ITEM( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x255, true );
		lp.setInt16( 0x2, struct.Index, true );
		lp.setUint8( 0x4, struct.result );

		return buf;
	},

	0x256: function PACKET_ZC_ACK_AUCTION_ADD_ITEM( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x256, true );
		lp.setInt16( 0x2, struct.Index, true );
		lp.setUint8( 0x4, struct.result );

		return buf;
	},

	0x257: function PACKET_ZC_ACK_MAIL_DELETE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x257, true );
		lp.setInt32( 0x2, struct.MailID, true );
		lp.setUint16( 0x6, struct.Result, true );

		return buf;
	},

	0x258: function PACKET_CA_REQ_GAME_GUARD_CHECK( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x258, true );

		return buf;
	},

	0x259: function PACKET_AC_ACK_GAME_GUARD( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x259, true );
		lp.setUint8( 0x2, struct.ucAnswer );

		return buf;
	},

	0x25a: function PACKET_ZC_MAKINGITEM_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.idList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25a, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.idList.length; lp.setUint16( 0x4 + p, struct.idList[i], true ), i++, p += 2 );

		return buf;
	},

	0x25b: function PACKET_CZ_REQ_MAKINGITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25b, true );
		lp.setInt16( 0x2, struct.mkType, true );
		lp.setUint16( 0x4, struct.id, true );

		return buf;
	},

	0x25c: function PACKET_CZ_AUCTION_REQ_MY_INFO( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25c, true );
		lp.setInt16( 0x2, struct.Type, true );

		return buf;
	},

	0x25d: function PACKET_CZ_AUCTION_REQ_MY_SELL_STOP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25d, true );
		lp.setUint32( 0x2, struct.AuctionID, true );

		return buf;
	},

	0x25e: function PACKET_ZC_AUCTION_ACK_MY_SELL_STOP( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25e, true );
		lp.setInt16( 0x2, struct.Result, true );

		return buf;
	},

	0x25f: function PACKET_ZC_AUCTION_WINDOWS( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x25f, true );
		lp.setInt32( 0x2, struct.Type, true );

		return buf;
	},

	0x260: function PACKET_ZC_MAIL_WINDOWS( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x260, true );
		lp.setInt32( 0x2, struct.Type, true );

		return buf;
	},

	0x261: function PACKET_AC_REQ_LOGIN_OLDEKEY( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x261, true );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0x2 + p, struct.m_SeedValue[i] ), i++, p += 1 );

		return buf;
	},

	0x262: function PACKET_AC_REQ_LOGIN_NEWEKEY( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x262, true );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0x2 + p, struct.m_SeedValue[i] ), i++, p += 1 );

		return buf;
	},

	0x263: function PACKET_AC_REQ_LOGIN_CARDPASS( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x263, true );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0x2 + p, struct.m_SeedValue[i] ), i++, p += 1 );

		return buf;
	},

	0x264: function PACKET_CA_ACK_LOGIN_OLDEKEY( struct ) {

		var buf = new ArrayBuffer( 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x264, true );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0x2 + p, struct.m_SeedValue[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0xb + p, struct.m_EKey[i] ), i++, p += 1 );

		return buf;
	},

	0x265: function PACKET_CA_ACK_LOGIN_NEWEKEY( struct ) {

		var buf = new ArrayBuffer( 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x265, true );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0x2 + p, struct.m_SeedValue[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 9; lp.setUint8( 0xb + p, struct.m_EKey[i] ), i++, p += 1 );

		return buf;
	},

	0x266: function PACKET_CA_ACK_LOGIN_CARDPASS( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x266, true );
		for( var p = 0, i = 0; i < 28; lp.setUint8( 0x2 + p, struct.m_cardPass[i] ), i++, p += 1 );

		return buf;
	},

	0x267: function PACKET_AC_ACK_EKEY_FAIL_NOTEXIST( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x267, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x268: function PACKET_AC_ACK_EKEY_FAIL_NOTUSESEKEY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x268, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x269: function PACKET_AC_ACK_EKEY_FAIL_NOTUSEDEKEY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x269, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26a: function PACKET_AC_ACK_EKEY_FAIL_AUTHREFUSE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26a, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26b: function PACKET_AC_ACK_EKEY_FAIL_INPUTEKEY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26b, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26c: function PACKET_AC_ACK_EKEY_FAIL_NOTICE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26c, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26d: function PACKET_AC_ACK_EKEY_FAIL_NEEDCARDPASS( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26d, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26e: function PACKET_AC_ACK_AUTHEKEY_FAIL_NOTMATCHCARDPASS( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26e, true );
		lp.setInt16( 0x2, struct.errorCode, true );

		return buf;
	},

	0x26f: function PACKET_AC_ACK_FIRST_LOGIN( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x26f, true );

		return buf;
	},

	0x270: function PACKET_AC_REQ_LOGIN_ACCOUNT_INFO( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x270, true );

		return buf;
	},

	0x271: function PACKET_CA_ACK_LOGIN_ACCOUNT_INFO( struct ) {

		var buf = new ArrayBuffer( 40 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x271, true );
		lp.setInt16( 0x2, struct.sex, true );
		lp.setInt16( 0x4, struct.bPoint, true );
		for( var p = 0, i = 0; i < 34; lp.setUint8( 0x6 + p, struct.E_mail[i] ), i++, p += 1 );

		return buf;
	},

	0x272: function PACKET_AC_ACK_PT_ID_INFO( struct ) {

		var buf = new ArrayBuffer( 44 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x272, true );
		for( var p = 0, i = 0; i < 21; lp.setUint8( 0x2 + p, struct.szPTID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 21; lp.setUint8( 0x17 + p, struct.szPTNumID[i] ), i++, p += 1 );

		return buf;
	},

	0x273: function PACKET_CZ_REQ_MAIL_RETURN( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x273, true );
		lp.setInt32( 0x2, struct.MailID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ReceiveName[i] ), i++, p += 1 );

		return buf;
	},

	0x274: function PACKET_ZC_ACK_MAIL_RETURN( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x274, true );
		lp.setInt32( 0x2, struct.MailID, true );
		lp.setInt16( 0x6, struct.Result, true );

		return buf;
	},

	0x275: function PACKET_CH_ENTER2( struct ) {

		var buf = new ArrayBuffer( 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x275, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.AuthCode, true );
		lp.setUint32( 0xa, struct.userLevel, true );
		lp.setUint16( 0xe, struct.clientType, true );
		lp.setUint8( 0x10, struct.Sex );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x11 + p, struct.macData[i] ), i++, p += 1 );
		lp.setInt32( 0x21, struct.iAccountSID, true );

		return buf;
	},

	0x276: function PACKET_AC_ACCEPT_LOGIN2( struct ) {

		var buf = new ArrayBuffer( 51 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x276, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.AuthCode, true );
		lp.setUint32( 0x8, struct.AID, true );
		lp.setUint32( 0xc, struct.userLevel, true );
		lp.setUint32( 0x10, struct.lastLoginIP, true );
		for( var p = 0, i = 0; i < 26; lp.setUint8( 0x14 + p, struct.lastLoginTime[i] ), i++, p += 1 );
		lp.setUint8( 0x2e, struct.Sex );
		lp.setInt32( 0x2f, struct.iAccountSID, true );

		return buf;
	},

	0x277: function PACKET_CA_LOGIN_PCBANG( struct ) {

		var buf = new ArrayBuffer( 84 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x277, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1e + p, struct.Passwd[i] ), i++, p += 1 );
		lp.setUint8( 0x36, struct.clienttype );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x37 + p, struct.IP[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 13; lp.setUint8( 0x47 + p, struct.MacAdress[i] ), i++, p += 1 );

		return buf;
	},

	0x278: function PACKET_ZC_NOTIFY_PCBANG( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x278, true );

		return buf;
	},

	0x279: function PACKET_CZ_HUNTINGLIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x279, true );

		return buf;
	},

	0x27a: function PACKET_ZC_HUNTINGLIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.HuntingList.length * 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27a, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// PACKET_MOB_HUNTING HuntingList
		for( var n = 0, p2 = 0; n < struct.HuntingList.length; n++, p2 += 12 ) {
			lp.setUint32( 0x4 + p2, struct.HuntingList[n].questID, true );
			lp.setUint32( 0x8 + p2, struct.HuntingList[n].mobGID, true );
			lp.setInt16( 0xc + p2, struct.HuntingList[n].maxCount, true );
			lp.setInt16( 0xe + p2, struct.HuntingList[n].count, true );
		}

		return buf;
	},

	0x27b: function PACKET_ZC_PCBANG_EFFECT( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27b, true );
		lp.setInt32( 0x2, struct.ExpFactor, true );
		lp.setInt32( 0x6, struct.ExpFactor2, true );
		lp.setInt32( 0xa, struct.DropFactor, true );

		return buf;
	},

	0x27c: function PACKET_CA_LOGIN4( struct ) {

		var buf = new ArrayBuffer( 60 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27c, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x1e + p, struct.PasswdMD5[i] ), i++, p += 1 );
		lp.setUint8( 0x2e, struct.clienttype );
		for( var p = 0, i = 0; i < 13; lp.setUint8( 0x2f + p, struct.macData[i] ), i++, p += 1 );

		return buf;
	},

	0x27d: function PACKET_ZC_PROPERTY_MERCE( struct ) {

		var buf = new ArrayBuffer( 62 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27d, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.name[i] ), i++, p += 1 );
		lp.setInt16( 0x1a, struct.level, true );
		lp.setInt16( 0x1c, struct.faith, true );
		lp.setInt16( 0x1e, struct.summonCount, true );
		lp.setInt16( 0x20, struct.atk, true );
		lp.setInt16( 0x22, struct.Matk, true );
		lp.setInt16( 0x24, struct.hit, true );
		lp.setInt16( 0x26, struct.critical, true );
		lp.setInt16( 0x28, struct.def, true );
		lp.setInt16( 0x2a, struct.Mdef, true );
		lp.setInt16( 0x2c, struct.flee, true );
		lp.setInt16( 0x2e, struct.aspd, true );
		lp.setInt16( 0x30, struct.hp, true );
		lp.setInt16( 0x32, struct.maxHP, true );
		lp.setInt16( 0x34, struct.sp, true );
		lp.setInt16( 0x36, struct.maxSP, true );
		lp.setInt16( 0x38, struct.ATKRange, true );
		lp.setInt32( 0x3a, struct.exp, true );

		return buf;
	},

	0x27e: function PACKET_ZC_SHANDA_PROTECT( struct ) {

		var buf = new ArrayBuffer( 0x6 + struct.Code.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27e, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.CodeLen, true );
		for( var p = 0, i = 0; i < struct.Code.length; lp.setUint8( 0x6 + p, struct.Code[i] ), i++, p += 1 );

		return buf;
	},

	0x27f: function PACKET_CA_CLIENT_TYPE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x27f, true );
		lp.setInt16( 0x2, struct.ClientType, true );
		lp.setInt32( 0x4, struct.nVer, true );

		return buf;
	},

	0x280: function PACKET_ZC_GANGSI_POINT( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x280, true );
		lp.setInt32( 0x2, struct.Point, true );
		lp.setInt32( 0x6, struct.TotalPoint, true );
		lp.setInt16( 0xa, struct.PacketSwitch, true );

		return buf;
	},

	0x281: function PACKET_CZ_GANGSI_RANK( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x281, true );
		lp.setInt16( 0x2, struct.PacketSwitch, true );

		return buf;
	},

	0x282: function PACKET_ZC_GANGSI_RANK( struct ) {

		var buf = new ArrayBuffer( 284 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x282, true );
		for( var p = 0, i = 0; i < 10; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 10; lp.setInt32( 0xf2 + p, struct.Point[i], true ), i++, p += 4 );
		lp.setInt16( 0x11a, struct.PacketSwitch, true );

		return buf;
	},

	0x283: function PACKET_ZC_AID( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x283, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x284: function PACKET_ZC_NOTIFY_EFFECT3( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x284, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.effectID, true );
		lp.setInt32( 0xa, struct.numdata, true );

		return buf;
	},

	0x285: function PACKET_ZC_DEATH_QUESTION( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x285, true );
		lp.setInt16( 0x2, struct.Qcategory, true );
		lp.setInt16( 0x4, struct.Qnum, true );

		return buf;
	},

	0x286: function PACKET_CZ_DEATH_QUESTION( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x286, true );
		lp.setInt16( 0x2, struct.Qanswer, true );

		return buf;
	},

	0x287: function PACKET_ZC_PC_CASH_POINT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.itemList.length * 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x287, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.CashPoint, true );

		// PURCHASE_ITEM itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 11 ) {
			lp.setInt32( 0x8 + p2, struct.itemList[n].price, true );
			lp.setInt32( 0xc + p2, struct.itemList[n].discountprice, true );
			lp.setUint8( 0x10 + p2, struct.itemList[n].type );
			lp.setUint16( 0x11 + p2, struct.itemList[n].ITID, true );
		}

		return buf;
	},

	0x288: function PACKET_CZ_PC_BUY_CASH_POINT_ITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x288, true );
		lp.setUint16( 0x2, struct.ITID, true );
		lp.setInt16( 0x4, struct.count, true );

		return buf;
	},

	0x289: function PACKET_ZC_PC_CASH_POINT_UPDATE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x289, true );
		lp.setUint32( 0x2, struct.CashPoint, true );
		lp.setInt16( 0x6, struct.Error, true );

		return buf;
	},

	0x28a: function PACKET_ZC_NPC_SHOWEFST_UPDATE( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x28a, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.effectState, true );
		lp.setInt32( 0xa, struct.clevel, true );
		lp.setInt32( 0xe, struct.showEFST, true );

		return buf;
	},

	0x28c: function PACKET_CH_SELECT_CHAR_GOINGTOBEUSED( struct ) {

		var buf = new ArrayBuffer( 46 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x28c, true );
		lp.setUint32( 0x2, struct.dwAID, true );
		lp.setInt32( 0x6, struct.nCountSelectedChar, true );
		for( var p = 0, i = 0; i < 9; lp.setUint32( 0xa + p, struct.ardwSelectedGID[i], true ), i++, p += 4 );

		return buf;
	},

	0x28d: function PACKET_CH_REQ_IS_VALID_CHARNAME( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x28d, true );
		lp.setUint32( 0x2, struct.dwAID, true );
		lp.setUint32( 0x6, struct.dwGID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0xa + p, struct.szCharName[i] ), i++, p += 1 );

		return buf;
	},

	0x28e: function PACKET_HC_ACK_IS_VALID_CHARNAME( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x28e, true );
		lp.setInt16( 0x2, struct.sResult, true );

		return buf;
	},

	0x28f: function PACKET_CH_REQ_CHANGE_CHARNAME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x28f, true );
		lp.setUint32( 0x2, struct.dwGID, true );

		return buf;
	},

	0x290: function PACKET_HC_ACK_CHANGE_CHARNAME( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x290, true );
		lp.setInt16( 0x2, struct.sResult, true );

		return buf;
	},

	0x291: function PACKET_ZC_MSG( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x291, true );
		lp.setUint16( 0x2, struct.msg, true );

		return buf;
	},

	0x292: function PACKET_CZ_STANDING_RESURRECTION( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x292, true );

		return buf;
	},

	0x293: function PACKET_ZC_BOSS_INFO( struct ) {

		var buf = new ArrayBuffer( 70 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x293, true );
		lp.setUint8( 0x2, struct.infoType );
		lp.setInt32( 0x3, struct.xPos, true );
		lp.setInt32( 0x7, struct.yPos, true );
		lp.setUint16( 0xb, struct.minHour, true );
		lp.setUint16( 0xd, struct.minMinute, true );
		lp.setUint16( 0xf, struct.maxHour, true );
		lp.setUint16( 0x11, struct.maxMinute, true );
		for( var p = 0, i = 0; i < 51; lp.setUint8( 0x13 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x294: function PACKET_ZC_READ_BOOK( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x294, true );
		lp.setUint32( 0x2, struct.bookID, true );
		lp.setUint32( 0x6, struct.page, true );

		return buf;
	},

	0x295: function PACKET_ZC_EQUIPMENT_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x295, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 24 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x296: function PACKET_ZC_STORE_EQUIPMENT_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x296, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 24 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x297: function PACKET_ZC_CART_EQUIPMENT_ITEMLIST2( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 24 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x297, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO2 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 24 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO2 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x298: function PACKET_ZC_CASH_TIME_COUNTER( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x298, true );
		lp.setUint16( 0x2, struct.ITID, true );
		lp.setUint32( 0x4, struct.RemainSecond, true );

		return buf;
	},

	0x299: function PACKET_ZC_CASH_ITEM_DELETE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x299, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setUint16( 0x4, struct.ITID, true );

		return buf;
	},

	0x29a: function PACKET_ZC_ITEM_PICKUP_ACK2( struct ) {

		var buf = new ArrayBuffer( 27 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29a, true );
		lp.setUint16( 0x2, struct.Index, true );
		lp.setUint16( 0x4, struct.count, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setUint8( 0x9, struct.IsDamaged );
		lp.setUint8( 0xa, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xb, struct.slot.card1, true );
		lp.setUint16( 0xd, struct.slot.card2, true );
		lp.setUint16( 0xf, struct.slot.card3, true );
		lp.setUint16( 0x11, struct.slot.card4, true );
		lp.setUint16( 0x13, struct.location, true );
		lp.setUint8( 0x15, struct.type );
		lp.setUint8( 0x16, struct.result );
		lp.setInt32( 0x17, struct.HireExpireDate, true );

		return buf;
	},

	0x29b: function PACKET_ZC_MER_INIT( struct ) {

		var buf = new ArrayBuffer( 80 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29b, true );
		lp.setInt32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.atk, true );
		lp.setInt16( 0x8, struct.Matk, true );
		lp.setInt16( 0xa, struct.hit, true );
		lp.setInt16( 0xc, struct.critical, true );
		lp.setInt16( 0xe, struct.def, true );
		lp.setInt16( 0x10, struct.Mdef, true );
		lp.setInt16( 0x12, struct.flee, true );
		lp.setInt16( 0x14, struct.aspd, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x16 + p, struct.name[i] ), i++, p += 1 );
		lp.setInt16( 0x2e, struct.level, true );
		lp.setInt32( 0x30, struct.hp, true );
		lp.setInt32( 0x34, struct.maxHP, true );
		lp.setInt32( 0x38, struct.sp, true );
		lp.setInt32( 0x3c, struct.maxSP, true );
		lp.setInt32( 0x40, struct.ExpireDate, true );
		lp.setInt16( 0x44, struct.faith, true );
		lp.setInt32( 0x46, struct.toal_call_num, true );
		lp.setInt32( 0x4a, struct.approval_monster_kill_counter, true );
		lp.setInt16( 0x4e, struct.ATKRange, true );

		return buf;
	},

	0x29c: function PACKET_ZC_MER_PROPERTY( struct ) {

		var buf = new ArrayBuffer( 66 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29c, true );
		lp.setInt16( 0x2, struct.atk, true );
		lp.setInt16( 0x4, struct.Matk, true );
		lp.setInt16( 0x6, struct.hit, true );
		lp.setInt16( 0x8, struct.critical, true );
		lp.setInt16( 0xa, struct.def, true );
		lp.setInt16( 0xc, struct.Mdef, true );
		lp.setInt16( 0xe, struct.flee, true );
		lp.setInt16( 0x10, struct.aspd, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x12 + p, struct.name[i] ), i++, p += 1 );
		lp.setInt16( 0x2a, struct.level, true );
		lp.setInt16( 0x2c, struct.hp, true );
		lp.setInt16( 0x2e, struct.maxHP, true );
		lp.setInt16( 0x30, struct.sp, true );
		lp.setInt16( 0x32, struct.maxSP, true );
		lp.setInt32( 0x34, struct.ExpireDate, true );
		lp.setInt16( 0x38, struct.faith, true );
		lp.setInt32( 0x3a, struct.toal_call_num, true );
		lp.setInt32( 0x3e, struct.approval_monster_kill_counter, true );

		return buf;
	},

	0x29d: function PACKET_ZC_MER_SKILLINFO_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.skillList.length * 37 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29d, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// SKILLINFO skillList
		for( var n = 0, p2 = 0; n < struct.skillList.length; n++, p2 += 37 ) {
			lp.setInt16( 0x4 + p2, struct.skillList[n].SKID, true );
			lp.setInt32( 0x6 + p2, struct.skillList[n].type, true );
			lp.setInt16( 0xa + p2, struct.skillList[n].level, true );
			lp.setInt16( 0xc + p2, struct.skillList[n].spcost, true );
			lp.setInt16( 0xe + p2, struct.skillList[n].attackRange, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x10 + p2 + p, struct.skillList[n].skillName[i] ), i++, p += 1 );
			lp.setUint8( 0x28 + p2, struct.skillList[n].upgradable );
		}

		return buf;
	},

	0x29e: function PACKET_ZC_MER_SKILLINFO_UPDATE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29e, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setInt16( 0x4, struct.level, true );
		lp.setInt16( 0x6, struct.spcost, true );
		lp.setInt16( 0x8, struct.attackRange, true );
		lp.setUint8( 0xa, struct.upgradable );

		return buf;
	},

	0x29f: function PACKET_CZ_MER_COMMAND( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x29f, true );
		lp.setUint8( 0x2, struct.command );

		return buf;
	},

	0x2a0: function UNUSED_PACKET_CZ_MER_USE_SKILL( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2a0, true );
		lp.setInt16( 0x2, struct.selectedLevel, true );
		lp.setUint16( 0x4, struct.SKID, true );
		lp.setUint32( 0x6, struct.targetID, true );

		return buf;
	},

	0x2a1: function UNUSED_PACKET_CZ_MER_UPGRADE_SKILLLEVEL( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2a1, true );
		lp.setUint16( 0x2, struct.SKID, true );

		return buf;
	},

	0x2a2: function PACKET_ZC_MER_PAR_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2a2, true );
		lp.setUint16( 0x2, struct.var, true );
		lp.setInt32( 0x4, struct.value, true );

		return buf;
	},

	0x2a3: function PACKET_ZC_GAMEGUARD_LINGO_KEY( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, struct.packetType, true );

		// PGG_LINGO_KEY_TEMP lingoKey
		lp.setUint32( 0x2, struct.lingoKey.dwAlgNum, true );
		lp.setUint32( 0x6, struct.lingoKey.dwAlgKey1, true );
		lp.setUint32( 0xa, struct.lingoKey.dwAlgKey2, true );
		lp.setUint32( 0xe, struct.lingoKey.dwSeed, true );

		return buf;
	},

	0x2a5: function PACKET_CZ_KSY_EVENT( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2a5, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt32( 0x4, struct.count, true );

		return buf;
	},

	0x2aa: function PACKET_ZC_REQ_CASH_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2aa, true );
		lp.setInt16( 0x2, struct.Info, true );

		return buf;
	},

	0x2ab: function PACKET_CZ_ACK_CASH_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 36 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ab, true );
		lp.setInt16( 0x2, struct.Type, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x4 + p, struct.Password[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x14 + p, struct.NewPassword[i] ), i++, p += 1 );

		return buf;
	},

	0x2ac: function PACKET_ZC_RESULT_CASH_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ac, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setInt16( 0x4, struct.ErrorCount, true );

		return buf;
	},

	0x2ad: function PACKET_AC_REQUEST_SECOND_PASSWORD( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ad, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setUint32( 0x4, struct.dwSeed, true );

		return buf;
	},

	0x2b0: function PACKET_CA_LOGIN_HAN( struct ) {

		var buf = new ArrayBuffer( 85 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b0, true );
		lp.setUint32( 0x2, struct.Version, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1e + p, struct.Passwd[i] ), i++, p += 1 );
		lp.setUint8( 0x36, struct.clienttype );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x37 + p, struct.m_szIP[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 13; lp.setUint8( 0x47 + p, struct.m_szMacAddr[i] ), i++, p += 1 );
		lp.setUint8( 0x54, struct.isHanGameUser );

		return buf;
	},

	0x2b1: function PACKET_ZC_ALL_QUEST_LIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.QuestList.length * 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b1, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.questCount, true );

		// PACKET_ZC_QUEST_INFO QuestList
		for( var n = 0, p2 = 0; n < struct.QuestList.length; n++, p2 += 5 ) {
			lp.setUint32( 0x8 + p2, struct.QuestList[n].questID, true );
			lp.setUint8( 0xc + p2, struct.QuestList[n].active );
		}

		return buf;
	},

	0x2b2: function PACKET_ZC_ALL_QUEST_MISSION( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.QuestMissionList.length * 104 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b2, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.count, true );

		// PACKET_ZC_QUEST_MISSION_INFO QuestMissionList
		for( var n = 0, p2 = 0; n < struct.QuestMissionList.length; n++, p2 += 104 ) {
			lp.setUint32( 0x8 + p2, struct.QuestMissionList[n].questID, true );
			lp.setInt32( 0xc + p2, struct.QuestMissionList[n].quest_svrTime, true );
			lp.setInt32( 0x10 + p2, struct.QuestMissionList[n].quest_endTime, true );
			lp.setInt16( 0x14 + p2, struct.QuestMissionList[n].count, true );

			// PACKET_ZC_QUEST_MISSION_INFO QuestMissionList.hunt
			for( var m = 0, p3 = 0; m < 3; m++, p3 += 30 ) {
				lp.setUint32( 0x16 + p2 + p3, struct.QuestMissionList[n].hunt[m].mobGID, true );
				lp.setInt16( 0x1a + p2 + p3, struct.QuestMissionList[n].hunt[m].huntCount, true );
				for( var p = 0, i = 0; i < 24; lp.setUint8( 0x1c + p2 + p3 + p, struct.QuestMissionList[n].hunt[m].mobName[i] ), i++, p += 1 );
			}

		}

		return buf;
	},

	0x2b3: function PACKET_ZC_ADD_QUEST( struct ) {

		var buf = new ArrayBuffer( 107 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b3, true );
		lp.setUint32( 0x2, struct.questID, true );
		lp.setUint8( 0x6, struct.active );
		lp.setInt32( 0x7, struct.quest_svrTime, true );
		lp.setInt32( 0xb, struct.quest_endTime, true );
		lp.setInt16( 0xf, struct.count, true );

		// PACKET_ZC_MISSION_HUNT hunt
		for( var n = 0, p2 = 0; n < 3; n++, p2 += 30 ) {
			lp.setUint32( 0x11 + p2, struct.hunt[n].mobGID, true );
			lp.setInt16( 0x15 + p2, struct.hunt[n].huntCount, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x17 + p2 + p, struct.hunt[n].mobName[i] ), i++, p += 1 );
		}

		return buf;
	},

	0x2b4: function PACKET_ZC_DEL_QUEST( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b4, true );
		lp.setUint32( 0x2, struct.questID, true );

		return buf;
	},

	0x2b5: function PACKET_ZC_UPDATE_MISSION_HUNT( struct ) {

		var buf = new ArrayBuffer( 0x6 + struct.MobHuntList.length * 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b5, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.count, true );

		// PACKET_MOB_HUNTING MobHuntList
		for( var n = 0, p2 = 0; n < struct.MobHuntList.length; n++, p2 += 12 ) {
			lp.setUint32( 0x6 + p2, struct.MobHuntList[n].questID, true );
			lp.setUint32( 0xa + p2, struct.MobHuntList[n].mobGID, true );
			lp.setInt16( 0xe + p2, struct.MobHuntList[n].maxCount, true );
			lp.setInt16( 0x10 + p2, struct.MobHuntList[n].count, true );
		}

		return buf;
	},

	0x2b6: function PACKET_CZ_ACTIVE_QUEST( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b6, true );
		lp.setUint32( 0x2, struct.questID, true );
		lp.setUint8( 0x6, struct.active );

		return buf;
	},

	0x2b7: function PACKET_ZC_ACTIVE_QUEST( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b7, true );
		lp.setUint32( 0x2, struct.questID, true );
		lp.setUint8( 0x6, struct.active );

		return buf;
	},

	0x2b8: function PACKET_ZC_ITEM_PICKUP_PARTY( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b8, true );
		lp.setUint32( 0x2, struct.accountID, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setUint8( 0x9, struct.IsDamaged );
		lp.setUint8( 0xa, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xb, struct.slot.card1, true );
		lp.setUint16( 0xd, struct.slot.card2, true );
		lp.setUint16( 0xf, struct.slot.card3, true );
		lp.setUint16( 0x11, struct.slot.card4, true );
		lp.setUint16( 0x13, struct.location, true );
		lp.setUint8( 0x15, struct.type );

		return buf;
	},

	0x2b9: function PACKET_ZC_SHORTCUT_KEY_LIST( struct ) {

		var buf = new ArrayBuffer( 191 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2b9, true );

		// ShortCutKey ShortCutKey
		for( var n = 0, p2 = 0; n < 27; n++, p2 += 7 ) {
			lp.setUint8( 0x2 + p2, struct.ShortCutKey[n].isSkill );
			lp.setUint32( 0x3 + p2, struct.ShortCutKey[n].ID, true );
			lp.setInt16( 0x7 + p2, struct.ShortCutKey[n].count, true );
		}

		return buf;
	},

	0x2ba: function PACKET_CZ_SHORTCUT_KEY_CHANGE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ba, true );
		lp.setUint16( 0x2, struct.Index, true );

		// ShortCutKey ShortCutKey
		lp.setUint8( 0x4, struct.ShortCutKey.isSkill );
		lp.setUint32( 0x5, struct.ShortCutKey.ID, true );
		lp.setInt16( 0x9, struct.ShortCutKey.count, true );

		return buf;
	},

	0x2bb: function PACKET_ZC_EQUIPITEM_DAMAGED( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2bb, true );
		lp.setUint16( 0x2, struct.wearLocation, true );
		lp.setUint32( 0x4, struct.accountID, true );

		return buf;
	},

	0x2bc: function PACKET_ZC_NOTIFY_PCBANG_PLAYING_TIME( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2bc, true );
		lp.setInt32( 0x2, struct.TimeMinute, true );

		return buf;
	},

	0x2bf: function PACKET_ZC_SRPACKETR2_INIT( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2bf, true );
		lp.setUint16( 0x2, struct.ProtectFactor, true );
		lp.setUint32( 0x4, struct.DeformSeedFactor, true );
		lp.setUint32( 0x8, struct.DeformAddFactor, true );

		return buf;
	},

	0x2c0: function PACKET_CZ_SRPACKETR2_START( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c0, true );
		lp.setUint16( 0x2, struct.ProtectFactor, true );

		return buf;
	},

	0x2c1: function PACKET_ZC_NPC_CHAT( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c1, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.accountID, true );
		lp.setUint32( 0x8, struct.color, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0xc + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x2c2: function PACKET_ZC_FORMATSTRING_MSG( struct ) {

		var buf = new ArrayBuffer( 0x6 + struct.value.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c2, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint16( 0x4, struct.msg, true );
		for( var p = 0, i = 0; i < struct.value.length; lp.setUint8( 0x6 + p, struct.value[i] ), i++, p += 1 );

		return buf;
	},

	0x2c4: function PACKET_CZ_PARTY_JOIN_REQ( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c4, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.characterName[i] ), i++, p += 1 );

		return buf;
	},

	0x2c5: function PACKET_ZC_PARTY_JOIN_REQ_ACK( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c5, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.characterName[i] ), i++, p += 1 );
		lp.setInt32( 0x1a, struct.answer, true );

		return buf;
	},

	0x2c6: function PACKET_ZC_PARTY_JOIN_REQ( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c6, true );
		lp.setUint32( 0x2, struct.GRID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.groupName[i] ), i++, p += 1 );

		return buf;
	},

	0x2c7: function PACKET_CZ_PARTY_JOIN_REQ_ACK( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c7, true );
		lp.setUint32( 0x2, struct.GRID, true );
		lp.setUint8( 0x6, struct.bAccept );

		return buf;
	},

	0x2c8: function PACKET_CZ_PARTY_CONFIG( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c8, true );
		lp.setUint8( 0x2, struct.bRefuseJoinMsg );

		return buf;
	},

	0x2c9: function PACKET_ZC_PARTY_CONFIG( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2c9, true );
		lp.setUint8( 0x2, struct.bRefuseJoinMsg );

		return buf;
	},

	0x2ca: function PACKET_HC_REFUSE_SELECTCHAR( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ca, true );
		lp.setUint8( 0x2, struct.ErrorCode );

		return buf;
	},

	0x2cb: function PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO( struct ) {

		var buf = new ArrayBuffer( 65 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2cb, true );
		for( var p = 0, i = 0; i < 61; lp.setUint8( 0x2 + p, struct.MemorialDungeonName[i] ), i++, p += 1 );
		lp.setInt16( 0x3f, struct.PriorityOrderNum, true );

		return buf;
	},

	0x2cc: function PACKET_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2cc, true );
		lp.setInt16( 0x2, struct.PriorityOrderNum, true );

		return buf;
	},

	0x2cd: function PACKET_ZC_MEMORIALDUNGEON_INFO( struct ) {

		var buf = new ArrayBuffer( 71 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2cd, true );
		for( var p = 0, i = 0; i < 61; lp.setUint8( 0x2 + p, struct.MemorialDungeonName[i] ), i++, p += 1 );
		lp.setUint32( 0x3f, struct.DestroyDate, true );
		lp.setUint32( 0x43, struct.EnterTimeOutDate, true );

		return buf;
	},

	0x2ce: function PACKET_ZC_MEMORIALDUNGEON_NOTIFY( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ce, true );
		lp.setInt32( 0x2, struct.Type, true );
		lp.setUint32( 0x6, struct.EnterLimitDate, true );

		return buf;
	},

	0x2cf: function PACKET_CZ_MEMORIALDUNGEON_COMMAND( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2cf, true );
		lp.setInt32( 0x2, struct.Command, true );

		return buf;
	},

	0x2d0: function PACKET_ZC_EQUIPMENT_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d0, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO301 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 28 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO301 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
			lp.setUint16( 0x1c + p2, struct.ItemInfo[n].bindOnEquipType, true );
			lp.setUint16( 0x1e + p2, struct.ItemInfo[n].wItemSpriteNumber, true );
		}

		return buf;
	},

	0x2d1: function PACKET_ZC_STORE_EQUIPMENT_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d1, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO301 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 28 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO301 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
			lp.setUint16( 0x1c + p2, struct.ItemInfo[n].bindOnEquipType, true );
			lp.setUint16( 0x1e + p2, struct.ItemInfo[n].wItemSpriteNumber, true );
		}

		return buf;
	},

	0x2d2: function PACKET_ZC_CART_EQUIPMENT_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d2, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// EQUIPMENTITEM_EXTRAINFO301 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 28 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0xa + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0xe + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0xf + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO301 ItemInfo.slot
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x16 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x18 + p2, struct.ItemInfo[n].HireExpireDate, true );
			lp.setUint16( 0x1c + p2, struct.ItemInfo[n].bindOnEquipType, true );
			lp.setUint16( 0x1e + p2, struct.ItemInfo[n].wItemSpriteNumber, true );
		}

		return buf;
	},

	0x2d3: function PACKET_ZC_NOTIFY_BIND_ON_EQUIP( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d3, true );
		lp.setUint16( 0x2, struct.index, true );

		return buf;
	},

	0x2d4: function PACKET_ZC_ITEM_PICKUP_ACK3( struct ) {

		var buf = new ArrayBuffer( 29 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d4, true );
		lp.setUint16( 0x2, struct.Index, true );
		lp.setUint16( 0x4, struct.count, true );
		lp.setUint16( 0x6, struct.ITID, true );
		lp.setUint8( 0x8, struct.IsIdentified );
		lp.setUint8( 0x9, struct.IsDamaged );
		lp.setUint8( 0xa, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xb, struct.slot.card1, true );
		lp.setUint16( 0xd, struct.slot.card2, true );
		lp.setUint16( 0xf, struct.slot.card3, true );
		lp.setUint16( 0x11, struct.slot.card4, true );
		lp.setUint16( 0x13, struct.location, true );
		lp.setUint8( 0x15, struct.type );
		lp.setUint8( 0x16, struct.result );
		lp.setInt32( 0x17, struct.HireExpireDate, true );
		lp.setUint16( 0x1b, struct.bindOnEquipType, true );

		return buf;
	},

	0x2d5: function PACKET_ZC_ISVR_DISCONNECT( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d5, true );

		return buf;
	},

	0x2d6: function PACKET_CZ_EQUIPWIN_MICROSCOPE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d6, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x2d7: function PACKET_ZC_EQUIPWIN_MICROSCOPE( struct ) {

		var buf = new ArrayBuffer( 0x2b + struct.ItemInfo.length * 28 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x4 + p, struct.characterName[i] ), i++, p += 1 );
		lp.setInt16( 0x1c, struct.job, true );
		lp.setInt16( 0x1e, struct.head, true );
		lp.setInt16( 0x20, struct.accessory, true );
		lp.setInt16( 0x22, struct.accessory2, true );
		lp.setInt16( 0x24, struct.accessory3, true );
		lp.setInt16( 0x26, struct.headpalette, true );
		lp.setInt16( 0x28, struct.bodypalette, true );
		lp.setUint8( 0x2a, struct.sex );

		// EQUIPMENTITEM_EXTRAINFO301 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 28 ) {
			lp.setInt16( 0x2b + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x2d + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x2f + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x30 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setUint16( 0x31 + p2, struct.ItemInfo[n].location, true );
			lp.setUint16( 0x33 + p2, struct.ItemInfo[n].WearState, true );
			lp.setUint8( 0x35 + p2, struct.ItemInfo[n].IsDamaged );
			lp.setUint8( 0x36 + p2, struct.ItemInfo[n].RefiningLevel );

			// EQUIPMENTITEM_EXTRAINFO301 ItemInfo.slot
			lp.setUint16( 0x37 + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x39 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x3b + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x3d + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x3f + p2, struct.ItemInfo[n].HireExpireDate, true );
			lp.setUint16( 0x43 + p2, struct.ItemInfo[n].bindOnEquipType, true );
			lp.setUint16( 0x45 + p2, struct.ItemInfo[n].wItemSpriteNumber, true );
		}

		return buf;
	},

	0x2d8: function PACKET_CZ_CONFIG( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d8, true );
		lp.setInt32( 0x2, struct.Config, true );
		lp.setInt32( 0x6, struct.Value, true );

		return buf;
	},

	0x2d9: function PACKET_ZC_CONFIG( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2d9, true );
		lp.setInt32( 0x2, struct.Config, true );
		lp.setInt32( 0x6, struct.Value, true );

		return buf;
	},

	0x2da: function PACKET_ZC_CONFIG_NOTIFY( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2da, true );
		lp.setUint8( 0x2, struct.bOpenEquipmentWin );

		return buf;
	},

	0x2db: function PACKET_CZ_BATTLEFIELD_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2db, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x4 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x2dc: function PACKET_ZC_BATTLEFIELD_CHAT( struct ) {

		var buf = new ArrayBuffer( 0x20 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2dc, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.accountID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x8 + p, struct.name[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x20 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x2dd: function PACKET_ZC_BATTLEFIELD_NOTIFY_CAMPINFO( struct ) {

		var buf = new ArrayBuffer( 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2dd, true );
		lp.setUint32( 0x2, struct.accountID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );
		lp.setInt16( 0x1e, struct.camp, true );

		return buf;
	},

	0x2de: function PACKET_ZC_BATTLEFIELD_NOTIFY_POINT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2de, true );
		lp.setInt16( 0x2, struct.pointCampA, true );
		lp.setInt16( 0x4, struct.pointCampB, true );

		return buf;
	},

	0x2df: function PACKET_ZC_BATTLEFIELD_NOTIFY_POSITION( struct ) {

		var buf = new ArrayBuffer( 36 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2df, true );
		lp.setUint32( 0x2, struct.accountID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );
		lp.setUint16( 0x1e, struct.job, true );
		lp.setInt16( 0x20, struct.x, true );
		lp.setInt16( 0x22, struct.y, true );

		return buf;
	},

	0x2e0: function PACKET_ZC_BATTLEFIELD_NOTIFY_HP( struct ) {

		var buf = new ArrayBuffer( 34 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e0, true );
		lp.setUint32( 0x2, struct.accountID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.name[i] ), i++, p += 1 );
		lp.setInt16( 0x1e, struct.hp, true );
		lp.setInt16( 0x20, struct.maxHp, true );

		return buf;
	},

	0x2e1: function PACKET_ZC_NOTIFY_ACT2( struct ) {

		var buf = new ArrayBuffer( 33 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e1, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint32( 0x6, struct.targetGID, true );
		lp.setUint32( 0xa, struct.startTime, true );
		lp.setInt32( 0xe, struct.attackMT, true );
		lp.setInt32( 0x12, struct.attackedMT, true );
		lp.setInt32( 0x16, struct.damage, true );
		lp.setInt16( 0x1a, struct.count, true );
		lp.setUint8( 0x1c, struct.action );
		lp.setInt32( 0x1d, struct.leftDamage, true );

		return buf;
	},

	0x2e6: function PACKET_CZ_BOT_CHECK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e6, true );
		lp.setInt32( 0x2, struct.IsBot, true );

		return buf;
	},

	0x2e7: function PACKET_ZC_MAPPROPERTY( struct ) {

		var buf = new ArrayBuffer( 0x6 + struct.mapInfoTable.length * 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.type, true );
		for( var p = 0, i = 0; i < struct.mapInfoTable.length; lp.setInt32( 0x6 + p, struct.mapInfoTable[i], true ), i++, p += 4 );

		return buf;
	},

	0x2e8: function PACKET_ZC_NORMAL_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e8, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO3 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 22 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO3 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x16 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x2e9: function PACKET_ZC_CART_NORMAL_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2e9, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO3 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 22 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO3 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x16 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x2ea: function PACKET_ZC_STORE_NORMAL_ITEMLIST3( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.ItemInfo.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ea, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// NORMALITEM_EXTRAINFO3 ItemInfo
		for( var n = 0, p2 = 0; n < struct.ItemInfo.length; n++, p2 += 22 ) {
			lp.setInt16( 0x4 + p2, struct.ItemInfo[n].index, true );
			lp.setUint16( 0x6 + p2, struct.ItemInfo[n].ITID, true );
			lp.setUint8( 0x8 + p2, struct.ItemInfo[n].type );
			lp.setUint8( 0x9 + p2, struct.ItemInfo[n].IsIdentified );
			lp.setInt16( 0xa + p2, struct.ItemInfo[n].count, true );
			lp.setUint16( 0xc + p2, struct.ItemInfo[n].WearState, true );

			// NORMALITEM_EXTRAINFO3 ItemInfo.slot
			lp.setUint16( 0xe + p2, struct.ItemInfo[n].slot.card1, true );
			lp.setUint16( 0x10 + p2, struct.ItemInfo[n].slot.card2, true );
			lp.setUint16( 0x12 + p2, struct.ItemInfo[n].slot.card3, true );
			lp.setUint16( 0x14 + p2, struct.ItemInfo[n].slot.card4, true );
			lp.setInt32( 0x16 + p2, struct.ItemInfo[n].HireExpireDate, true );
		}

		return buf;
	},

	0x2eb: function PACKET_ZC_ACCEPT_ENTER2( struct ) {

		var buf = new ArrayBuffer( 13 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2eb, true );
		lp.setUint32( 0x2, struct.startTime, true );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x6 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x9, struct.xSize );
		lp.setUint8( 0xa, struct.ySize );
		lp.setInt16( 0xb, struct.font, true );

		return buf;
	},

	0x2ec: function PACKET_ZC_NOTIFY_MOVEENTRY4( struct ) {

		var buf = new ArrayBuffer( 67 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ec, true );
		lp.setUint8( 0x2, struct.objecttype );
		lp.setUint32( 0x3, struct.GID, true );
		lp.setInt16( 0x7, struct.speed, true );
		lp.setInt16( 0x9, struct.bodyState, true );
		lp.setInt16( 0xb, struct.healthState, true );
		lp.setInt32( 0xd, struct.effectState, true );
		lp.setInt16( 0x11, struct.job, true );
		lp.setInt16( 0x13, struct.head, true );
		lp.setInt32( 0x15, struct.weapon, true );
		lp.setInt16( 0x19, struct.accessory, true );
		lp.setUint32( 0x1b, struct.moveStartTime, true );
		lp.setInt16( 0x1f, struct.accessory2, true );
		lp.setInt16( 0x21, struct.accessory3, true );
		lp.setInt16( 0x23, struct.headpalette, true );
		lp.setInt16( 0x25, struct.bodypalette, true );
		lp.setInt16( 0x27, struct.headDir, true );
		lp.setUint32( 0x29, struct.GUID, true );
		lp.setInt16( 0x2d, struct.GEmblemVer, true );
		lp.setInt16( 0x2f, struct.honor, true );
		lp.setInt32( 0x31, struct.virtue, true );
		lp.setUint8( 0x35, struct.isPKModeON );
		lp.setUint8( 0x36, struct.sex );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x37 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint8( 0x3d, struct.xSize );
		lp.setUint8( 0x3e, struct.ySize );
		lp.setInt16( 0x3f, struct.clevel, true );
		lp.setInt16( 0x41, struct.font, true );

		return buf;
	},

	0x2ed: function PACKET_ZC_NOTIFY_NEWENTRY4( struct ) {

		var buf = new ArrayBuffer( 59 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ed, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt32( 0xc, struct.effectState, true );
		lp.setInt16( 0x10, struct.job, true );
		lp.setInt16( 0x12, struct.head, true );
		lp.setInt32( 0x14, struct.weapon, true );
		lp.setInt16( 0x18, struct.accessory, true );
		lp.setInt16( 0x1a, struct.accessory2, true );
		lp.setInt16( 0x1c, struct.accessory3, true );
		lp.setInt16( 0x1e, struct.headpalette, true );
		lp.setInt16( 0x20, struct.bodypalette, true );
		lp.setInt16( 0x22, struct.headDir, true );
		lp.setUint32( 0x24, struct.GUID, true );
		lp.setInt16( 0x28, struct.GEmblemVer, true );
		lp.setInt16( 0x2a, struct.honor, true );
		lp.setInt32( 0x2c, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x32 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x35, struct.xSize );
		lp.setUint8( 0x36, struct.ySize );
		lp.setInt16( 0x37, struct.clevel, true );
		lp.setInt16( 0x39, struct.font, true );

		return buf;
	},

	0x2ee: function PACKET_ZC_NOTIFY_STANDENTRY4( struct ) {

		var buf = new ArrayBuffer( 60 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ee, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt16( 0x6, struct.speed, true );
		lp.setInt16( 0x8, struct.bodyState, true );
		lp.setInt16( 0xa, struct.healthState, true );
		lp.setInt32( 0xc, struct.effectState, true );
		lp.setInt16( 0x10, struct.job, true );
		lp.setInt16( 0x12, struct.head, true );
		lp.setInt32( 0x14, struct.weapon, true );
		lp.setInt16( 0x18, struct.accessory, true );
		lp.setInt16( 0x1a, struct.accessory2, true );
		lp.setInt16( 0x1c, struct.accessory3, true );
		lp.setInt16( 0x1e, struct.headpalette, true );
		lp.setInt16( 0x20, struct.bodypalette, true );
		lp.setInt16( 0x22, struct.headDir, true );
		lp.setUint32( 0x24, struct.GUID, true );
		lp.setInt16( 0x28, struct.GEmblemVer, true );
		lp.setInt16( 0x2a, struct.honor, true );
		lp.setInt32( 0x2c, struct.virtue, true );
		lp.setUint8( 0x30, struct.isPKModeON );
		lp.setUint8( 0x31, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x32 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x35, struct.xSize );
		lp.setUint8( 0x36, struct.ySize );
		lp.setUint8( 0x37, struct.state );
		lp.setInt16( 0x38, struct.clevel, true );
		lp.setInt16( 0x3a, struct.font, true );

		return buf;
	},

	0x2ef: function PACKET_ZC_NOTIFY_FONT( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2ef, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.font, true );

		return buf;
	},

	0x2f0: function PACKET_ZC_PROGRESS( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2f0, true );
		lp.setUint32( 0x2, struct.color, true );
		lp.setUint32( 0x6, struct.time, true );

		return buf;
	},

	0x2f1: function PACKET_CZ_PROGRESS( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2f1, true );

		return buf;
	},

	0x2f2: function PACKET_ZC_PROGRESS_CANCEL( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x2f2, true );

		return buf;
	},

	0x35c: function PACKET_CZ_OPEN_SIMPLE_CASHSHOP_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x35c, true );

		return buf;
	},

	0x35d: function PACKET_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x10 + struct.ItemList.length * 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x35d, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.CashPoint, true );
		lp.setInt16( 0x8, struct.md_itemcount, true );
		lp.setInt16( 0xa, struct.md_itemSize, true );
		lp.setInt16( 0xc, struct.best_itemcount, true );
		lp.setInt16( 0xe, struct.best_itemsize, true );

		// PURCHASE_ITEM ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 11 ) {
			lp.setInt32( 0x10 + p2, struct.ItemList[n].price, true );
			lp.setInt32( 0x14 + p2, struct.ItemList[n].discountprice, true );
			lp.setUint8( 0x18 + p2, struct.ItemList[n].type );
			lp.setUint16( 0x19 + p2, struct.ItemList[n].ITID, true );
		}

		return buf;
	},

	0x35e: function PACKET_CZ_CLOSE_WINDOW( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x35e, true );

		return buf;
	},

	0x3dd: function PACKET_AHC_GAME_GUARD( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x3dd, true );
		for( var p = 0, i = 0; i < 4; lp.setUint32( 0x2 + p, struct.AuthData[i], true ), i++, p += 4 );

		return buf;
	},

	0x3de: function PACKET_CAH_ACK_GAME_GUARD( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x3de, true );
		for( var p = 0, i = 0; i < 4; lp.setUint32( 0x2 + p, struct.AuthData[i], true ), i++, p += 4 );

		return buf;
	},

	0x436: function PACKET_CZ_ENTER2( struct ) {

		var buf = new ArrayBuffer( 19 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x436, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.GID, true );
		lp.setInt32( 0xa, struct.AuthCode, true );
		lp.setUint32( 0xe, struct.clientTime, true );
		lp.setUint8( 0x12, struct.Sex );

		return buf;
	},

	0x437: function PACKET_CZ_REQUEST_ACT2( struct ) {

		var buf = new ArrayBuffer( 7 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x437, true );
		lp.setUint32( 0x2, struct.targetGID, true );
		lp.setUint8( 0x6, struct.action );

		return buf;
	},

	0x438: function PACKET_CZ_USE_SKILL2( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x438, true );
		lp.setInt16( 0x2, struct.selectedLevel, true );
		lp.setUint16( 0x4, struct.SKID, true );
		lp.setUint32( 0x6, struct.targetID, true );

		return buf;
	},

	0x439: function PACKET_CZ_USE_ITEM2( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x439, true );
		lp.setUint16( 0x2, struct.index, true );
		lp.setUint32( 0x4, struct.AID, true );

		return buf;
	},

	0x43d: function PACKET_ZC_SKILL_POSTDELAY( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x43d, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setUint32( 0x4, struct.DelayTM, true );

		return buf;
	},

	0x43e: function PACKET_ZC_SKILL_POSTDELAY_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.delayList.length * 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x43e, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// SKILL_POSTDELAY delayList
		for( var n = 0, p2 = 0; n < struct.delayList.length; n++, p2 += 6 ) {
			lp.setUint16( 0x4 + p2, struct.delayList[n].SKID, true );
			lp.setUint32( 0x6 + p2, struct.delayList[n].DelayTM, true );
		}

		return buf;
	},

	0x43f: function PACKET_ZC_MSG_STATE_CHANGE2( struct ) {

		var buf = new ArrayBuffer( 25 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x43f, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint8( 0x8, struct.state );
		lp.setUint32( 0x9, struct.RemainMS, true );
		for( var p = 0, i = 0; i < 3; lp.setInt32( 0xd + p, struct.val[i], true ), i++, p += 4 );

		return buf;
	},

	0x440: function PACKET_ZC_MILLENNIUMSHIELD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x440, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt16( 0x6, struct.num, true );
		lp.setInt16( 0x8, struct.state, true );

		return buf;
	},

	0x441: function PACKET_ZC_SKILLINFO_DELETE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x441, true );
		lp.setUint16( 0x2, struct.SKID, true );

		return buf;
	},

	0x442: function PACKET_ZC_SKILL_SELECT_REQUEST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.SKIDList.length * 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x442, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.why, true );
		for( var p = 0, i = 0; i < struct.SKIDList.length; lp.setUint16( 0x8 + p, struct.SKIDList[i], true ), i++, p += 2 );

		return buf;
	},

	0x443: function PACKET_CZ_SKILL_SELECT_RESPONSE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x443, true );
		lp.setInt32( 0x2, struct.why, true );
		lp.setUint16( 0x6, struct.SKID, true );

		return buf;
	},

	0x444: function PACKET_ZC_SIMPLE_CASH_POINT_ITEMLIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.ItemList.length * 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x444, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.CashPoint, true );

		// PURCHASE_ITEM ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 11 ) {
			lp.setInt32( 0x8 + p2, struct.ItemList[n].price, true );
			lp.setInt32( 0xc + p2, struct.ItemList[n].discountprice, true );
			lp.setUint8( 0x10 + p2, struct.ItemList[n].type );
			lp.setUint16( 0x11 + p2, struct.ItemList[n].ITID, true );
		}

		return buf;
	},

	0x445: function PACKET_CZ_SIMPLE_BUY_CASH_POINT_ITEM( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x445, true );
		lp.setUint16( 0x2, struct.ITID, true );
		lp.setInt16( 0x4, struct.count, true );

		return buf;
	},

	0x446: function PACKET_ZC_QUEST_NOTIFY_EFFECT( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x446, true );
		lp.setUint32( 0x2, struct.npcID, true );
		lp.setInt16( 0x6, struct.xPos, true );
		lp.setInt16( 0x8, struct.yPos, true );
		lp.setInt16( 0xa, struct.effect, true );
		lp.setInt16( 0xc, struct.type, true );

		return buf;
	},

	0x447: function PACKET_CZ_BLOCKING_PLAY_CANCEL( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x447, true );

		return buf;
	},

	0x448: function PACKET_HC_CHARACTER_LIST( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.CharacterList.length * 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x448, true );
		lp.setInt16( 0x2, buf.byteLength, true );

		// CHARACTER_LIST CharacterList
		for( var n = 0, p2 = 0; n < struct.CharacterList.length; n++, p2 += 5 ) {
			lp.setUint32( 0x4 + p2, struct.CharacterList[n].dwGID, true );
			lp.setUint8( 0x8 + p2, struct.CharacterList[n].SlotIdx );
		}

		return buf;
	},

	0x449: function PACKET_ZC_HACKSH_ERROR_MSG( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x449, true );
		lp.setInt16( 0x2, struct.ErrorID, true );

		return buf;
	},

	0x44a: function PACKET_CZ_CLIENT_VERSION( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x44a, true );
		lp.setInt32( 0x2, struct.clientVer, true );

		return buf;
	},

	0x44b: function PACKET_CZ_CLOSE_SIMPLECASH_SHOP( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x44b, true );

		return buf;
	},

	0x7d0: function PACKET_ZC_ES_RESULT( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d0, true );
		lp.setInt16( 0x2, struct.esNo, true );
		lp.setInt16( 0x4, struct.esMsg, true );

		return buf;
	},

	0x7d1: function PACKET_CZ_ES_GET_LIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d1, true );

		return buf;
	},

	0x7d2: function PACKET_ZC_ES_LIST( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d2, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.Count, true );

		return buf;
	},

	0x7d3: function PACKET_CZ_ES_CHOOSE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d3, true );
		lp.setInt16( 0x2, struct.esNo, true );

		return buf;
	},

	0x7d4: function PACKET_CZ_ES_CANCEL( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d4, true );
		lp.setInt16( 0x2, struct.esNo, true );

		return buf;
	},

	0x7d5: function PACKET_ZC_ES_READY( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d5, true );
		lp.setInt16( 0x2, struct.esNo, true );

		return buf;
	},

	0x7d6: function PACKET_ZC_ES_GOTO( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d6, true );
		lp.setInt16( 0x2, struct.esNo, true );

		return buf;
	},

	0x7d7: function PACKET_CZ_GROUPINFO_CHANGE_V2( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d7, true );
		lp.setUint32( 0x2, struct.expOption, true );
		lp.setUint8( 0x6, struct.ItemPickupRule );
		lp.setUint8( 0x7, struct.ItemDivisionRule );

		return buf;
	},

	0x7d8: function PACKET_ZC_REQ_GROUPINFO_CHANGE_V2( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d8, true );
		lp.setUint32( 0x2, struct.expOption, true );
		lp.setUint8( 0x6, struct.ItemPickupRule );
		lp.setUint8( 0x7, struct.ItemDivisionRule );

		return buf;
	},

	0x7d9: function PACKET_ZC_SHORTCUT_KEY_LIST_V2( struct ) {

		var buf = new ArrayBuffer( 268 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7d9, true );

		// ShortCutKey ShortCutKey
		for( var n = 0, p2 = 0; n < 38; n++, p2 += 7 ) {
			lp.setUint8( 0x2 + p2, struct.ShortCutKey[n].isSkill );
			lp.setUint32( 0x3 + p2, struct.ShortCutKey[n].ID, true );
			lp.setInt16( 0x7 + p2, struct.ShortCutKey[n].count, true );
		}

		return buf;
	},

	0x7da: function PACKET_CZ_CHANGE_GROUP_MASTER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7da, true );
		lp.setUint32( 0x2, struct.AID, true );

		return buf;
	},

	0x7db: function PACKET_ZC_HO_PAR_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7db, true );
		lp.setUint16( 0x2, struct.var, true );
		lp.setInt32( 0x4, struct.value, true );

		return buf;
	},

	0x7dc: function PACKET_CZ_SEEK_PARTY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7dc, true );
		lp.setUint32( 0x2, struct.Option, true );

		return buf;
	},

	0x7dd: function PACKET_ZC_SEEK_PARTY( struct ) {

		var buf = new ArrayBuffer( 54 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7dd, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		lp.setUint32( 0x1a, struct.Job, true );
		lp.setUint32( 0x1e, struct.Level, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x22 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setUint32( 0x32, struct.Option, true );

		return buf;
	},

	0x7de: function PACKET_CZ_SEEK_PARTY_MEMBER( struct ) {

		var buf = new ArrayBuffer( 30 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7de, true );
		lp.setUint32( 0x2, struct.Job, true );
		lp.setUint32( 0x6, struct.Level, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0xa + p, struct.mapName[i] ), i++, p += 1 );
		lp.setUint32( 0x1a, struct.Option, true );

		return buf;
	},

	0x7df: function PACKET_ZC_SEEK_PARTY_MEMBER( struct ) {

		var buf = new ArrayBuffer( 54 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7df, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.Name[i] ), i++, p += 1 );
		lp.setUint32( 0x1a, struct.Job, true );
		lp.setUint32( 0x1e, struct.Level, true );
		for( var p = 0, i = 0; i < 16; lp.setUint8( 0x22 + p, struct.mapName[i] ), i++, p += 1 );
		lp.setUint32( 0x32, struct.Option, true );

		return buf;
	},

	0x7e0: function PACKET_ZC_ES_NOTI_MYINFO( struct ) {

		var buf = new ArrayBuffer( 58 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e0, true );
		lp.setInt16( 0x2, struct.esNo, true );
		for( var p = 0, i = 0; i < 54; lp.setUint8( 0x4 + p, struct.esname[i] ), i++, p += 1 );

		return buf;
	},

	0x7e1: function PACKET_ZC_SKILLINFO_UPDATE2( struct ) {

		var buf = new ArrayBuffer( 15 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e1, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setInt32( 0x4, struct.type, true );
		lp.setInt16( 0x8, struct.level, true );
		lp.setInt16( 0xa, struct.spcost, true );
		lp.setInt16( 0xc, struct.attackRange, true );
		lp.setUint8( 0xe, struct.upgradable );

		return buf;
	},

	0x7e2: function PACKET_ZC_MSG_VALUE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e2, true );
		lp.setUint16( 0x2, struct.msg, true );
		lp.setInt32( 0x4, struct.value, true );

		return buf;
	},

	0x7e3: function PACKET_ZC_ITEMLISTWIN_OPEN( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e3, true );
		lp.setInt32( 0x2, struct.Type, true );

		return buf;
	},

	0x7e4: function PACKET_CZ_ITEMLISTWIN_RES( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e4, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.Type, true );
		lp.setInt32( 0x8, struct.Action, true );
		lp.setUint16( 0xc, struct.MaterialList, true );

		return buf;
	},

	0x7e5: function PACKET_CH_ENTER_CHECKBOT( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.szStringInfo.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e5, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.dwAID, true );
		for( var p = 0, i = 0; i < struct.szStringInfo.length; lp.setUint8( 0x8 + p, struct.szStringInfo[i] ), i++, p += 1 );

		return buf;
	},

	0x7e6: function PACKET_ZC_MSG_SKILL( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e6, true );
		lp.setUint16( 0x2, struct.SKID, true );
		lp.setInt32( 0x4, struct.MSGID, true );

		return buf;
	},

	0x7e7: function PACKET_CH_CHECKBOT( struct ) {

		var buf = new ArrayBuffer( 32 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.dwAID, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x8 + p, struct.szStringInfo[i] ), i++, p += 1 );

		return buf;
	},

	0x7e8: function PACKET_HC_CHECKBOT( struct ) {

		var buf = new ArrayBuffer( 0x4 + struct.img.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e8, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		for( var p = 0, i = 0; i < struct.img.length; lp.setUint8( 0x4 + p, struct.img[i] ), i++, p += 1 );

		return buf;
	},

	0x7e9: function PACKET_HC_CHECKBOT_RESULT( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7e9, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.Result );

		return buf;
	},

	0x7ea: function PACKET_CZ_BATTLE_FIELD_LIST( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ea, true );

		return buf;
	},

	0x7eb: function PACKET_ZC_BATTLE_FIELD_LIST( struct ) {

		var buf = new ArrayBuffer( 0x8 + struct.InfoList.length * 62 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7eb, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt16( 0x4, struct.Count, true );
		lp.setInt16( 0x6, struct.ack_type, true );

		// BATTLE_FIELD_INFO InfoList
		for( var n = 0, p2 = 0; n < struct.InfoList.length; n++, p2 += 62 ) {
			lp.setUint32( 0x8 + p2, struct.InfoList[n].BFNO, true );
			for( var p = 0, i = 0; i < 56; lp.setUint8( 0xc + p2 + p, struct.InfoList[n].BattleFieldName[i] ), i++, p += 1 );
			lp.setInt16( 0x44 + p2, struct.InfoList[n].JoinTeam, true );
		}

		return buf;
	},

	0x7ec: function PACKET_CZ_JOIN_BATTLE_FIELD( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ec, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.JoinTeam, true );

		return buf;
	},

	0x7ed: function PACKET_ZC_JOIN_BATTLE_FIELD( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ed, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.JoinTeam, true );
		lp.setInt16( 0x8, struct.Result, true );

		return buf;
	},

	0x7ee: function PACKET_CZ_CANCEL_BATTLE_FIELD( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ee, true );
		lp.setUint32( 0x2, struct.BFNO, true );

		return buf;
	},

	0x7ef: function PACKET_ZC_CANCEL_BATTLE_FIELD( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ef, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.Result, true );

		return buf;
	},

	0x7f0: function PACKET_CZ_REQ_BATTLE_STATE_MONITOR( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f0, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.PowerSwitch, true );

		return buf;
	},

	0x7f1: function PACKET_ZC_ACK_BATTLE_STATE_MONITOR( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f1, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.PlayCount, true );
		lp.setInt16( 0x8, struct.BattleState, true );
		lp.setInt16( 0xa, struct.TeamCount_A, true );
		lp.setInt16( 0xc, struct.TeamCount_B, true );
		lp.setInt16( 0xe, struct.MyCount, true );
		lp.setInt16( 0x10, struct.JoinTeam, true );

		return buf;
	},

	0x7f2: function PACKET_ZC_BATTLE_NOTI_START_STEP( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f2, true );
		lp.setUint32( 0x2, struct.BFNO, true );
		lp.setInt16( 0x6, struct.Result, true );

		return buf;
	},

	0x7f3: function PACKET_ZC_BATTLE_JOIN_NOTI_DEFER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f3, true );
		lp.setUint32( 0x2, struct.BFNO, true );

		return buf;
	},

	0x7f4: function PACKET_ZC_BATTLE_JOIN_DISABLE_STATE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f4, true );
		lp.setUint8( 0x2, struct.Enable );

		return buf;
	},

	0x7f5: function PACKET_CZ_GM_FULLSTRIP( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f5, true );
		lp.setUint32( 0x2, struct.TargetAID, true );

		return buf;
	},

	0x7f6: function PACKET_ZC_NOTIFY_EXP( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f6, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.amount, true );
		lp.setUint16( 0xa, struct.varID, true );
		lp.setInt16( 0xc, struct.expType, true );

		return buf;
	},

	0x7f7: function PACKET_ZC_NOTIFY_MOVEENTRY7( struct ) {

		var buf = new ArrayBuffer( 93 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f7, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.objecttype );
		lp.setUint32( 0x5, struct.GID, true );
		lp.setInt16( 0x9, struct.speed, true );
		lp.setInt16( 0xb, struct.bodyState, true );
		lp.setInt16( 0xd, struct.healthState, true );
		lp.setInt32( 0xf, struct.effectState, true );
		lp.setInt16( 0x13, struct.job, true );
		lp.setInt16( 0x15, struct.head, true );
		lp.setInt32( 0x17, struct.weapon, true );
		lp.setInt16( 0x1b, struct.accessory, true );
		lp.setUint32( 0x1d, struct.moveStartTime, true );
		lp.setInt16( 0x21, struct.accessory2, true );
		lp.setInt16( 0x23, struct.accessory3, true );
		lp.setInt16( 0x25, struct.headpalette, true );
		lp.setInt16( 0x27, struct.bodypalette, true );
		lp.setInt16( 0x29, struct.headDir, true );
		lp.setUint32( 0x2b, struct.GUID, true );
		lp.setInt16( 0x2f, struct.GEmblemVer, true );
		lp.setInt16( 0x31, struct.honor, true );
		lp.setInt32( 0x33, struct.virtue, true );
		lp.setUint8( 0x37, struct.isPKModeON );
		lp.setUint8( 0x38, struct.sex );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x39 + p, struct.MoveData[i] ), i++, p += 1 );
		lp.setUint8( 0x3f, struct.xSize );
		lp.setUint8( 0x40, struct.ySize );
		lp.setInt16( 0x41, struct.clevel, true );
		lp.setInt16( 0x43, struct.font, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x45 + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x7f8: function PACKET_ZC_NOTIFY_NEWENTRY5( struct ) {

		var buf = new ArrayBuffer( 86 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f8, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.objecttype );
		lp.setUint32( 0x5, struct.GID, true );
		lp.setInt16( 0x9, struct.speed, true );
		lp.setInt16( 0xb, struct.bodyState, true );
		lp.setInt16( 0xd, struct.healthState, true );
		lp.setInt32( 0xf, struct.effectState, true );
		lp.setInt16( 0x13, struct.job, true );
		lp.setInt16( 0x15, struct.head, true );
		lp.setInt32( 0x17, struct.weapon, true );
		lp.setInt16( 0x1b, struct.accessory, true );
		lp.setInt16( 0x1d, struct.accessory2, true );
		lp.setInt16( 0x1f, struct.accessory3, true );
		lp.setInt16( 0x21, struct.headpalette, true );
		lp.setInt16( 0x23, struct.bodypalette, true );
		lp.setInt16( 0x25, struct.headDir, true );
		lp.setUint32( 0x27, struct.GUID, true );
		lp.setInt16( 0x2b, struct.GEmblemVer, true );
		lp.setInt16( 0x2d, struct.honor, true );
		lp.setInt32( 0x2f, struct.virtue, true );
		lp.setUint8( 0x33, struct.isPKModeON );
		lp.setUint8( 0x34, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x35 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x38, struct.xSize );
		lp.setUint8( 0x39, struct.ySize );
		lp.setInt16( 0x3a, struct.clevel, true );
		lp.setInt16( 0x3c, struct.font, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x3e + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x7f9: function PACKET_ZC_NOTIFY_STANDENTRY5( struct ) {

		var buf = new ArrayBuffer( 87 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7f9, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.objecttype );
		lp.setUint32( 0x5, struct.GID, true );
		lp.setInt16( 0x9, struct.speed, true );
		lp.setInt16( 0xb, struct.bodyState, true );
		lp.setInt16( 0xd, struct.healthState, true );
		lp.setInt32( 0xf, struct.effectState, true );
		lp.setInt16( 0x13, struct.job, true );
		lp.setInt16( 0x15, struct.head, true );
		lp.setInt32( 0x17, struct.weapon, true );
		lp.setInt16( 0x1b, struct.accessory, true );
		lp.setInt16( 0x1d, struct.accessory2, true );
		lp.setInt16( 0x1f, struct.accessory3, true );
		lp.setInt16( 0x21, struct.headpalette, true );
		lp.setInt16( 0x23, struct.bodypalette, true );
		lp.setInt16( 0x25, struct.headDir, true );
		lp.setUint32( 0x27, struct.GUID, true );
		lp.setInt16( 0x2b, struct.GEmblemVer, true );
		lp.setInt16( 0x2d, struct.honor, true );
		lp.setInt32( 0x2f, struct.virtue, true );
		lp.setUint8( 0x33, struct.isPKModeON );
		lp.setUint8( 0x34, struct.sex );
		for( var p = 0, i = 0; i < 3; lp.setUint8( 0x35 + p, struct.PosDir[i] ), i++, p += 1 );
		lp.setUint8( 0x38, struct.xSize );
		lp.setUint8( 0x39, struct.ySize );
		lp.setUint8( 0x3a, struct.state );
		lp.setInt16( 0x3b, struct.clevel, true );
		lp.setInt16( 0x3d, struct.font, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x3f + p, struct.name[i] ), i++, p += 1 );

		return buf;
	},

	0x7fa: function PACKET_ZC_DELETE_ITEM_FROM_BODY( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7fa, true );
		lp.setInt16( 0x2, struct.DeleteType, true );
		lp.setUint16( 0x4, struct.Index, true );
		lp.setInt16( 0x6, struct.Count, true );

		return buf;
	},

	0x7fb: function PACKET_ZC_USESKILL_ACK2( struct ) {

		var buf = new ArrayBuffer( 25 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7fb, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.targetID, true );
		lp.setInt16( 0xa, struct.xPos, true );
		lp.setInt16( 0xc, struct.yPos, true );
		lp.setUint16( 0xe, struct.SKID, true );
		lp.setUint32( 0x10, struct.property, true );
		lp.setUint32( 0x14, struct.delayTime, true );
		lp.setUint8( 0x18, struct.isDisposable );

		return buf;
	},

	0x7fc: function PACKET_ZC_CHANGE_GROUP_MASTER( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7fc, true );
		lp.setUint32( 0x2, struct.OldMasterAID, true );
		lp.setUint32( 0x6, struct.NewMasterAID, true );

		return buf;
	},

	0x7fe: function PACKET_ZC_PLAY_NPC_BGM( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7fe, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.Bgm[i] ), i++, p += 1 );

		return buf;
	},

	0x7ff: function PACKET_ZC_DEFINE_CHECK( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x7ff, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setInt32( 0x4, struct.Result, true );

		return buf;
	},

	0x800: function PACKET_ZC_PC_PURCHASE_ITEMLIST_FROMMC2( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.itemList.length * 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x800, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.UniqueID, true );

		// PURCHASE_ITEM_FROMMC itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 22 ) {
			lp.setInt32( 0xc + p2, struct.itemList[n].price, true );
			lp.setInt16( 0x10 + p2, struct.itemList[n].count, true );
			lp.setInt16( 0x12 + p2, struct.itemList[n].index, true );
			lp.setUint8( 0x14 + p2, struct.itemList[n].type );
			lp.setUint16( 0x15 + p2, struct.itemList[n].ITID, true );
			lp.setUint8( 0x17 + p2, struct.itemList[n].IsIdentified );
			lp.setUint8( 0x18 + p2, struct.itemList[n].IsDamaged );
			lp.setUint8( 0x19 + p2, struct.itemList[n].refiningLevel );

			// PURCHASE_ITEM_FROMMC itemList.slot
			lp.setUint16( 0x1a + p2, struct.itemList[n].slot.card1, true );
			lp.setUint16( 0x1c + p2, struct.itemList[n].slot.card2, true );
			lp.setUint16( 0x1e + p2, struct.itemList[n].slot.card3, true );
			lp.setUint16( 0x20 + p2, struct.itemList[n].slot.card4, true );
		}

		return buf;
	},

	0x801: function PACKET_CZ_PC_PURCHASE_ITEMLIST_FROMMC2( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.itemList.length * 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x801, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setUint32( 0x8, struct.UniqueID, true );

		// CZ_PURCHASE_ITEM_FROMMC itemList
		for( var n = 0, p2 = 0; n < struct.itemList.length; n++, p2 += 4 ) {
			lp.setInt16( 0xc + p2, struct.itemList[n].count, true );
			lp.setInt16( 0xe + p2, struct.itemList[n].index, true );
		}

		return buf;
	},

	0x802: function PACKET_CZ_PARTY_BOOKING_REQ_REGISTER( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x802, true );

		// PARTY_BOOKING_DETAIL RegisterInfo
		lp.setInt16( 0x2, struct.RegisterInfo.Level, true );
		lp.setInt16( 0x4, struct.RegisterInfo.MapID, true );
		for( var p = 0, i = 0; i < 6; lp.setInt16( 0x6 + p, struct.RegisterInfo.Job[i], true ), i++, p += 2 );

		return buf;
	},

	0x803: function PACKET_ZC_PARTY_BOOKING_ACK_REGISTER( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x803, true );
		lp.setInt16( 0x2, struct.Result, true );

		return buf;
	},

	0x804: function PACKET_CZ_PARTY_BOOKING_REQ_SEARCH( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x804, true );
		lp.setInt16( 0x2, struct.Level, true );
		lp.setInt16( 0x4, struct.MapID, true );
		lp.setInt16( 0x6, struct.Job, true );
		lp.setUint32( 0x8, struct.LastIndex, true );
		lp.setInt16( 0xc, struct.ResultCount, true );

		return buf;
	},

	0x805: function PACKET_ZC_PARTY_BOOKING_ACK_SEARCH( struct ) {

		var buf = new ArrayBuffer( 0x5 + struct.Info.length * 48 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x805, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.IsExistMoreResult );

		// PARTY_BOOKING_AD_INFO Info
		for( var n = 0, p2 = 0; n < struct.Info.length; n++, p2 += 48 ) {
			lp.setUint32( 0x5 + p2, struct.Info[n].Index, true );
			for( var p = 0, i = 0; i < 24; lp.setUint8( 0x9 + p2 + p, struct.Info[n].CharName[i] ), i++, p += 1 );
			lp.setInt32( 0x21 + p2, struct.Info[n].ExpireTime, true );

			// PARTY_BOOKING_AD_INFO Info.Detail
			lp.setInt16( 0x25 + p2, struct.Info[n].Detail.Level, true );
			lp.setInt16( 0x27 + p2, struct.Info[n].Detail.MapID, true );
			for( var p = 0, i = 0; i < 6; lp.setInt16( 0x29 + p2 + p, struct.Info[n].Detail.Job[i], true ), i++, p += 2 );
		}

		return buf;
	},

	0x806: function PACKET_CZ_PARTY_BOOKING_REQ_DELETE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x806, true );

		return buf;
	},

	0x807: function PACKET_ZC_PARTY_BOOKING_ACK_DELETE( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x807, true );
		lp.setInt16( 0x2, struct.Result, true );

		return buf;
	},

	0x808: function PACKET_CZ_PARTY_BOOKING_REQ_UPDATE( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x808, true );
		for( var p = 0, i = 0; i < 6; lp.setInt16( 0x2 + p, struct.Job[i], true ), i++, p += 2 );

		return buf;
	},

	0x809: function PACKET_ZC_PARTY_BOOKING_NOTIFY_INSERT( struct ) {

		var buf = new ArrayBuffer( 50 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x809, true );

		// PARTY_BOOKING_AD_INFO Info
		lp.setUint32( 0x2, struct.Info.Index, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x6 + p, struct.Info.CharName[i] ), i++, p += 1 );
		lp.setInt32( 0x1e, struct.Info.ExpireTime, true );

		// PARTY_BOOKING_AD_INFO Info.Detail
		lp.setInt16( 0x22, struct.Info.Detail.Level, true );
		lp.setInt16( 0x24, struct.Info.Detail.MapID, true );
		lp.setInt16( 0x26, struct.Info.Detail.Job1, true );
		lp.setInt16( 0x28, struct.Info.Detail.Job2, true );
		lp.setInt16( 0x2a, struct.Info.Detail.Job3, true );
		lp.setInt16( 0x2c, struct.Info.Detail.Job4, true );
		lp.setInt16( 0x2e, struct.Info.Detail.Job5, true );
		lp.setInt16( 0x30, struct.Info.Detail.Job6, true );

		return buf;
	},

	0x80a: function PACKET_ZC_PARTY_BOOKING_NOTIFY_UPDATE( struct ) {

		var buf = new ArrayBuffer( 18 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80a, true );
		lp.setUint32( 0x2, struct.Index, true );
		lp.setInt16( 0x6, struct.Job1, true );
		lp.setInt16( 0x8, struct.Job2, true );
		lp.setInt16( 0xa, struct.Job3, true );
		lp.setInt16( 0xc, struct.Job4, true );
		lp.setInt16( 0xe, struct.Job5, true );
		lp.setInt16( 0x10, struct.Job6, true );

		return buf;
	},

	0x80b: function PACKET_ZC_PARTY_BOOKING_NOTIFY_DELETE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80b, true );
		lp.setUint32( 0x2, struct.Index, true );

		return buf;
	},

	0x80c: function PACKET_CZ_SIMPLE_CASH_BTNSHOW( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80c, true );

		return buf;
	},

	0x80d: function PACKET_ZC_SIMPLE_CASH_BTNSHOW( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80d, true );
		lp.setUint8( 0x2, struct.show );

		return buf;
	},

	0x80e: function PACKET_ZC_NOTIFY_HP_TO_GROUPM_R2( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80e, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.hp, true );
		lp.setInt32( 0xa, struct.maxhp, true );

		return buf;
	},

	0x80f: function PACKET_ZC_ADD_EXCHANGE_ITEM2( struct ) {

		var buf = new ArrayBuffer( 20 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x80f, true );
		lp.setUint16( 0x2, struct.ITID, true );
		lp.setUint8( 0x4, struct.type );
		lp.setInt32( 0x5, struct.count, true );
		lp.setUint8( 0x9, struct.IsIdentified );
		lp.setUint8( 0xa, struct.IsDamaged );
		lp.setUint8( 0xb, struct.refiningLevel );

		// EQUIPSLOTINFO slot
		lp.setUint16( 0xc, struct.slot.card1, true );
		lp.setUint16( 0xe, struct.slot.card2, true );
		lp.setUint16( 0x10, struct.slot.card3, true );
		lp.setUint16( 0x12, struct.slot.card4, true );

		return buf;
	},

	0x810: function PACKET_ZC_OPEN_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x810, true );
		lp.setUint8( 0x2, struct.count );

		return buf;
	},

	0x811: function PACKET_CZ_REQ_OPEN_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 0x59 + struct.ItemList.length * 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x811, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.LimitZeny, true );
		lp.setUint8( 0x8, struct.result );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x9 + p, struct.storeName[i] ), i++, p += 1 );

		// PRODUCTINFO_IN_BUYING_STORE ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 8 ) {
			lp.setUint16( 0x59 + p2, struct.ItemList[n].ITID, true );
			lp.setInt16( 0x5b + p2, struct.ItemList[n].count, true );
			lp.setInt32( 0x5d + p2, struct.ItemList[n].price, true );
		}

		return buf;
	},

	0x812: function PACKET_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x812, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setInt32( 0x4, struct.total_weight, true );

		return buf;
	},

	0x813: function PACKET_ZC_MYITEMLIST_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.ItemList.length * 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x813, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.AID, true );
		lp.setInt32( 0x8, struct.limitZeny, true );

		// BUYING_STORE_ITEMLIST ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 9 ) {
			lp.setInt32( 0xc + p2, struct.ItemList[n].price, true );
			lp.setInt16( 0x10 + p2, struct.ItemList[n].count, true );
			lp.setUint8( 0x12 + p2, struct.ItemList[n].type );
			lp.setUint16( 0x13 + p2, struct.ItemList[n].ITID, true );
		}

		return buf;
	},

	0x814: function PACKET_ZC_BUYING_STORE_ENTRY( struct ) {

		var buf = new ArrayBuffer( 86 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x814, true );
		lp.setUint32( 0x2, struct.makerAID, true );
		for( var p = 0, i = 0; i < 80; lp.setUint8( 0x6 + p, struct.storeName[i] ), i++, p += 1 );

		return buf;
	},

	0x815: function PACKET_CZ_REQ_CLOSE_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x815, true );

		return buf;
	},

	0x816: function PACKET_ZC_DISAPPEAR_BUYING_STORE_ENTRY( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x816, true );
		lp.setUint32( 0x2, struct.makerAID, true );

		return buf;
	},

	0x817: function PACKET_CZ_REQ_CLICK_TO_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x817, true );
		lp.setUint32( 0x2, struct.makerAID, true );

		return buf;
	},

	0x818: function PACKET_ZC_ACK_ITEMLIST_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 0x10 + struct.ItemList.length * 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x818, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.makerAID, true );
		lp.setUint32( 0x8, struct.StoreID, true );
		lp.setInt32( 0xc, struct.limitZeny, true );

		// BUYING_STORE_ITEMLIST ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 9 ) {
			lp.setInt32( 0x10 + p2, struct.ItemList[n].price, true );
			lp.setInt16( 0x14 + p2, struct.ItemList[n].count, true );
			lp.setUint8( 0x16 + p2, struct.ItemList[n].type );
			lp.setUint16( 0x17 + p2, struct.ItemList[n].ITID, true );
		}

		return buf;
	},

	0x819: function PACKET_CZ_REQ_TRADE_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 0xc + struct.ItemList.length * 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x819, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.makerAID, true );
		lp.setUint32( 0x8, struct.StoreID, true );

		// TRADE_ITEM_BUYING_STORE ItemList
		for( var n = 0, p2 = 0; n < struct.ItemList.length; n++, p2 += 6 ) {
			lp.setUint16( 0xc + p2, struct.ItemList[n].index, true );
			lp.setUint16( 0xe + p2, struct.ItemList[n].ITID, true );
			lp.setInt16( 0x10 + p2, struct.ItemList[n].count, true );
		}

		return buf;
	},

	0x81a: function PACKET_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81a, true );
		lp.setInt16( 0x2, struct.Result, true );

		return buf;
	},

	0x81b: function PACKET_ZC_UPDATE_ITEM_FROM_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81b, true );
		lp.setUint16( 0x2, struct.ITID, true );
		lp.setInt16( 0x4, struct.count, true );
		lp.setInt32( 0x6, struct.limitZeny, true );

		return buf;
	},

	0x81c: function PACKET_ZC_ITEM_DELETE_BUYING_STORE( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81c, true );
		lp.setInt16( 0x2, struct.index, true );
		lp.setInt16( 0x4, struct.count, true );
		lp.setInt32( 0x6, struct.zeny, true );

		return buf;
	},

	0x81d: function PACKET_ZC_EL_INIT( struct ) {

		var buf = new ArrayBuffer( 22 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81d, true );
		lp.setInt32( 0x2, struct.AID, true );
		lp.setInt32( 0x6, struct.hp, true );
		lp.setInt32( 0xa, struct.maxHP, true );
		lp.setInt32( 0xe, struct.sp, true );
		lp.setInt32( 0x12, struct.maxSP, true );

		return buf;
	},

	0x81e: function PACKET_ZC_EL_PAR_CHANGE( struct ) {

		var buf = new ArrayBuffer( 8 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x81e, true );
		lp.setUint16( 0x2, struct.var, true );
		lp.setInt32( 0x4, struct.value, true );

		return buf;
	},

	0x81f: function PACKET_ZC_BROADCAST4( struct ) {

		var buf = new ArrayBuffer( 0x9 + struct.msg.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, struct.PakcetType, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.Msgtype );
		lp.setUint32( 0x5, struct.ColorRGB, true );
		for( var p = 0, i = 0; i < struct.msg.length; lp.setUint8( 0x9 + p, struct.msg[i] ), i++, p += 1 );

		return buf;
	},

	0x820: function PACKET_ZC_COSTUME_SPRITE_CHANGE( struct ) {

		var buf = new ArrayBuffer( 11 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x820, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setUint8( 0x6, struct.type );
		lp.setInt32( 0x7, struct.value, true );

		return buf;
	},

	0x821: function PACKET_AC_OTP_USER( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x821, true );

		return buf;
	},

	0x822: function PACKET_CA_OTP_AUTH_REQ( struct ) {

		var buf = new ArrayBuffer( 9 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x822, true );
		for( var p = 0, i = 0; i < 7; lp.setUint8( 0x2 + p, struct.OTPCode[i] ), i++, p += 1 );

		return buf;
	},

	0x823: function PACKET_AC_OTP_AUTH_ACK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x823, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint16( 0x4, struct.LoginResult, true );

		return buf;
	},

	0x824: function PACKET_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x824, true );
		lp.setInt16( 0x2, struct.Result, true );
		lp.setUint16( 0x4, struct.ITID, true );

		return buf;
	},

	0x825a: function PACKET_CA_SSO_LOGIN_REQa( struct ) {

		var buf = new ArrayBuffer( 0x41 + struct.t1.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x825a, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.Version, true );
		lp.setUint8( 0x8, struct.clienttype );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x9 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 17; lp.setUint8( 0x21 + p, struct.MacAddr[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 15; lp.setUint8( 0x32 + p, struct.IpAddr[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.t1.length; lp.setUint8( 0x41 + p, struct.t1[i] ), i++, p += 1 );

		return buf;
	},

	0x825: function PACKET_CA_SSO_LOGIN_REQ( struct ) {

		var buf = new ArrayBuffer( 0x5c + struct.t1.length * 1 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x825, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint32( 0x4, struct.Version, true );
		lp.setUint8( 0x8, struct.clienttype );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x9 + p, struct.ID[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 27; lp.setUint8( 0x21 + p, struct.Passwd[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 17; lp.setUint8( 0x3c + p, struct.MacAdress[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 15; lp.setUint8( 0x4d + p, struct.IP[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < struct.t1.length; lp.setUint8( 0x5c + p, struct.t1[i] ), i++, p += 1 );

		return buf;
	},

	0x826: function PACKET_AC_SSO_LOGIN_ACK( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x826, true );
		lp.setUint16( 0x2, struct.Result, true );

		return buf;
	},

	0x827: function PACKET_CH_DELETE_CHAR3_RESERVED( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x827, true );
		lp.setUint32( 0x2, struct.GID, true );

		return buf;
	},

	0x828: function PACKET_HC_DELETE_CHAR3_RESERVED( struct ) {

		var buf = new ArrayBuffer( 14 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x828, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt32( 0x6, struct.Result, true );
		lp.setInt32( 0xa, struct.DeleteReservedDate, true );

		return buf;
	},

	0x829: function PACKET_CH_DELETE_CHAR3( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x829, true );
		lp.setUint32( 0x2, struct.GID, true );
		for( var p = 0, i = 0; i < 6; lp.setUint8( 0x6 + p, struct.Birth[i] ), i++, p += 1 );

		return buf;
	},

	0x82a: function PACKET_HC_DELETE_CHAR3( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x82a, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt32( 0x6, struct.Result, true );

		return buf;
	},

	0x82b: function PACKET_CH_DELETE_CHAR3_CANCEL( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x82b, true );
		lp.setUint32( 0x2, struct.GID, true );

		return buf;
	},

	0x82c: function PACKET_HC_DELETE_CHAR3_CANCEL( struct ) {

		var buf = new ArrayBuffer( 10 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x82c, true );
		lp.setUint32( 0x2, struct.GID, true );
		lp.setInt32( 0x6, struct.Result, true );

		return buf;
	},

	0x835: function PACKET_CZ_SEARCH_STORE_INFO( struct ) {

		var buf = new ArrayBuffer( 15 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x835, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.StoreType );
		lp.setUint32( 0x5, struct.maxPrice, true );
		lp.setUint32( 0x9, struct.minPrice, true );
		lp.setUint8( 0xd, struct.ItemIDListSize );
		lp.setUint8( 0xe, struct.CardIDListSize );

		return buf;
	},

	0x836: function PACKET_ZC_SEARCH_STORE_INFO_ACK( struct ) {

		var buf = new ArrayBuffer( 0x7 + struct.SSI_List.length * 106 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x836, true );
		lp.setInt16( 0x2, buf.byteLength, true );
		lp.setUint8( 0x4, struct.IsFirstPage );
		lp.setUint8( 0x5, struct.IsNexPage );
		lp.setUint8( 0x6, struct.RemainedSearchCnt );

		// ResultItemInfo SSI_List
		for( var n = 0, p2 = 0; n < struct.SSI_List.length; n++, p2 += 106 ) {
			lp.setUint32( 0x7 + p2, struct.SSI_List[n].SSI_ID, true );
			lp.setUint32( 0xb + p2, struct.SSI_List[n].AID, true );
			for( var p = 0, i = 0; i < 80; lp.setUint8( 0xf + p2 + p, struct.SSI_List[n].StoreName[i] ), i++, p += 1 );
			lp.setUint16( 0x5f + p2, struct.SSI_List[n].ITID, true );
			lp.setUint8( 0x61 + p2, struct.SSI_List[n].ItemType );
			lp.setInt32( 0x62 + p2, struct.SSI_List[n].price, true );
			lp.setUint16( 0x66 + p2, struct.SSI_List[n].count, true );
			lp.setUint8( 0x68 + p2, struct.SSI_List[n].refiningLevel );
			lp.setUint16( 0x69 + p2, struct.SSI_List[n].card1, true );
			lp.setUint16( 0x6b + p2, struct.SSI_List[n].card2, true );
			lp.setUint16( 0x6d + p2, struct.SSI_List[n].card3, true );
			lp.setUint16( 0x6f + p2, struct.SSI_List[n].card4, true );
		}

		return buf;
	},

	0x837: function PACKET_ZC_SEARCH_STORE_INFO_FAILED( struct ) {

		var buf = new ArrayBuffer( 3 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x837, true );
		lp.setUint8( 0x2, struct.Reason );

		return buf;
	},

	0x838: function PACKET_CZ_SEARCH_STORE_INFO_NEXT_PAGE( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x838, true );

		return buf;
	},

	0x839: function PACKET_ZC_ACK_BAN_GUILD_SSO( struct ) {

		var buf = new ArrayBuffer( 66 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x839, true );
		for( var p = 0, i = 0; i < 24; lp.setUint8( 0x2 + p, struct.charName[i] ), i++, p += 1 );
		for( var p = 0, i = 0; i < 40; lp.setUint8( 0x1a + p, struct.reasonDesc[i] ), i++, p += 1 );

		return buf;
	},

	0x83a: function PACKET_ZC_OPEN_SEARCH_STORE_INFO( struct ) {

		var buf = new ArrayBuffer( 5 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83a, true );
		lp.setInt16( 0x2, struct.OpenType, true );
		lp.setUint8( 0x4, struct.SearchCntMax );

		return buf;
	},

	0x83b: function PACKET_CZ_CLOSE_SEARCH_STORE_INFO( struct ) {

		var buf = new ArrayBuffer( 2 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83b, true );

		return buf;
	},

	0x83c: function PACKET_CZ_SSILIST_ITEM_CLICK( struct ) {

		var buf = new ArrayBuffer( 12 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83c, true );
		lp.setUint32( 0x2, struct.AID, true );
		lp.setUint32( 0x6, struct.SSI_ID, true );
		lp.setUint16( 0xa, struct.ITID, true );

		return buf;
	},

	0x83d: function PACKET_ZC_SSILIST_ITEM_CLICK_ACK( struct ) {

		var buf = new ArrayBuffer( 6 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83d, true );
		lp.setInt16( 0x2, struct.x, true );
		lp.setInt16( 0x4, struct.y, true );

		return buf;
	},

	0x83e: function PACKET_AC_REFUSE_LOGIN_R2( struct ) {

		var buf = new ArrayBuffer( 26 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x83e, true );
		lp.setUint32( 0x2, struct.ErrorCode, true );
		for( var p = 0, i = 0; i < 20; lp.setUint8( 0x6 + p, struct.blockDate[i] ), i++, p += 1 );

		return buf;
	},

	0x841: function PACKET_CH_SELECT_ACCESSIBLE_MAPNAME( struct ) {

		var buf = new ArrayBuffer( 4 );
		var lp = new DataView( buf );

		lp.setInt16( 0x0, 0x841, true );
		lp.setUint8( 0x2, struct.CharNum );
		lp.setUint8( 0x3, struct.mapListNum );

		return buf;
	}
};